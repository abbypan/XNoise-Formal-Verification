File "pv/NX-N'X'.xnoise.active.pv", line 5, characters 5-24:
Warning: Setting expandIfTermsToTerms is deprecated.
File "pv/NX-N'X'.xnoise.active.pv", line 224, characters 7-8:
Warning: identifier ck rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 233, characters 7-8:
Warning: identifier ck rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 234, characters 7-8:
Warning: identifier cs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 234, character 36:
Warning: identifier h rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 273, character 6:
Warning: identifier e rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 274, characters 6-7:
Warning: identifier ne rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 275, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 277, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 277, characters 26-35:
Warning: identifier ciphertext rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 278, characters 6-7:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 285, character 6:
Warning: identifier e rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 286, characters 6-7:
Warning: identifier ne rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 289, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 291, character 6:
Warning: identifier s rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 292, characters 26-27:
Warning: identifier ns rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 293, character 6:
Warning: identifier m rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 294, characters 26-27:
Warning: identifier nm rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 297, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 298, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 298, characters 26-35:
Warning: identifier ciphertext rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 299, characters 6-7:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 307, characters 26-35:
Warning: identifier ciphertext rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 308, characters 6-7:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 315, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 315, characters 26-35:
Warning: identifier ciphertext rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 316, characters 6-7:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 324, characters 6-7:
Warning: identifier re rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 325, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 329, characters 13-14:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 338, characters 6-7:
Warning: identifier re rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 342, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 342, characters 26-27:
Warning: identifier ne rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 342, characters 40-45:
Warning: identifier valid1 rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 343, characters 6-7:
Warning: identifier rs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 344, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 344, characters 26-27:
Warning: identifier ne rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 344, characters 40-45:
Warning: identifier valid2 rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 345, characters 6-7:
Warning: identifier rm rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 347, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 350, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 355, characters 13-14:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 364, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 366, characters 13-14:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 374, characters 7-8:
Warning: identifier ss rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 376, characters 13-14:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 534, characters 7-8:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 536, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 527, characters 7-8:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 528, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 521, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 514, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 577, characters 7-8:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 578, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 569, characters 7-8:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 571, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 563, characters 8-9:
Warning: identifier hs rebound.
File "pv/NX-N'X'.xnoise.active.pv", line 557, characters 8-9:
Warning: identifier hs rebound.
Linear part:
dhexp_real(b,dhexp_real(a,g)) = dhexp_real(a,dhexp_real(b,g))
Completing equations...
Completed equations:
dhexp_real(b,dhexp_real(a,g)) = dhexp_real(a,dhexp_real(b,g))
Convergent part: No equation.
Process 0 (that is, the initial process):
{1}out(pub, (key_s(charlie),key_m(charlie)));
{2}!
{3}new sid: sessionid;
(
    {4}let me: principal = alice in
    {5}let them: principal = bob in
    {6}let sid_1: sessionid = sid in
    {7}let s: keypair = keypairpack(empty,empty) in
    {8}let m: keypair = keypairpack(empty,empty) in
    (
        {9}let e: keypair = keypairpack(empty,empty) in
        {10}let rs: key = empty in
        {11}let rm: key = empty in
        {12}let re: key = empty in
        {13}let prologue: bitstring = empty in
        {14}let psk: key = empty in
        {15}let protocol_name: bitstring = somename in
        {16}let h: bitstring = hash(protocol_name,empty) in
        {17}let ck: key = h in
        {18}let k: key = empty in
        {19}let cs: cipherstate = cipherstatepack(k,minnonce) in
        {20}let ss: symmetricstate = symmetricstatepack(cs,ck,h) in
        {21}let v: bitstring = catch-fail(symmetricstateunpack(ss)) in
        {22}let v_1: bool = (not-caught-fail(v) && success?(1-proj-3-tuple(v))) in
        {23}let h_1: bitstring = (if v_1 then 3-proj-3-tuple(v) else caught-fail) in
        {24}let ck_1: key = (if v_1 then 2-proj-3-tuple(v) else caught-fail) in
        {25}let cs_1: cipherstate = (if v_1 then 1-proj-3-tuple(v) else caught-fail) in
        {26}let ss_1: symmetricstate = catch-fail((if v_1 then symmetricstatepack(cs_1,ck_1,hash(h_1,prologue)) else fail-any)) in
        {27}let v_2: bool = not-caught-fail(ss_1) in
        {28}let hs: handshakestate = (if v_2 then handshakestatepack(ss_1,s,m,e,rs,rm,re,psk,true) else fail-any) in
        {29}insert statestore(me,them,sid_1,statepack_a(hs))
    ) | (
        {100}get statestore(=me,=them,=sid_1,statepack_a(hs_1: handshakestate)) in
        {30}let payload: bitstring = msg_a(me,them,sid_1) in
        {31}let v_3: bitstring = catch-fail(handshakestateunpack(hs_1)) in
        {32}let v_4: bool = (not-caught-fail(v_3) && success?(1-proj-9-tuple(v_3))) in
        {33}let initiator_1: bool = (if v_4 then 9-proj-9-tuple(v_3) else caught-fail) in
        {34}let psk_1: key = (if v_4 then 8-proj-9-tuple(v_3) else caught-fail) in
        {35}let re_1: key = (if v_4 then 7-proj-9-tuple(v_3) else caught-fail) in
        {36}let rm_1: key = (if v_4 then 6-proj-9-tuple(v_3) else caught-fail) in
        {37}let rs_1: key = (if v_4 then 5-proj-9-tuple(v_3) else caught-fail) in
        {38}let e_1: keypair = (if v_4 then 4-proj-9-tuple(v_3) else caught-fail) in
        {39}let m_1: keypair = (if v_4 then 3-proj-9-tuple(v_3) else caught-fail) in
        {40}let s_1: keypair = (if v_4 then 2-proj-9-tuple(v_3) else caught-fail) in
        {41}let ss_2: symmetricstate = (if v_4 then 1-proj-9-tuple(v_3) else caught-fail) in
        {42}let v_5: bitstring = (if v_4 then catch-fail((empty,empty,empty)) else caught-fail) in
        {43}let v_6: bool = (not-caught-fail(v_5) && success?(1-proj-3-tuple(v_5))) in
        {44}let ciphertext: bitstring = (if v_6 then 3-proj-3-tuple(v_5) else caught-fail) in
        {45}let ns: bitstring = (if v_6 then 2-proj-3-tuple(v_5) else caught-fail) in
        {46}let ne: bitstring = (if v_6 then 1-proj-3-tuple(v_5) else caught-fail) in
        {47}let basis: key = (if v_6 then key_e(me,them,sid_1) else caught-fail) in
        {48}let public_key: key = (if v_6 then catch-fail(dhexp(basis,validkey(g))) else caught-fail) in
        {49}let v_7: bool = not-caught-fail(public_key) in
        {50}let e_2: keypair = (if v_6 then catch-fail((if v_7 then keypairpack(validkey(public_key),basis) else fail-any)) else caught-fail) in
        {51}let v_8: bool = not-caught-fail(e_2) in
        {52}let ne_1: bitstring = (if v_8 then catch-fail(getpublickey(e_2)) else caught-fail) in
        {53}let v_9: bool = not-caught-fail(ne_1) in
        {54}let v_10: bitstring = (if v_9 then catch-fail(symmetricstateunpack(ss_2)) else caught-fail) in
        {55}let v_11: bool = (not-caught-fail(v_10) && success?(1-proj-3-tuple(v_10))) in
        {56}let h_2: bitstring = (if v_11 then 3-proj-3-tuple(v_10) else caught-fail) in
        {57}let ck_2: key = (if v_11 then 2-proj-3-tuple(v_10) else caught-fail) in
        {58}let cs_2: cipherstate = (if v_11 then 1-proj-3-tuple(v_10) else caught-fail) in
        {59}let ss_3: symmetricstate = (if v_9 then catch-fail((if v_11 then symmetricstatepack(cs_2,ck_2,hash(h_2,ne_1)) else fail-any)) else caught-fail) in
        {60}let v_12: bool = not-caught-fail(ss_3) in
        {61}let v_13: bitstring = (if v_12 then catch-fail(symmetricstateunpack(ss_3)) else caught-fail) in
        {62}let v_14: bool = (not-caught-fail(v_13) && success?(1-proj-3-tuple(v_13))) in
        {63}let h_3: bitstring = (if v_14 then 3-proj-3-tuple(v_13) else caught-fail) in
        {64}let ck_3: key = (if v_14 then 2-proj-3-tuple(v_13) else caught-fail) in
        {65}let cs_3: cipherstate = (if v_14 then 1-proj-3-tuple(v_13) else caught-fail) in
        {66}let v_15: bitstring = (if v_14 then catch-fail(cipherstateunpack(cs_3)) else caught-fail) in
        {67}let v_16: bool = (not-caught-fail(v_15) && success?(1-proj-2-tuple(v_15))) in
        {68}let n: nonce = (if v_16 then 2-proj-2-tuple(v_15) else caught-fail) in
        {69}let k_1: key = (if v_16 then 1-proj-2-tuple(v_15) else caught-fail) in
        {70}let e_3: bitstring = (if v_16 then encrypt(k_1,n,h_3,payload) else caught-fail) in
        {71}let n_1: nonce = (if v_16 then increment_nonce(n) else caught-fail) in
        {72}let v_17: bitstring = (if v_16 then catch-fail(cipherstateunpack(cs_3)) else caught-fail) in
        {73}let v_18: bool = (not-caught-fail(v_17) && success?(1-proj-2-tuple(v_17))) in
        {74}let o: nonce = (if v_18 then 2-proj-2-tuple(v_17) else caught-fail) in
        {75}let k_2: key = (if v_18 then 1-proj-2-tuple(v_17) else caught-fail) in
        {76}let csi: cipherstate = (if v_16 then catch-fail((if v_18 then cipherstatepack(k_2,n_1) else fail-any)) else caught-fail) in
        {77}let v_19: bool = not-caught-fail(csi) in
        {78}let v_20: bitstring = (if v_14 then catch-fail((if v_16 then (if v_19 then (csi,e_3) else fail-any) else fail-any)) else caught-fail) in
        {79}let v_21: bool = (not-caught-fail(v_20) && success?(1-proj-2-tuple(v_20))) in
        {80}let ciphertext_1: bitstring = (if v_21 then 2-proj-2-tuple(v_20) else caught-fail) in
        {81}let csi_1: cipherstate = (if v_21 then 1-proj-2-tuple(v_20) else caught-fail) in
        {82}let ss_4: symmetricstate = (if v_21 then symmetricstatepack(csi_1,ck_3,h_3) else caught-fail) in
        {83}let v_22: bitstring = (if v_21 then catch-fail(symmetricstateunpack(ss_4)) else caught-fail) in
        {84}let v_23: bool = (not-caught-fail(v_22) && success?(1-proj-3-tuple(v_22))) in
        {85}let h_4: bitstring = (if v_23 then 3-proj-3-tuple(v_22) else caught-fail) in
        {86}let ck_4: key = (if v_23 then 2-proj-3-tuple(v_22) else caught-fail) in
        {87}let cs_4: cipherstate = (if v_23 then 1-proj-3-tuple(v_22) else caught-fail) in
        {88}let ssi: symmetricstate = (if v_21 then catch-fail((if v_23 then symmetricstatepack(cs_4,ck_4,hash(h_4,ciphertext_1)) else fail-any)) else caught-fail) in
        {89}let v_24: bool = not-caught-fail(ssi) in
        {90}let v_25: bitstring = (if v_12 then catch-fail((if v_14 then (if v_21 then (if v_24 then (ssi,ciphertext_1) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {91}let v_26: bool = (not-caught-fail(v_25) && success?(1-proj-2-tuple(v_25))) in
        {92}let ciphertext_2: bitstring = (if v_26 then 2-proj-2-tuple(v_25) else caught-fail) in
        {93}let ss_5: symmetricstate = (if v_26 then 1-proj-2-tuple(v_25) else caught-fail) in
        {94}let hs_2: handshakestate = (if v_26 then handshakestatepack(ss_5,s_1,m_1,e_2,rs_1,rm_1,re_1,psk_1,initiator_1) else caught-fail) in
        {95}let message_buffer: bitstring = (if v_26 then concat3(ne_1,ns,ciphertext_2) else caught-fail) in
        {96}let (hs_3: handshakestate,message_a: bitstring) = (if v_4 then (if v_6 then (if v_8 then (if v_9 then (if v_12 then (if v_26 then (hs_2,message_buffer) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {97}event SendMsg(me,them,stagepack_a(sid_1),msg_a(me,them,sid_1));
        {98}insert statestore(me,them,sid_1,statepack_b(hs_3));
        {99}out(pub, message_a)
    ) | (
        {349}get statestore(=me,=them,=sid_1,statepack_b(hs_4: handshakestate)) in
        {101}in(pub, message_b: bitstring);
        {102}let v_27: bitstring = catch-fail(handshakestateunpack(hs_4)) in
        {103}let v_28: bool = (not-caught-fail(v_27) && success?(1-proj-9-tuple(v_27))) in
        {104}let initiator_2: bool = (if v_28 then 9-proj-9-tuple(v_27) else caught-fail) in
        {105}let psk_2: key = (if v_28 then 8-proj-9-tuple(v_27) else caught-fail) in
        {106}let re_2: key = (if v_28 then 7-proj-9-tuple(v_27) else caught-fail) in
        {107}let rm_2: key = (if v_28 then 6-proj-9-tuple(v_27) else caught-fail) in
        {108}let rs_2: key = (if v_28 then 5-proj-9-tuple(v_27) else caught-fail) in
        {109}let e_4: keypair = (if v_28 then 4-proj-9-tuple(v_27) else caught-fail) in
        {110}let m_2: keypair = (if v_28 then 3-proj-9-tuple(v_27) else caught-fail) in
        {111}let s_2: keypair = (if v_28 then 2-proj-9-tuple(v_27) else caught-fail) in
        {112}let ss_6: symmetricstate = (if v_28 then 1-proj-9-tuple(v_27) else caught-fail) in
        {113}let v_29: bitstring = (if v_28 then catch-fail(deconcat4(message_b)) else caught-fail) in
        {114}let v_30: bool = (not-caught-fail(v_29) && success?(1-proj-4-tuple(v_29))) in
        {115}let ciphertext_3: bitstring = (if v_30 then 4-proj-4-tuple(v_29) else caught-fail) in
        {116}let nm: bitstring = (if v_30 then 3-proj-4-tuple(v_29) else caught-fail) in
        {117}let ns_1: bitstring = (if v_30 then 2-proj-4-tuple(v_29) else caught-fail) in
        {118}let ne_2: bitstring = (if v_30 then 1-proj-4-tuple(v_29) else caught-fail) in
        {119}let valid1: bool = (if v_30 then true else caught-fail) in
        {120}let valid2: bool = (if v_30 then true else caught-fail) in
        {121}let re_3: key = (if v_30 then ne_2 else caught-fail) in
        {122}let v_31: bitstring = (if v_30 then catch-fail(symmetricstateunpack(ss_6)) else caught-fail) in
        {123}let v_32: bool = (not-caught-fail(v_31) && success?(1-proj-3-tuple(v_31))) in
        {124}let h_5: bitstring = (if v_32 then 3-proj-3-tuple(v_31) else caught-fail) in
        {125}let ck_5: key = (if v_32 then 2-proj-3-tuple(v_31) else caught-fail) in
        {126}let cs_5: cipherstate = (if v_32 then 1-proj-3-tuple(v_31) else caught-fail) in
        {127}let ss_7: symmetricstate = (if v_30 then catch-fail((if v_32 then symmetricstatepack(cs_5,ck_5,hash(h_5,re_3)) else fail-any)) else caught-fail) in
        {128}let v_33: bool = not-caught-fail(ss_7) in
        {129}let v_34: bitstring = (if v_33 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {130}let v_35: bool = (not-caught-fail(v_34) && success?(1-proj-2-tuple(v_34))) in
        {131}let my_private_key: key = (if v_35 then 2-proj-2-tuple(v_34) else caught-fail) in
        {132}let my_public_key: key = (if v_35 then 1-proj-2-tuple(v_34) else caught-fail) in
        {133}let input_key_material: key = (if v_33 then catch-fail((if v_35 then dhexp(my_private_key,re_3) else fail-any)) else caught-fail) in
        {134}let v_36: bool = not-caught-fail(input_key_material) in
        {135}let v_37: bitstring = (if v_36 then catch-fail(symmetricstateunpack(ss_7)) else caught-fail) in
        {136}let v_38: bool = (not-caught-fail(v_37) && success?(1-proj-3-tuple(v_37))) in
        {137}let h_6: bitstring = (if v_38 then 3-proj-3-tuple(v_37) else caught-fail) in
        {138}let ck_6: key = (if v_38 then 2-proj-3-tuple(v_37) else caught-fail) in
        {139}let cs_6: cipherstate = (if v_38 then 1-proj-3-tuple(v_37) else caught-fail) in
        {140}let output1: key = (if v_38 then hmac_hash1(ck_6,input_key_material) else caught-fail) in
        {141}let output2: key = (if v_38 then hmac_hash2(ck_6,input_key_material) else caught-fail) in
        {142}let output3: key = (if v_38 then hmac_hash3(ck_6,input_key_material) else caught-fail) in
        {143}let v_39: bitstring = (if v_38 then catch-fail((output1,output2,output3)) else caught-fail) in
        {144}let v_40: bool = (not-caught-fail(v_39) && success?(1-proj-3-tuple(v_39))) in
        {145}let output_3: key = (if v_40 then 3-proj-3-tuple(v_39) else caught-fail) in
        {146}let temp_k: key = (if v_40 then 2-proj-3-tuple(v_39) else caught-fail) in
        {147}let ck_7: key = (if v_40 then 1-proj-3-tuple(v_39) else caught-fail) in
        {148}let ss_8: symmetricstate = (if v_33 then catch-fail((if v_36 then (if v_38 then (if v_40 then symmetricstatepack(cipherstatepack(temp_k,minnonce),ck_7,h_6) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {149}let v_41: bool = not-caught-fail(ss_8) in
        {150}let v_42: bitstring = (if v_41 then catch-fail(symmetricstateunpack(ss_8)) else caught-fail) in
        {151}let v_43: bool = (not-caught-fail(v_42) && success?(1-proj-3-tuple(v_42))) in
        {152}let h_7: bitstring = (if v_43 then 3-proj-3-tuple(v_42) else caught-fail) in
        {153}let ck_8: key = (if v_43 then 2-proj-3-tuple(v_42) else caught-fail) in
        {154}let cs_7: cipherstate = (if v_43 then 1-proj-3-tuple(v_42) else caught-fail) in
        {155}let v_44: bitstring = (if v_43 then catch-fail(cipherstateunpack(cs_7)) else caught-fail) in
        {156}let v_45: bool = (not-caught-fail(v_44) && success?(1-proj-2-tuple(v_44))) in
        {157}let n_2: nonce = (if v_45 then 2-proj-2-tuple(v_44) else caught-fail) in
        {158}let k_3: key = (if v_45 then 1-proj-2-tuple(v_44) else caught-fail) in
        {159}let d: aead = (if v_45 then catch-fail(decrypt(k_3,n_2,h_7,ns_1)) else caught-fail) in
        {160}let v_46: bool = not-caught-fail(d) in
        {161}let v_47: bitstring = (if v_46 then catch-fail(aeadunpack(d)) else caught-fail) in
        {162}let v_48: bool = (not-caught-fail(v_47) && success?(1-proj-3-tuple(v_47))) in
        {163}let plaintext: bitstring = (if v_48 then 3-proj-3-tuple(v_47) else caught-fail) in
        {164}let adi: bitstring = (if v_48 then 2-proj-3-tuple(v_47) else caught-fail) in
        {165}let valid: bool = (if v_48 then 1-proj-3-tuple(v_47) else caught-fail) in
        {166}let n_3: nonce = (if v_48 then increment_nonce(n_2) else caught-fail) in
        {167}let v_49: bitstring = (if v_48 then catch-fail(cipherstateunpack(cs_7)) else caught-fail) in
        {168}let v_50: bool = (not-caught-fail(v_49) && success?(1-proj-2-tuple(v_49))) in
        {169}let o_1: nonce = (if v_50 then 2-proj-2-tuple(v_49) else caught-fail) in
        {170}let k_4: key = (if v_50 then 1-proj-2-tuple(v_49) else caught-fail) in
        {171}let csi_2: cipherstate = (if v_48 then catch-fail((if v_50 then cipherstatepack(k_4,n_3) else fail-any)) else caught-fail) in
        {172}let v_51: bool = not-caught-fail(csi_2) in
        {173}let v_52: bitstring = (if v_43 then catch-fail((if v_45 then (if v_46 then (if v_48 then (if v_51 then (csi_2,plaintext,valid) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {174}let v_53: bool = (not-caught-fail(v_52) && success?(1-proj-3-tuple(v_52))) in
        {175}let valid_1: bool = (if v_53 then 3-proj-3-tuple(v_52) else caught-fail) in
        {176}let plaintext_1: bitstring = (if v_53 then 2-proj-3-tuple(v_52) else caught-fail) in
        {177}let csi_3: cipherstate = (if v_53 then 1-proj-3-tuple(v_52) else caught-fail) in
        {178}let ss_9: symmetricstate = (if v_53 then symmetricstatepack(csi_3,ck_8,h_7) else caught-fail) in
        {179}let v_54: bitstring = (if v_53 then catch-fail(symmetricstateunpack(ss_9)) else caught-fail) in
        {180}let v_55: bool = (not-caught-fail(v_54) && success?(1-proj-3-tuple(v_54))) in
        {181}let h_8: bitstring = (if v_55 then 3-proj-3-tuple(v_54) else caught-fail) in
        {182}let ck_9: key = (if v_55 then 2-proj-3-tuple(v_54) else caught-fail) in
        {183}let cs_8: cipherstate = (if v_55 then 1-proj-3-tuple(v_54) else caught-fail) in
        {184}let ssi_1: symmetricstate = (if v_53 then catch-fail((if v_55 then symmetricstatepack(cs_8,ck_9,hash(h_8,ns_1)) else fail-any)) else caught-fail) in
        {185}let v_56: bool = not-caught-fail(ssi_1) in
        {186}let v_57: bitstring = (if v_41 then catch-fail((if v_43 then (if v_53 then (if v_56 then (ssi_1,plaintext_1,valid_1) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {187}let v_58: bool = (not-caught-fail(v_57) && success?(1-proj-3-tuple(v_57))) in
        {188}let valid1_1: bool = (if v_58 then 3-proj-3-tuple(v_57) else caught-fail) in
        {189}let ne_3: bitstring = (if v_58 then 2-proj-3-tuple(v_57) else caught-fail) in
        {190}let ss_10: symmetricstate = (if v_58 then 1-proj-3-tuple(v_57) else caught-fail) in
        {191}let rs_3: key = (if v_58 then ne_3 else caught-fail) in
        {192}let v_59: bitstring = (if v_58 then catch-fail(symmetricstateunpack(ss_10)) else caught-fail) in
        {193}let v_60: bool = (not-caught-fail(v_59) && success?(1-proj-3-tuple(v_59))) in
        {194}let h_9: bitstring = (if v_60 then 3-proj-3-tuple(v_59) else caught-fail) in
        {195}let ck_10: key = (if v_60 then 2-proj-3-tuple(v_59) else caught-fail) in
        {196}let cs_9: cipherstate = (if v_60 then 1-proj-3-tuple(v_59) else caught-fail) in
        {197}let v_61: bitstring = (if v_60 then catch-fail(cipherstateunpack(cs_9)) else caught-fail) in
        {198}let v_62: bool = (not-caught-fail(v_61) && success?(1-proj-2-tuple(v_61))) in
        {199}let n_4: nonce = (if v_62 then 2-proj-2-tuple(v_61) else caught-fail) in
        {200}let k_5: key = (if v_62 then 1-proj-2-tuple(v_61) else caught-fail) in
        {201}let d_1: aead = (if v_62 then catch-fail(decrypt(k_5,n_4,h_9,nm)) else caught-fail) in
        {202}let v_63: bool = not-caught-fail(d_1) in
        {203}let v_64: bitstring = (if v_63 then catch-fail(aeadunpack(d_1)) else caught-fail) in
        {204}let v_65: bool = (not-caught-fail(v_64) && success?(1-proj-3-tuple(v_64))) in
        {205}let plaintext_2: bitstring = (if v_65 then 3-proj-3-tuple(v_64) else caught-fail) in
        {206}let adi_1: bitstring = (if v_65 then 2-proj-3-tuple(v_64) else caught-fail) in
        {207}let valid_2: bool = (if v_65 then 1-proj-3-tuple(v_64) else caught-fail) in
        {208}let n_5: nonce = (if v_65 then increment_nonce(n_4) else caught-fail) in
        {209}let v_66: bitstring = (if v_65 then catch-fail(cipherstateunpack(cs_9)) else caught-fail) in
        {210}let v_67: bool = (not-caught-fail(v_66) && success?(1-proj-2-tuple(v_66))) in
        {211}let o_2: nonce = (if v_67 then 2-proj-2-tuple(v_66) else caught-fail) in
        {212}let k_6: key = (if v_67 then 1-proj-2-tuple(v_66) else caught-fail) in
        {213}let csi_4: cipherstate = (if v_65 then catch-fail((if v_67 then cipherstatepack(k_6,n_5) else fail-any)) else caught-fail) in
        {214}let v_68: bool = not-caught-fail(csi_4) in
        {215}let v_69: bitstring = (if v_60 then catch-fail((if v_62 then (if v_63 then (if v_65 then (if v_68 then (csi_4,plaintext_2,valid_2) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {216}let v_70: bool = (not-caught-fail(v_69) && success?(1-proj-3-tuple(v_69))) in
        {217}let valid_3: bool = (if v_70 then 3-proj-3-tuple(v_69) else caught-fail) in
        {218}let plaintext_3: bitstring = (if v_70 then 2-proj-3-tuple(v_69) else caught-fail) in
        {219}let csi_5: cipherstate = (if v_70 then 1-proj-3-tuple(v_69) else caught-fail) in
        {220}let ss_11: symmetricstate = (if v_70 then symmetricstatepack(csi_5,ck_10,h_9) else caught-fail) in
        {221}let v_71: bitstring = (if v_70 then catch-fail(symmetricstateunpack(ss_11)) else caught-fail) in
        {222}let v_72: bool = (not-caught-fail(v_71) && success?(1-proj-3-tuple(v_71))) in
        {223}let h_10: bitstring = (if v_72 then 3-proj-3-tuple(v_71) else caught-fail) in
        {224}let ck_11: key = (if v_72 then 2-proj-3-tuple(v_71) else caught-fail) in
        {225}let cs_10: cipherstate = (if v_72 then 1-proj-3-tuple(v_71) else caught-fail) in
        {226}let ssi_2: symmetricstate = (if v_70 then catch-fail((if v_72 then symmetricstatepack(cs_10,ck_11,hash(h_10,nm)) else fail-any)) else caught-fail) in
        {227}let v_73: bool = not-caught-fail(ssi_2) in
        {228}let v_74: bitstring = (if v_58 then catch-fail((if v_60 then (if v_70 then (if v_73 then (ssi_2,plaintext_3,valid_3) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {229}let v_75: bool = (not-caught-fail(v_74) && success?(1-proj-3-tuple(v_74))) in
        {230}let valid2_1: bool = (if v_75 then 3-proj-3-tuple(v_74) else caught-fail) in
        {231}let ne_4: bitstring = (if v_75 then 2-proj-3-tuple(v_74) else caught-fail) in
        {232}let ss_12: symmetricstate = (if v_75 then 1-proj-3-tuple(v_74) else caught-fail) in
        {233}let rm_3: key = (if v_75 then ne_4 else caught-fail) in
        {234}let v_76: bitstring = (if v_75 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {235}let v_77: bool = (not-caught-fail(v_76) && success?(1-proj-2-tuple(v_76))) in
        {236}let my_private_key_1: key = (if v_77 then 2-proj-2-tuple(v_76) else caught-fail) in
        {237}let my_public_key_1: key = (if v_77 then 1-proj-2-tuple(v_76) else caught-fail) in
        {238}let input_key_material_1: key = (if v_75 then catch-fail((if v_77 then dhexp(my_private_key_1,rs_3) else fail-any)) else caught-fail) in
        {239}let v_78: bool = not-caught-fail(input_key_material_1) in
        {240}let v_79: bitstring = (if v_78 then catch-fail(symmetricstateunpack(ss_12)) else caught-fail) in
        {241}let v_80: bool = (not-caught-fail(v_79) && success?(1-proj-3-tuple(v_79))) in
        {242}let h_11: bitstring = (if v_80 then 3-proj-3-tuple(v_79) else caught-fail) in
        {243}let ck_12: key = (if v_80 then 2-proj-3-tuple(v_79) else caught-fail) in
        {244}let cs_11: cipherstate = (if v_80 then 1-proj-3-tuple(v_79) else caught-fail) in
        {245}let output1_1: key = (if v_80 then hmac_hash1(ck_12,input_key_material_1) else caught-fail) in
        {246}let output2_1: key = (if v_80 then hmac_hash2(ck_12,input_key_material_1) else caught-fail) in
        {247}let output3_1: key = (if v_80 then hmac_hash3(ck_12,input_key_material_1) else caught-fail) in
        {248}let v_81: bitstring = (if v_80 then catch-fail((output1_1,output2_1,output3_1)) else caught-fail) in
        {249}let v_82: bool = (not-caught-fail(v_81) && success?(1-proj-3-tuple(v_81))) in
        {250}let output: key = (if v_82 then 3-proj-3-tuple(v_81) else caught-fail) in
        {251}let temp_k_1: key = (if v_82 then 2-proj-3-tuple(v_81) else caught-fail) in
        {252}let ck_13: key = (if v_82 then 1-proj-3-tuple(v_81) else caught-fail) in
        {253}let ss_13: symmetricstate = (if v_75 then catch-fail((if v_78 then (if v_80 then (if v_82 then symmetricstatepack(cipherstatepack(temp_k_1,minnonce),ck_13,h_11) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {254}let v_83: bool = not-caught-fail(ss_13) in
        {255}let v_84: bitstring = (if v_83 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {256}let v_85: bool = (not-caught-fail(v_84) && success?(1-proj-2-tuple(v_84))) in
        {257}let my_private_key_2: key = (if v_85 then 2-proj-2-tuple(v_84) else caught-fail) in
        {258}let my_public_key_2: key = (if v_85 then 1-proj-2-tuple(v_84) else caught-fail) in
        {259}let input_key_material_2: key = (if v_83 then catch-fail((if v_85 then dhexp(my_private_key_2,rm_3) else fail-any)) else caught-fail) in
        {260}let v_86: bool = not-caught-fail(input_key_material_2) in
        {261}let v_87: bitstring = (if v_86 then catch-fail(symmetricstateunpack(ss_13)) else caught-fail) in
        {262}let v_88: bool = (not-caught-fail(v_87) && success?(1-proj-3-tuple(v_87))) in
        {263}let h_12: bitstring = (if v_88 then 3-proj-3-tuple(v_87) else caught-fail) in
        {264}let ck_14: key = (if v_88 then 2-proj-3-tuple(v_87) else caught-fail) in
        {265}let cs_12: cipherstate = (if v_88 then 1-proj-3-tuple(v_87) else caught-fail) in
        {266}let output1_2: key = (if v_88 then hmac_hash1(ck_14,input_key_material_2) else caught-fail) in
        {267}let output2_2: key = (if v_88 then hmac_hash2(ck_14,input_key_material_2) else caught-fail) in
        {268}let output3_2: key = (if v_88 then hmac_hash3(ck_14,input_key_material_2) else caught-fail) in
        {269}let v_89: bitstring = (if v_88 then catch-fail((output1_2,output2_2,output3_2)) else caught-fail) in
        {270}let v_90: bool = (not-caught-fail(v_89) && success?(1-proj-3-tuple(v_89))) in
        {271}let output_1: key = (if v_90 then 3-proj-3-tuple(v_89) else caught-fail) in
        {272}let temp_k_2: key = (if v_90 then 2-proj-3-tuple(v_89) else caught-fail) in
        {273}let ck_15: key = (if v_90 then 1-proj-3-tuple(v_89) else caught-fail) in
        {274}let ss_14: symmetricstate = (if v_83 then catch-fail((if v_86 then (if v_88 then (if v_90 then symmetricstatepack(cipherstatepack(temp_k_2,minnonce),ck_15,h_12) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {275}let v_91: bool = not-caught-fail(ss_14) in
        {276}let v_92: bitstring = (if v_91 then catch-fail(symmetricstateunpack(ss_14)) else caught-fail) in
        {277}let v_93: bool = (not-caught-fail(v_92) && success?(1-proj-3-tuple(v_92))) in
        {278}let h_13: bitstring = (if v_93 then 3-proj-3-tuple(v_92) else caught-fail) in
        {279}let ck_16: key = (if v_93 then 2-proj-3-tuple(v_92) else caught-fail) in
        {280}let cs_13: cipherstate = (if v_93 then 1-proj-3-tuple(v_92) else caught-fail) in
        {281}let v_94: bitstring = (if v_93 then catch-fail(cipherstateunpack(cs_13)) else caught-fail) in
        {282}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
        {283}let n_6: nonce = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
        {284}let k_7: key = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
        {285}let d_2: aead = (if v_95 then catch-fail(decrypt(k_7,n_6,h_13,ciphertext_3)) else caught-fail) in
        {286}let v_96: bool = not-caught-fail(d_2) in
        {287}let v_97: bitstring = (if v_96 then catch-fail(aeadunpack(d_2)) else caught-fail) in
        {288}let v_98: bool = (not-caught-fail(v_97) && success?(1-proj-3-tuple(v_97))) in
        {289}let plaintext_4: bitstring = (if v_98 then 3-proj-3-tuple(v_97) else caught-fail) in
        {290}let adi_2: bitstring = (if v_98 then 2-proj-3-tuple(v_97) else caught-fail) in
        {291}let valid_4: bool = (if v_98 then 1-proj-3-tuple(v_97) else caught-fail) in
        {292}let n_7: nonce = (if v_98 then increment_nonce(n_6) else caught-fail) in
        {293}let v_99: bitstring = (if v_98 then catch-fail(cipherstateunpack(cs_13)) else caught-fail) in
        {294}let v_100: bool = (not-caught-fail(v_99) && success?(1-proj-2-tuple(v_99))) in
        {295}let o_3: nonce = (if v_100 then 2-proj-2-tuple(v_99) else caught-fail) in
        {296}let k_8: key = (if v_100 then 1-proj-2-tuple(v_99) else caught-fail) in
        {297}let csi_6: cipherstate = (if v_98 then catch-fail((if v_100 then cipherstatepack(k_8,n_7) else fail-any)) else caught-fail) in
        {298}let v_101: bool = not-caught-fail(csi_6) in
        {299}let v_102: bitstring = (if v_93 then catch-fail((if v_95 then (if v_96 then (if v_98 then (if v_101 then (csi_6,plaintext_4,valid_4) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {300}let v_103: bool = (not-caught-fail(v_102) && success?(1-proj-3-tuple(v_102))) in
        {301}let valid_5: bool = (if v_103 then 3-proj-3-tuple(v_102) else caught-fail) in
        {302}let plaintext_5: bitstring = (if v_103 then 2-proj-3-tuple(v_102) else caught-fail) in
        {303}let csi_7: cipherstate = (if v_103 then 1-proj-3-tuple(v_102) else caught-fail) in
        {304}let ss_15: symmetricstate = (if v_103 then symmetricstatepack(csi_7,ck_16,h_13) else caught-fail) in
        {305}let v_104: bitstring = (if v_103 then catch-fail(symmetricstateunpack(ss_15)) else caught-fail) in
        {306}let v_105: bool = (not-caught-fail(v_104) && success?(1-proj-3-tuple(v_104))) in
        {307}let h_14: bitstring = (if v_105 then 3-proj-3-tuple(v_104) else caught-fail) in
        {308}let ck_17: key = (if v_105 then 2-proj-3-tuple(v_104) else caught-fail) in
        {309}let cs_14: cipherstate = (if v_105 then 1-proj-3-tuple(v_104) else caught-fail) in
        {310}let ssi_3: symmetricstate = (if v_103 then catch-fail((if v_105 then symmetricstatepack(cs_14,ck_17,hash(h_14,ciphertext_3)) else fail-any)) else caught-fail) in
        {311}let v_106: bool = not-caught-fail(ssi_3) in
        {312}let v_107: bitstring = (if v_91 then catch-fail((if v_93 then (if v_103 then (if v_106 then (ssi_3,plaintext_5,valid_5) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {313}let v_108: bool = (not-caught-fail(v_107) && success?(1-proj-3-tuple(v_107))) in
        {314}let valid3: bool = (if v_108 then 3-proj-3-tuple(v_107) else caught-fail) in
        {315}let plaintext_6: bitstring = (if v_108 then 2-proj-3-tuple(v_107) else caught-fail) in
        {316}let ss_16: symmetricstate = (if v_108 then 1-proj-3-tuple(v_107) else caught-fail) in
        {317}let basis_1: key = (if v_108 then key_s(them) else caught-fail) in
        {318}let public_key_1: key = (if v_108 then catch-fail(dhexp(basis_1,validkey(g))) else caught-fail) in
        {319}let v_109: bool = not-caught-fail(public_key_1) in
        {320}let basis_2: key = (if v_108 then key_m(them) else caught-fail) in
        {321}let public_key_2: key = (if v_108 then catch-fail(dhexp(basis_2,validkey(g))) else caught-fail) in
        {322}let v_110: bool = not-caught-fail(public_key_2) in
        {323}let v_111: bool = (if v_108 then catch-fail(((valid1_1 && (valid2_1 && valid3)) && ((rs_3 = getpublickey((if v_109 then keypairpack(validkey(public_key_1),basis_1) else fail-any))) && (rm_3 = getpublickey((if v_110 then keypairpack(validkey(public_key_2),basis_2) else fail-any)))))) else caught-fail) in
        {324}let hs_5: handshakestate = (if v_111 then handshakestatepack(ss_16,s_2,m_2,e_4,rs_3,rm_3,re_3,psk_2,initiator_2) else caught-fail) in
        {325}let v_112: bitstring = (if v_111 then catch-fail(symmetricstateunpack(ss_16)) else caught-fail) in
        {326}let v_113: bool = (not-caught-fail(v_112) && success?(1-proj-3-tuple(v_112))) in
        {327}let h_15: bitstring = (if v_113 then 3-proj-3-tuple(v_112) else caught-fail) in
        {328}let ck_18: key = (if v_113 then 2-proj-3-tuple(v_112) else caught-fail) in
        {329}let cs_15: cipherstate = (if v_113 then 1-proj-3-tuple(v_112) else caught-fail) in
        {330}let input_key_material_3: key = (if v_113 then zero else caught-fail) in
        {331}let output1_3: key = (if v_113 then hmac_hash1(ck_18,input_key_material_3) else caught-fail) in
        {332}let output2_3: key = (if v_113 then hmac_hash2(ck_18,input_key_material_3) else caught-fail) in
        {333}let output3_3: key = (if v_113 then hmac_hash3(ck_18,input_key_material_3) else caught-fail) in
        {334}let v_114: bitstring = (if v_113 then catch-fail((output1_3,output2_3,output3_3)) else caught-fail) in
        {335}let v_115: bool = (not-caught-fail(v_114) && success?(1-proj-3-tuple(v_114))) in
        {336}let temp_k3: key = (if v_115 then 3-proj-3-tuple(v_114) else caught-fail) in
        {337}let temp_k2: key = (if v_115 then 2-proj-3-tuple(v_114) else caught-fail) in
        {338}let temp_k1: key = (if v_115 then 1-proj-3-tuple(v_114) else caught-fail) in
        {339}let cs1: cipherstate = (if v_115 then cipherstatepack(temp_k1,minnonce) else caught-fail) in
        {340}let cs2: cipherstate = (if v_115 then cipherstatepack(temp_k2,minnonce) else caught-fail) in
        {341}let v_116: bitstring = (if v_111 then catch-fail((if v_113 then (if v_115 then (ss_16,cs1,cs2) else fail-any) else fail-any)) else caught-fail) in
        {342}let v_117: bool = (not-caught-fail(v_116) && success?(1-proj-3-tuple(v_116))) in
        {343}let cs2_1: cipherstate = (if v_117 then 3-proj-3-tuple(v_116) else caught-fail) in
        {344}let cs1_1: cipherstate = (if v_117 then 2-proj-3-tuple(v_116) else caught-fail) in
        {345}let ssi_4: symmetricstate = (if v_117 then 1-proj-3-tuple(v_116) else caught-fail) in
        {346}let (hs_6: handshakestate,plaintext_b: bitstring,valid_6: bool,cs1_2: cipherstate,cs2_2: cipherstate) = (if v_28 then (if v_30 then (if v_33 then (if v_41 then (if v_58 then (if v_75 then (if v_83 then (if v_91 then (if v_108 then (if undo-catch-fail(v_111) then (if v_117 then (hs_5,plaintext_6,true,cs1_1,cs2_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {347}event RecvMsg(me,them,stagepack_b(sid_1),plaintext_b);
        {348}insert statestore(me,them,sid_1,statepack_c(hs_6,cs1_2,cs2_2))
    ) | (
        {350}!
        {409}get statestore(=me,=them,=sid_1,statepack_c(hs_7: handshakestate,cs1_3: cipherstate,cs2_3: cipherstate)) in
        {351}let hs_8: handshakestate = handshakestatesetcs(hs_7,cs1_3) in
        {352}let payload_1: bitstring = msg_c(me,them,sid_1) in
        {353}let v_118: bitstring = catch-fail(handshakestateunpack(hs_8)) in
        {354}let v_119: bool = (not-caught-fail(v_118) && success?(1-proj-9-tuple(v_118))) in
        {355}let initiator_3: bool = (if v_119 then 9-proj-9-tuple(v_118) else caught-fail) in
        {356}let psk_3: key = (if v_119 then 8-proj-9-tuple(v_118) else caught-fail) in
        {357}let re_4: key = (if v_119 then 7-proj-9-tuple(v_118) else caught-fail) in
        {358}let rm_4: key = (if v_119 then 6-proj-9-tuple(v_118) else caught-fail) in
        {359}let rs_4: key = (if v_119 then 5-proj-9-tuple(v_118) else caught-fail) in
        {360}let e_5: keypair = (if v_119 then 4-proj-9-tuple(v_118) else caught-fail) in
        {361}let m_3: keypair = (if v_119 then 3-proj-9-tuple(v_118) else caught-fail) in
        {362}let s_3: keypair = (if v_119 then 2-proj-9-tuple(v_118) else caught-fail) in
        {363}let ss_17: symmetricstate = (if v_119 then 1-proj-9-tuple(v_118) else caught-fail) in
        {364}let v_120: bitstring = (if v_119 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {365}let v_121: bool = (not-caught-fail(v_120) && success?(1-proj-4-tuple(v_120))) in
        {366}let ciphertext_4: bitstring = (if v_121 then 4-proj-4-tuple(v_120) else caught-fail) in
        {367}let nm_1: bitstring = (if v_121 then 3-proj-4-tuple(v_120) else caught-fail) in
        {368}let ns_2: bitstring = (if v_121 then 2-proj-4-tuple(v_120) else caught-fail) in
        {369}let ne_5: bitstring = (if v_121 then 1-proj-4-tuple(v_120) else caught-fail) in
        {370}let v_122: bitstring = (if v_121 then catch-fail(symmetricstateunpack(ss_17)) else caught-fail) in
        {371}let v_123: bool = (not-caught-fail(v_122) && success?(1-proj-3-tuple(v_122))) in
        {372}let h_16: bitstring = (if v_123 then 3-proj-3-tuple(v_122) else caught-fail) in
        {373}let ck_19: key = (if v_123 then 2-proj-3-tuple(v_122) else caught-fail) in
        {374}let cs_16: cipherstate = (if v_123 then 1-proj-3-tuple(v_122) else caught-fail) in
        {375}let v_124: bitstring = (if v_123 then catch-fail(cipherstateunpack(cs_16)) else caught-fail) in
        {376}let v_125: bool = (not-caught-fail(v_124) && success?(1-proj-2-tuple(v_124))) in
        {377}let n_8: nonce = (if v_125 then 2-proj-2-tuple(v_124) else caught-fail) in
        {378}let k_9: key = (if v_125 then 1-proj-2-tuple(v_124) else caught-fail) in
        {379}let e_6: bitstring = (if v_125 then encrypt(k_9,n_8,h_16,payload_1) else caught-fail) in
        {380}let n_9: nonce = (if v_125 then increment_nonce(n_8) else caught-fail) in
        {381}let v_126: bitstring = (if v_125 then catch-fail(cipherstateunpack(cs_16)) else caught-fail) in
        {382}let v_127: bool = (not-caught-fail(v_126) && success?(1-proj-2-tuple(v_126))) in
        {383}let o_4: nonce = (if v_127 then 2-proj-2-tuple(v_126) else caught-fail) in
        {384}let k_10: key = (if v_127 then 1-proj-2-tuple(v_126) else caught-fail) in
        {385}let csi_8: cipherstate = (if v_125 then catch-fail((if v_127 then cipherstatepack(k_10,n_9) else fail-any)) else caught-fail) in
        {386}let v_128: bool = not-caught-fail(csi_8) in
        {387}let v_129: bitstring = (if v_123 then catch-fail((if v_125 then (if v_128 then (csi_8,e_6) else fail-any) else fail-any)) else caught-fail) in
        {388}let v_130: bool = (not-caught-fail(v_129) && success?(1-proj-2-tuple(v_129))) in
        {389}let ciphertext_5: bitstring = (if v_130 then 2-proj-2-tuple(v_129) else caught-fail) in
        {390}let csi_9: cipherstate = (if v_130 then 1-proj-2-tuple(v_129) else caught-fail) in
        {391}let ss_18: symmetricstate = (if v_130 then symmetricstatepack(csi_9,ck_19,h_16) else caught-fail) in
        {392}let v_131: bitstring = (if v_130 then catch-fail(symmetricstateunpack(ss_18)) else caught-fail) in
        {393}let v_132: bool = (not-caught-fail(v_131) && success?(1-proj-3-tuple(v_131))) in
        {394}let h_17: bitstring = (if v_132 then 3-proj-3-tuple(v_131) else caught-fail) in
        {395}let ck_20: key = (if v_132 then 2-proj-3-tuple(v_131) else caught-fail) in
        {396}let cs_17: cipherstate = (if v_132 then 1-proj-3-tuple(v_131) else caught-fail) in
        {397}let ssi_5: symmetricstate = (if v_130 then catch-fail((if v_132 then symmetricstatepack(cs_17,ck_20,hash(h_17,ciphertext_5)) else fail-any)) else caught-fail) in
        {398}let v_133: bool = not-caught-fail(ssi_5) in
        {399}let v_134: bitstring = (if v_121 then catch-fail((if v_123 then (if v_130 then (if v_133 then (ssi_5,ciphertext_5) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {400}let v_135: bool = (not-caught-fail(v_134) && success?(1-proj-2-tuple(v_134))) in
        {401}let ciphertext_6: bitstring = (if v_135 then 2-proj-2-tuple(v_134) else caught-fail) in
        {402}let ss_19: symmetricstate = (if v_135 then 1-proj-2-tuple(v_134) else caught-fail) in
        {403}let hs_9: handshakestate = (if v_135 then handshakestatepack(ss_19,s_3,m_3,e_5,rs_4,rm_4,re_4,psk_3,initiator_3) else caught-fail) in
        {404}let message_buffer_1: bitstring = (if v_135 then concat3(ne_5,ns_2,ciphertext_6) else caught-fail) in
        {405}let (hs_10: handshakestate,message_c: bitstring) = (if v_119 then (if v_121 then (if v_135 then (hs_9,message_buffer_1) else fail-any) else fail-any) else fail-any) in
        {406}event SendMsg(me,them,stagepack_c(sid_1),msg_c(me,them,sid_1));
        {407}insert statestore(me,them,sid_1,statepack_d(hs_10,handshakestategetcs(hs_10),cs2_3));
        {408}out(pub, message_c)
    ) | (
        {410}!
        {476}get statestore(=me,=them,=sid_1,statepack_d(hs_11: handshakestate,cs1_4: cipherstate,cs2_4: cipherstate)) in
        {411}let hs_12: handshakestate = handshakestatesetcs(hs_11,cs2_4) in
        {412}in(pub, message_d: bitstring);
        {413}let v_136: bitstring = catch-fail(handshakestateunpack(hs_12)) in
        {414}let v_137: bool = (not-caught-fail(v_136) && success?(1-proj-9-tuple(v_136))) in
        {415}let initiator_4: bool = (if v_137 then 9-proj-9-tuple(v_136) else caught-fail) in
        {416}let psk_4: key = (if v_137 then 8-proj-9-tuple(v_136) else caught-fail) in
        {417}let re_5: key = (if v_137 then 7-proj-9-tuple(v_136) else caught-fail) in
        {418}let rm_5: key = (if v_137 then 6-proj-9-tuple(v_136) else caught-fail) in
        {419}let rs_5: key = (if v_137 then 5-proj-9-tuple(v_136) else caught-fail) in
        {420}let e_7: keypair = (if v_137 then 4-proj-9-tuple(v_136) else caught-fail) in
        {421}let m_4: keypair = (if v_137 then 3-proj-9-tuple(v_136) else caught-fail) in
        {422}let s_4: keypair = (if v_137 then 2-proj-9-tuple(v_136) else caught-fail) in
        {423}let ss_20: symmetricstate = (if v_137 then 1-proj-9-tuple(v_136) else caught-fail) in
        {424}let v_138: bitstring = (if v_137 then catch-fail(deconcat3(message_d)) else caught-fail) in
        {425}let v_139: bool = (not-caught-fail(v_138) && success?(1-proj-3-tuple(v_138))) in
        {426}let ciphertext_7: bitstring = (if v_139 then 3-proj-3-tuple(v_138) else caught-fail) in
        {427}let ns_3: bitstring = (if v_139 then 2-proj-3-tuple(v_138) else caught-fail) in
        {428}let ne_6: bitstring = (if v_139 then 1-proj-3-tuple(v_138) else caught-fail) in
        {429}let valid1_2: bool = (if v_139 then true else caught-fail) in
        {430}let v_140: bitstring = (if v_139 then catch-fail(symmetricstateunpack(ss_20)) else caught-fail) in
        {431}let v_141: bool = (not-caught-fail(v_140) && success?(1-proj-3-tuple(v_140))) in
        {432}let h_18: bitstring = (if v_141 then 3-proj-3-tuple(v_140) else caught-fail) in
        {433}let ck_21: key = (if v_141 then 2-proj-3-tuple(v_140) else caught-fail) in
        {434}let cs_18: cipherstate = (if v_141 then 1-proj-3-tuple(v_140) else caught-fail) in
        {435}let v_142: bitstring = (if v_141 then catch-fail(cipherstateunpack(cs_18)) else caught-fail) in
        {436}let v_143: bool = (not-caught-fail(v_142) && success?(1-proj-2-tuple(v_142))) in
        {437}let n_10: nonce = (if v_143 then 2-proj-2-tuple(v_142) else caught-fail) in
        {438}let k_11: key = (if v_143 then 1-proj-2-tuple(v_142) else caught-fail) in
        {439}let d_3: aead = (if v_143 then catch-fail(decrypt(k_11,n_10,h_18,ciphertext_7)) else caught-fail) in
        {440}let v_144: bool = not-caught-fail(d_3) in
        {441}let v_145: bitstring = (if v_144 then catch-fail(aeadunpack(d_3)) else caught-fail) in
        {442}let v_146: bool = (not-caught-fail(v_145) && success?(1-proj-3-tuple(v_145))) in
        {443}let plaintext_7: bitstring = (if v_146 then 3-proj-3-tuple(v_145) else caught-fail) in
        {444}let adi_3: bitstring = (if v_146 then 2-proj-3-tuple(v_145) else caught-fail) in
        {445}let valid_7: bool = (if v_146 then 1-proj-3-tuple(v_145) else caught-fail) in
        {446}let n_11: nonce = (if v_146 then increment_nonce(n_10) else caught-fail) in
        {447}let v_147: bitstring = (if v_146 then catch-fail(cipherstateunpack(cs_18)) else caught-fail) in
        {448}let v_148: bool = (not-caught-fail(v_147) && success?(1-proj-2-tuple(v_147))) in
        {449}let o_5: nonce = (if v_148 then 2-proj-2-tuple(v_147) else caught-fail) in
        {450}let k_12: key = (if v_148 then 1-proj-2-tuple(v_147) else caught-fail) in
        {451}let csi_10: cipherstate = (if v_146 then catch-fail((if v_148 then cipherstatepack(k_12,n_11) else fail-any)) else caught-fail) in
        {452}let v_149: bool = not-caught-fail(csi_10) in
        {453}let v_150: bitstring = (if v_141 then catch-fail((if v_143 then (if v_144 then (if v_146 then (if v_149 then (csi_10,plaintext_7,valid_7) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {454}let v_151: bool = (not-caught-fail(v_150) && success?(1-proj-3-tuple(v_150))) in
        {455}let valid_8: bool = (if v_151 then 3-proj-3-tuple(v_150) else caught-fail) in
        {456}let plaintext_8: bitstring = (if v_151 then 2-proj-3-tuple(v_150) else caught-fail) in
        {457}let csi_11: cipherstate = (if v_151 then 1-proj-3-tuple(v_150) else caught-fail) in
        {458}let ss_21: symmetricstate = (if v_151 then symmetricstatepack(csi_11,ck_21,h_18) else caught-fail) in
        {459}let v_152: bitstring = (if v_151 then catch-fail(symmetricstateunpack(ss_21)) else caught-fail) in
        {460}let v_153: bool = (not-caught-fail(v_152) && success?(1-proj-3-tuple(v_152))) in
        {461}let h_19: bitstring = (if v_153 then 3-proj-3-tuple(v_152) else caught-fail) in
        {462}let ck_22: key = (if v_153 then 2-proj-3-tuple(v_152) else caught-fail) in
        {463}let cs_19: cipherstate = (if v_153 then 1-proj-3-tuple(v_152) else caught-fail) in
        {464}let ssi_6: symmetricstate = (if v_151 then catch-fail((if v_153 then symmetricstatepack(cs_19,ck_22,hash(h_19,ciphertext_7)) else fail-any)) else caught-fail) in
        {465}let v_154: bool = not-caught-fail(ssi_6) in
        {466}let v_155: bitstring = (if v_139 then catch-fail((if v_141 then (if v_151 then (if v_154 then (ssi_6,plaintext_8,valid_8) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {467}let v_156: bool = (not-caught-fail(v_155) && success?(1-proj-3-tuple(v_155))) in
        {468}let valid2_2: bool = (if v_156 then 3-proj-3-tuple(v_155) else caught-fail) in
        {469}let plaintext_9: bitstring = (if v_156 then 2-proj-3-tuple(v_155) else caught-fail) in
        {470}let ss_22: symmetricstate = (if v_156 then 1-proj-3-tuple(v_155) else caught-fail) in
        {471}let v_157: bool = (if v_156 then catch-fail((valid1_2 && valid2_2)) else caught-fail) in
        {472}let hs_13: handshakestate = (if v_157 then handshakestatepack(ss_22,s_4,m_4,e_7,rs_5,rm_5,re_5,psk_4,initiator_4) else caught-fail) in
        {473}let (hs_14: handshakestate,plaintext_d: bitstring,valid_9: bool) = (if v_137 then (if v_139 then (if v_156 then (if undo-catch-fail(v_157) then (hs_13,plaintext_9,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {474}event RecvMsg(me,them,stagepack_d(sid_1),plaintext_d);
        {475}event RecvEnd(valid_9)
    ) | (
        0
    )
) | (
    {477}let me_1: principal = alice in
    {478}let them_1: principal = charlie in
    {479}let sid_2: sessionid = sid in
    {480}let s_5: keypair = keypairpack(empty,empty) in
    {481}let m_5: keypair = keypairpack(empty,empty) in
    (
        {482}let e_8: keypair = keypairpack(empty,empty) in
        {483}let rs_6: key = empty in
        {484}let rm_6: key = empty in
        {485}let re_6: key = empty in
        {486}let prologue_1: bitstring = empty in
        {487}let psk_5: key = empty in
        {488}let protocol_name_1: bitstring = somename in
        {489}let h_20: bitstring = hash(protocol_name_1,empty) in
        {490}let ck_23: key = h_20 in
        {491}let k_13: key = empty in
        {492}let cs_20: cipherstate = cipherstatepack(k_13,minnonce) in
        {493}let ss_23: symmetricstate = symmetricstatepack(cs_20,ck_23,h_20) in
        {494}let v_158: bitstring = catch-fail(symmetricstateunpack(ss_23)) in
        {495}let v_159: bool = (not-caught-fail(v_158) && success?(1-proj-3-tuple(v_158))) in
        {496}let h_21: bitstring = (if v_159 then 3-proj-3-tuple(v_158) else caught-fail) in
        {497}let ck_24: key = (if v_159 then 2-proj-3-tuple(v_158) else caught-fail) in
        {498}let cs_21: cipherstate = (if v_159 then 1-proj-3-tuple(v_158) else caught-fail) in
        {499}let ss_24: symmetricstate = catch-fail((if v_159 then symmetricstatepack(cs_21,ck_24,hash(h_21,prologue_1)) else fail-any)) in
        {500}let v_160: bool = not-caught-fail(ss_24) in
        {501}let hs_15: handshakestate = (if v_160 then handshakestatepack(ss_24,s_5,m_5,e_8,rs_6,rm_6,re_6,psk_5,true) else fail-any) in
        {502}insert statestore(me_1,them_1,sid_2,statepack_a(hs_15))
    ) | (
        {573}get statestore(=me_1,=them_1,=sid_2,statepack_a(hs_16: handshakestate)) in
        {503}let payload_2: bitstring = msg_a(me_1,them_1,sid_2) in
        {504}let v_161: bitstring = catch-fail(handshakestateunpack(hs_16)) in
        {505}let v_162: bool = (not-caught-fail(v_161) && success?(1-proj-9-tuple(v_161))) in
        {506}let initiator_5: bool = (if v_162 then 9-proj-9-tuple(v_161) else caught-fail) in
        {507}let psk_6: key = (if v_162 then 8-proj-9-tuple(v_161) else caught-fail) in
        {508}let re_7: key = (if v_162 then 7-proj-9-tuple(v_161) else caught-fail) in
        {509}let rm_7: key = (if v_162 then 6-proj-9-tuple(v_161) else caught-fail) in
        {510}let rs_7: key = (if v_162 then 5-proj-9-tuple(v_161) else caught-fail) in
        {511}let e_9: keypair = (if v_162 then 4-proj-9-tuple(v_161) else caught-fail) in
        {512}let m_6: keypair = (if v_162 then 3-proj-9-tuple(v_161) else caught-fail) in
        {513}let s_6: keypair = (if v_162 then 2-proj-9-tuple(v_161) else caught-fail) in
        {514}let ss_25: symmetricstate = (if v_162 then 1-proj-9-tuple(v_161) else caught-fail) in
        {515}let v_163: bitstring = (if v_162 then catch-fail((empty,empty,empty)) else caught-fail) in
        {516}let v_164: bool = (not-caught-fail(v_163) && success?(1-proj-3-tuple(v_163))) in
        {517}let ciphertext_8: bitstring = (if v_164 then 3-proj-3-tuple(v_163) else caught-fail) in
        {518}let ns_4: bitstring = (if v_164 then 2-proj-3-tuple(v_163) else caught-fail) in
        {519}let ne_7: bitstring = (if v_164 then 1-proj-3-tuple(v_163) else caught-fail) in
        {520}let basis_3: key = (if v_164 then key_e(me_1,them_1,sid_2) else caught-fail) in
        {521}let public_key_3: key = (if v_164 then catch-fail(dhexp(basis_3,validkey(g))) else caught-fail) in
        {522}let v_165: bool = not-caught-fail(public_key_3) in
        {523}let e_10: keypair = (if v_164 then catch-fail((if v_165 then keypairpack(validkey(public_key_3),basis_3) else fail-any)) else caught-fail) in
        {524}let v_166: bool = not-caught-fail(e_10) in
        {525}let ne_8: bitstring = (if v_166 then catch-fail(getpublickey(e_10)) else caught-fail) in
        {526}let v_167: bool = not-caught-fail(ne_8) in
        {527}let v_168: bitstring = (if v_167 then catch-fail(symmetricstateunpack(ss_25)) else caught-fail) in
        {528}let v_169: bool = (not-caught-fail(v_168) && success?(1-proj-3-tuple(v_168))) in
        {529}let h_22: bitstring = (if v_169 then 3-proj-3-tuple(v_168) else caught-fail) in
        {530}let ck_25: key = (if v_169 then 2-proj-3-tuple(v_168) else caught-fail) in
        {531}let cs_22: cipherstate = (if v_169 then 1-proj-3-tuple(v_168) else caught-fail) in
        {532}let ss_26: symmetricstate = (if v_167 then catch-fail((if v_169 then symmetricstatepack(cs_22,ck_25,hash(h_22,ne_8)) else fail-any)) else caught-fail) in
        {533}let v_170: bool = not-caught-fail(ss_26) in
        {534}let v_171: bitstring = (if v_170 then catch-fail(symmetricstateunpack(ss_26)) else caught-fail) in
        {535}let v_172: bool = (not-caught-fail(v_171) && success?(1-proj-3-tuple(v_171))) in
        {536}let h_23: bitstring = (if v_172 then 3-proj-3-tuple(v_171) else caught-fail) in
        {537}let ck_26: key = (if v_172 then 2-proj-3-tuple(v_171) else caught-fail) in
        {538}let cs_23: cipherstate = (if v_172 then 1-proj-3-tuple(v_171) else caught-fail) in
        {539}let v_173: bitstring = (if v_172 then catch-fail(cipherstateunpack(cs_23)) else caught-fail) in
        {540}let v_174: bool = (not-caught-fail(v_173) && success?(1-proj-2-tuple(v_173))) in
        {541}let n_12: nonce = (if v_174 then 2-proj-2-tuple(v_173) else caught-fail) in
        {542}let k_14: key = (if v_174 then 1-proj-2-tuple(v_173) else caught-fail) in
        {543}let e_11: bitstring = (if v_174 then encrypt(k_14,n_12,h_23,payload_2) else caught-fail) in
        {544}let n_13: nonce = (if v_174 then increment_nonce(n_12) else caught-fail) in
        {545}let v_175: bitstring = (if v_174 then catch-fail(cipherstateunpack(cs_23)) else caught-fail) in
        {546}let v_176: bool = (not-caught-fail(v_175) && success?(1-proj-2-tuple(v_175))) in
        {547}let o_6: nonce = (if v_176 then 2-proj-2-tuple(v_175) else caught-fail) in
        {548}let k_15: key = (if v_176 then 1-proj-2-tuple(v_175) else caught-fail) in
        {549}let csi_12: cipherstate = (if v_174 then catch-fail((if v_176 then cipherstatepack(k_15,n_13) else fail-any)) else caught-fail) in
        {550}let v_177: bool = not-caught-fail(csi_12) in
        {551}let v_178: bitstring = (if v_172 then catch-fail((if v_174 then (if v_177 then (csi_12,e_11) else fail-any) else fail-any)) else caught-fail) in
        {552}let v_179: bool = (not-caught-fail(v_178) && success?(1-proj-2-tuple(v_178))) in
        {553}let ciphertext_9: bitstring = (if v_179 then 2-proj-2-tuple(v_178) else caught-fail) in
        {554}let csi_13: cipherstate = (if v_179 then 1-proj-2-tuple(v_178) else caught-fail) in
        {555}let ss_27: symmetricstate = (if v_179 then symmetricstatepack(csi_13,ck_26,h_23) else caught-fail) in
        {556}let v_180: bitstring = (if v_179 then catch-fail(symmetricstateunpack(ss_27)) else caught-fail) in
        {557}let v_181: bool = (not-caught-fail(v_180) && success?(1-proj-3-tuple(v_180))) in
        {558}let h_24: bitstring = (if v_181 then 3-proj-3-tuple(v_180) else caught-fail) in
        {559}let ck_27: key = (if v_181 then 2-proj-3-tuple(v_180) else caught-fail) in
        {560}let cs_24: cipherstate = (if v_181 then 1-proj-3-tuple(v_180) else caught-fail) in
        {561}let ssi_7: symmetricstate = (if v_179 then catch-fail((if v_181 then symmetricstatepack(cs_24,ck_27,hash(h_24,ciphertext_9)) else fail-any)) else caught-fail) in
        {562}let v_182: bool = not-caught-fail(ssi_7) in
        {563}let v_183: bitstring = (if v_170 then catch-fail((if v_172 then (if v_179 then (if v_182 then (ssi_7,ciphertext_9) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {564}let v_184: bool = (not-caught-fail(v_183) && success?(1-proj-2-tuple(v_183))) in
        {565}let ciphertext_10: bitstring = (if v_184 then 2-proj-2-tuple(v_183) else caught-fail) in
        {566}let ss_28: symmetricstate = (if v_184 then 1-proj-2-tuple(v_183) else caught-fail) in
        {567}let hs_17: handshakestate = (if v_184 then handshakestatepack(ss_28,s_6,m_6,e_10,rs_7,rm_7,re_7,psk_6,initiator_5) else caught-fail) in
        {568}let message_buffer_2: bitstring = (if v_184 then concat3(ne_8,ns_4,ciphertext_10) else caught-fail) in
        {569}let (hs_18: handshakestate,message_a_1: bitstring) = (if v_162 then (if v_164 then (if v_166 then (if v_167 then (if v_170 then (if v_184 then (hs_17,message_buffer_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {570}event SendMsg(me_1,them_1,stagepack_a(sid_2),msg_a(me_1,them_1,sid_2));
        {571}insert statestore(me_1,them_1,sid_2,statepack_b(hs_18));
        {572}out(pub, message_a_1)
    ) | (
        {822}get statestore(=me_1,=them_1,=sid_2,statepack_b(hs_19: handshakestate)) in
        {574}in(pub, message_b_1: bitstring);
        {575}let v_185: bitstring = catch-fail(handshakestateunpack(hs_19)) in
        {576}let v_186: bool = (not-caught-fail(v_185) && success?(1-proj-9-tuple(v_185))) in
        {577}let initiator_6: bool = (if v_186 then 9-proj-9-tuple(v_185) else caught-fail) in
        {578}let psk_7: key = (if v_186 then 8-proj-9-tuple(v_185) else caught-fail) in
        {579}let re_8: key = (if v_186 then 7-proj-9-tuple(v_185) else caught-fail) in
        {580}let rm_8: key = (if v_186 then 6-proj-9-tuple(v_185) else caught-fail) in
        {581}let rs_8: key = (if v_186 then 5-proj-9-tuple(v_185) else caught-fail) in
        {582}let e_12: keypair = (if v_186 then 4-proj-9-tuple(v_185) else caught-fail) in
        {583}let m_7: keypair = (if v_186 then 3-proj-9-tuple(v_185) else caught-fail) in
        {584}let s_7: keypair = (if v_186 then 2-proj-9-tuple(v_185) else caught-fail) in
        {585}let ss_29: symmetricstate = (if v_186 then 1-proj-9-tuple(v_185) else caught-fail) in
        {586}let v_187: bitstring = (if v_186 then catch-fail(deconcat4(message_b_1)) else caught-fail) in
        {587}let v_188: bool = (not-caught-fail(v_187) && success?(1-proj-4-tuple(v_187))) in
        {588}let ciphertext_11: bitstring = (if v_188 then 4-proj-4-tuple(v_187) else caught-fail) in
        {589}let nm_2: bitstring = (if v_188 then 3-proj-4-tuple(v_187) else caught-fail) in
        {590}let ns_5: bitstring = (if v_188 then 2-proj-4-tuple(v_187) else caught-fail) in
        {591}let ne_9: bitstring = (if v_188 then 1-proj-4-tuple(v_187) else caught-fail) in
        {592}let valid1_3: bool = (if v_188 then true else caught-fail) in
        {593}let valid2_3: bool = (if v_188 then true else caught-fail) in
        {594}let re_9: key = (if v_188 then ne_9 else caught-fail) in
        {595}let v_189: bitstring = (if v_188 then catch-fail(symmetricstateunpack(ss_29)) else caught-fail) in
        {596}let v_190: bool = (not-caught-fail(v_189) && success?(1-proj-3-tuple(v_189))) in
        {597}let h_25: bitstring = (if v_190 then 3-proj-3-tuple(v_189) else caught-fail) in
        {598}let ck_28: key = (if v_190 then 2-proj-3-tuple(v_189) else caught-fail) in
        {599}let cs_25: cipherstate = (if v_190 then 1-proj-3-tuple(v_189) else caught-fail) in
        {600}let ss_30: symmetricstate = (if v_188 then catch-fail((if v_190 then symmetricstatepack(cs_25,ck_28,hash(h_25,re_9)) else fail-any)) else caught-fail) in
        {601}let v_191: bool = not-caught-fail(ss_30) in
        {602}let v_192: bitstring = (if v_191 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {603}let v_193: bool = (not-caught-fail(v_192) && success?(1-proj-2-tuple(v_192))) in
        {604}let my_private_key_3: key = (if v_193 then 2-proj-2-tuple(v_192) else caught-fail) in
        {605}let my_public_key_3: key = (if v_193 then 1-proj-2-tuple(v_192) else caught-fail) in
        {606}let input_key_material_4: key = (if v_191 then catch-fail((if v_193 then dhexp(my_private_key_3,re_9) else fail-any)) else caught-fail) in
        {607}let v_194: bool = not-caught-fail(input_key_material_4) in
        {608}let v_195: bitstring = (if v_194 then catch-fail(symmetricstateunpack(ss_30)) else caught-fail) in
        {609}let v_196: bool = (not-caught-fail(v_195) && success?(1-proj-3-tuple(v_195))) in
        {610}let h_26: bitstring = (if v_196 then 3-proj-3-tuple(v_195) else caught-fail) in
        {611}let ck_29: key = (if v_196 then 2-proj-3-tuple(v_195) else caught-fail) in
        {612}let cs_26: cipherstate = (if v_196 then 1-proj-3-tuple(v_195) else caught-fail) in
        {613}let output1_4: key = (if v_196 then hmac_hash1(ck_29,input_key_material_4) else caught-fail) in
        {614}let output2_4: key = (if v_196 then hmac_hash2(ck_29,input_key_material_4) else caught-fail) in
        {615}let output3_4: key = (if v_196 then hmac_hash3(ck_29,input_key_material_4) else caught-fail) in
        {616}let v_197: bitstring = (if v_196 then catch-fail((output1_4,output2_4,output3_4)) else caught-fail) in
        {617}let v_198: bool = (not-caught-fail(v_197) && success?(1-proj-3-tuple(v_197))) in
        {618}let output_2: key = (if v_198 then 3-proj-3-tuple(v_197) else caught-fail) in
        {619}let temp_k_3: key = (if v_198 then 2-proj-3-tuple(v_197) else caught-fail) in
        {620}let ck_30: key = (if v_198 then 1-proj-3-tuple(v_197) else caught-fail) in
        {621}let ss_31: symmetricstate = (if v_191 then catch-fail((if v_194 then (if v_196 then (if v_198 then symmetricstatepack(cipherstatepack(temp_k_3,minnonce),ck_30,h_26) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {622}let v_199: bool = not-caught-fail(ss_31) in
        {623}let v_200: bitstring = (if v_199 then catch-fail(symmetricstateunpack(ss_31)) else caught-fail) in
        {624}let v_201: bool = (not-caught-fail(v_200) && success?(1-proj-3-tuple(v_200))) in
        {625}let h_27: bitstring = (if v_201 then 3-proj-3-tuple(v_200) else caught-fail) in
        {626}let ck_31: key = (if v_201 then 2-proj-3-tuple(v_200) else caught-fail) in
        {627}let cs_27: cipherstate = (if v_201 then 1-proj-3-tuple(v_200) else caught-fail) in
        {628}let v_202: bitstring = (if v_201 then catch-fail(cipherstateunpack(cs_27)) else caught-fail) in
        {629}let v_203: bool = (not-caught-fail(v_202) && success?(1-proj-2-tuple(v_202))) in
        {630}let n_14: nonce = (if v_203 then 2-proj-2-tuple(v_202) else caught-fail) in
        {631}let k_16: key = (if v_203 then 1-proj-2-tuple(v_202) else caught-fail) in
        {632}let d_4: aead = (if v_203 then catch-fail(decrypt(k_16,n_14,h_27,ns_5)) else caught-fail) in
        {633}let v_204: bool = not-caught-fail(d_4) in
        {634}let v_205: bitstring = (if v_204 then catch-fail(aeadunpack(d_4)) else caught-fail) in
        {635}let v_206: bool = (not-caught-fail(v_205) && success?(1-proj-3-tuple(v_205))) in
        {636}let plaintext_10: bitstring = (if v_206 then 3-proj-3-tuple(v_205) else caught-fail) in
        {637}let adi_4: bitstring = (if v_206 then 2-proj-3-tuple(v_205) else caught-fail) in
        {638}let valid_10: bool = (if v_206 then 1-proj-3-tuple(v_205) else caught-fail) in
        {639}let n_15: nonce = (if v_206 then increment_nonce(n_14) else caught-fail) in
        {640}let v_207: bitstring = (if v_206 then catch-fail(cipherstateunpack(cs_27)) else caught-fail) in
        {641}let v_208: bool = (not-caught-fail(v_207) && success?(1-proj-2-tuple(v_207))) in
        {642}let o_7: nonce = (if v_208 then 2-proj-2-tuple(v_207) else caught-fail) in
        {643}let k_17: key = (if v_208 then 1-proj-2-tuple(v_207) else caught-fail) in
        {644}let csi_14: cipherstate = (if v_206 then catch-fail((if v_208 then cipherstatepack(k_17,n_15) else fail-any)) else caught-fail) in
        {645}let v_209: bool = not-caught-fail(csi_14) in
        {646}let v_210: bitstring = (if v_201 then catch-fail((if v_203 then (if v_204 then (if v_206 then (if v_209 then (csi_14,plaintext_10,valid_10) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {647}let v_211: bool = (not-caught-fail(v_210) && success?(1-proj-3-tuple(v_210))) in
        {648}let valid_11: bool = (if v_211 then 3-proj-3-tuple(v_210) else caught-fail) in
        {649}let plaintext_11: bitstring = (if v_211 then 2-proj-3-tuple(v_210) else caught-fail) in
        {650}let csi_15: cipherstate = (if v_211 then 1-proj-3-tuple(v_210) else caught-fail) in
        {651}let ss_32: symmetricstate = (if v_211 then symmetricstatepack(csi_15,ck_31,h_27) else caught-fail) in
        {652}let v_212: bitstring = (if v_211 then catch-fail(symmetricstateunpack(ss_32)) else caught-fail) in
        {653}let v_213: bool = (not-caught-fail(v_212) && success?(1-proj-3-tuple(v_212))) in
        {654}let h_28: bitstring = (if v_213 then 3-proj-3-tuple(v_212) else caught-fail) in
        {655}let ck_32: key = (if v_213 then 2-proj-3-tuple(v_212) else caught-fail) in
        {656}let cs_28: cipherstate = (if v_213 then 1-proj-3-tuple(v_212) else caught-fail) in
        {657}let ssi_8: symmetricstate = (if v_211 then catch-fail((if v_213 then symmetricstatepack(cs_28,ck_32,hash(h_28,ns_5)) else fail-any)) else caught-fail) in
        {658}let v_214: bool = not-caught-fail(ssi_8) in
        {659}let v_215: bitstring = (if v_199 then catch-fail((if v_201 then (if v_211 then (if v_214 then (ssi_8,plaintext_11,valid_11) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {660}let v_216: bool = (not-caught-fail(v_215) && success?(1-proj-3-tuple(v_215))) in
        {661}let valid1_4: bool = (if v_216 then 3-proj-3-tuple(v_215) else caught-fail) in
        {662}let ne_10: bitstring = (if v_216 then 2-proj-3-tuple(v_215) else caught-fail) in
        {663}let ss_33: symmetricstate = (if v_216 then 1-proj-3-tuple(v_215) else caught-fail) in
        {664}let rs_9: key = (if v_216 then ne_10 else caught-fail) in
        {665}let v_217: bitstring = (if v_216 then catch-fail(symmetricstateunpack(ss_33)) else caught-fail) in
        {666}let v_218: bool = (not-caught-fail(v_217) && success?(1-proj-3-tuple(v_217))) in
        {667}let h_29: bitstring = (if v_218 then 3-proj-3-tuple(v_217) else caught-fail) in
        {668}let ck_33: key = (if v_218 then 2-proj-3-tuple(v_217) else caught-fail) in
        {669}let cs_29: cipherstate = (if v_218 then 1-proj-3-tuple(v_217) else caught-fail) in
        {670}let v_219: bitstring = (if v_218 then catch-fail(cipherstateunpack(cs_29)) else caught-fail) in
        {671}let v_220: bool = (not-caught-fail(v_219) && success?(1-proj-2-tuple(v_219))) in
        {672}let n_16: nonce = (if v_220 then 2-proj-2-tuple(v_219) else caught-fail) in
        {673}let k_18: key = (if v_220 then 1-proj-2-tuple(v_219) else caught-fail) in
        {674}let d_5: aead = (if v_220 then catch-fail(decrypt(k_18,n_16,h_29,nm_2)) else caught-fail) in
        {675}let v_221: bool = not-caught-fail(d_5) in
        {676}let v_222: bitstring = (if v_221 then catch-fail(aeadunpack(d_5)) else caught-fail) in
        {677}let v_223: bool = (not-caught-fail(v_222) && success?(1-proj-3-tuple(v_222))) in
        {678}let plaintext_12: bitstring = (if v_223 then 3-proj-3-tuple(v_222) else caught-fail) in
        {679}let adi_5: bitstring = (if v_223 then 2-proj-3-tuple(v_222) else caught-fail) in
        {680}let valid_12: bool = (if v_223 then 1-proj-3-tuple(v_222) else caught-fail) in
        {681}let n_17: nonce = (if v_223 then increment_nonce(n_16) else caught-fail) in
        {682}let v_224: bitstring = (if v_223 then catch-fail(cipherstateunpack(cs_29)) else caught-fail) in
        {683}let v_225: bool = (not-caught-fail(v_224) && success?(1-proj-2-tuple(v_224))) in
        {684}let o_8: nonce = (if v_225 then 2-proj-2-tuple(v_224) else caught-fail) in
        {685}let k_19: key = (if v_225 then 1-proj-2-tuple(v_224) else caught-fail) in
        {686}let csi_16: cipherstate = (if v_223 then catch-fail((if v_225 then cipherstatepack(k_19,n_17) else fail-any)) else caught-fail) in
        {687}let v_226: bool = not-caught-fail(csi_16) in
        {688}let v_227: bitstring = (if v_218 then catch-fail((if v_220 then (if v_221 then (if v_223 then (if v_226 then (csi_16,plaintext_12,valid_12) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {689}let v_228: bool = (not-caught-fail(v_227) && success?(1-proj-3-tuple(v_227))) in
        {690}let valid_13: bool = (if v_228 then 3-proj-3-tuple(v_227) else caught-fail) in
        {691}let plaintext_13: bitstring = (if v_228 then 2-proj-3-tuple(v_227) else caught-fail) in
        {692}let csi_17: cipherstate = (if v_228 then 1-proj-3-tuple(v_227) else caught-fail) in
        {693}let ss_34: symmetricstate = (if v_228 then symmetricstatepack(csi_17,ck_33,h_29) else caught-fail) in
        {694}let v_229: bitstring = (if v_228 then catch-fail(symmetricstateunpack(ss_34)) else caught-fail) in
        {695}let v_230: bool = (not-caught-fail(v_229) && success?(1-proj-3-tuple(v_229))) in
        {696}let h_30: bitstring = (if v_230 then 3-proj-3-tuple(v_229) else caught-fail) in
        {697}let ck_34: key = (if v_230 then 2-proj-3-tuple(v_229) else caught-fail) in
        {698}let cs_30: cipherstate = (if v_230 then 1-proj-3-tuple(v_229) else caught-fail) in
        {699}let ssi_9: symmetricstate = (if v_228 then catch-fail((if v_230 then symmetricstatepack(cs_30,ck_34,hash(h_30,nm_2)) else fail-any)) else caught-fail) in
        {700}let v_231: bool = not-caught-fail(ssi_9) in
        {701}let v_232: bitstring = (if v_216 then catch-fail((if v_218 then (if v_228 then (if v_231 then (ssi_9,plaintext_13,valid_13) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {702}let v_233: bool = (not-caught-fail(v_232) && success?(1-proj-3-tuple(v_232))) in
        {703}let valid2_4: bool = (if v_233 then 3-proj-3-tuple(v_232) else caught-fail) in
        {704}let ne_11: bitstring = (if v_233 then 2-proj-3-tuple(v_232) else caught-fail) in
        {705}let ss_35: symmetricstate = (if v_233 then 1-proj-3-tuple(v_232) else caught-fail) in
        {706}let rm_9: key = (if v_233 then ne_11 else caught-fail) in
        {707}let v_234: bitstring = (if v_233 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {708}let v_235: bool = (not-caught-fail(v_234) && success?(1-proj-2-tuple(v_234))) in
        {709}let my_private_key_4: key = (if v_235 then 2-proj-2-tuple(v_234) else caught-fail) in
        {710}let my_public_key_4: key = (if v_235 then 1-proj-2-tuple(v_234) else caught-fail) in
        {711}let input_key_material_5: key = (if v_233 then catch-fail((if v_235 then dhexp(my_private_key_4,rs_9) else fail-any)) else caught-fail) in
        {712}let v_236: bool = not-caught-fail(input_key_material_5) in
        {713}let v_237: bitstring = (if v_236 then catch-fail(symmetricstateunpack(ss_35)) else caught-fail) in
        {714}let v_238: bool = (not-caught-fail(v_237) && success?(1-proj-3-tuple(v_237))) in
        {715}let h_31: bitstring = (if v_238 then 3-proj-3-tuple(v_237) else caught-fail) in
        {716}let ck_35: key = (if v_238 then 2-proj-3-tuple(v_237) else caught-fail) in
        {717}let cs_31: cipherstate = (if v_238 then 1-proj-3-tuple(v_237) else caught-fail) in
        {718}let output1_5: key = (if v_238 then hmac_hash1(ck_35,input_key_material_5) else caught-fail) in
        {719}let output2_5: key = (if v_238 then hmac_hash2(ck_35,input_key_material_5) else caught-fail) in
        {720}let output3_5: key = (if v_238 then hmac_hash3(ck_35,input_key_material_5) else caught-fail) in
        {721}let v_239: bitstring = (if v_238 then catch-fail((output1_5,output2_5,output3_5)) else caught-fail) in
        {722}let v_240: bool = (not-caught-fail(v_239) && success?(1-proj-3-tuple(v_239))) in
        {723}let output_4: key = (if v_240 then 3-proj-3-tuple(v_239) else caught-fail) in
        {724}let temp_k_4: key = (if v_240 then 2-proj-3-tuple(v_239) else caught-fail) in
        {725}let ck_36: key = (if v_240 then 1-proj-3-tuple(v_239) else caught-fail) in
        {726}let ss_36: symmetricstate = (if v_233 then catch-fail((if v_236 then (if v_238 then (if v_240 then symmetricstatepack(cipherstatepack(temp_k_4,minnonce),ck_36,h_31) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {727}let v_241: bool = not-caught-fail(ss_36) in
        {728}let v_242: bitstring = (if v_241 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {729}let v_243: bool = (not-caught-fail(v_242) && success?(1-proj-2-tuple(v_242))) in
        {730}let my_private_key_5: key = (if v_243 then 2-proj-2-tuple(v_242) else caught-fail) in
        {731}let my_public_key_5: key = (if v_243 then 1-proj-2-tuple(v_242) else caught-fail) in
        {732}let input_key_material_6: key = (if v_241 then catch-fail((if v_243 then dhexp(my_private_key_5,rm_9) else fail-any)) else caught-fail) in
        {733}let v_244: bool = not-caught-fail(input_key_material_6) in
        {734}let v_245: bitstring = (if v_244 then catch-fail(symmetricstateunpack(ss_36)) else caught-fail) in
        {735}let v_246: bool = (not-caught-fail(v_245) && success?(1-proj-3-tuple(v_245))) in
        {736}let h_32: bitstring = (if v_246 then 3-proj-3-tuple(v_245) else caught-fail) in
        {737}let ck_37: key = (if v_246 then 2-proj-3-tuple(v_245) else caught-fail) in
        {738}let cs_32: cipherstate = (if v_246 then 1-proj-3-tuple(v_245) else caught-fail) in
        {739}let output1_6: key = (if v_246 then hmac_hash1(ck_37,input_key_material_6) else caught-fail) in
        {740}let output2_6: key = (if v_246 then hmac_hash2(ck_37,input_key_material_6) else caught-fail) in
        {741}let output3_6: key = (if v_246 then hmac_hash3(ck_37,input_key_material_6) else caught-fail) in
        {742}let v_247: bitstring = (if v_246 then catch-fail((output1_6,output2_6,output3_6)) else caught-fail) in
        {743}let v_248: bool = (not-caught-fail(v_247) && success?(1-proj-3-tuple(v_247))) in
        {744}let output_5: key = (if v_248 then 3-proj-3-tuple(v_247) else caught-fail) in
        {745}let temp_k_5: key = (if v_248 then 2-proj-3-tuple(v_247) else caught-fail) in
        {746}let ck_38: key = (if v_248 then 1-proj-3-tuple(v_247) else caught-fail) in
        {747}let ss_37: symmetricstate = (if v_241 then catch-fail((if v_244 then (if v_246 then (if v_248 then symmetricstatepack(cipherstatepack(temp_k_5,minnonce),ck_38,h_32) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {748}let v_249: bool = not-caught-fail(ss_37) in
        {749}let v_250: bitstring = (if v_249 then catch-fail(symmetricstateunpack(ss_37)) else caught-fail) in
        {750}let v_251: bool = (not-caught-fail(v_250) && success?(1-proj-3-tuple(v_250))) in
        {751}let h_33: bitstring = (if v_251 then 3-proj-3-tuple(v_250) else caught-fail) in
        {752}let ck_39: key = (if v_251 then 2-proj-3-tuple(v_250) else caught-fail) in
        {753}let cs_33: cipherstate = (if v_251 then 1-proj-3-tuple(v_250) else caught-fail) in
        {754}let v_252: bitstring = (if v_251 then catch-fail(cipherstateunpack(cs_33)) else caught-fail) in
        {755}let v_253: bool = (not-caught-fail(v_252) && success?(1-proj-2-tuple(v_252))) in
        {756}let n_18: nonce = (if v_253 then 2-proj-2-tuple(v_252) else caught-fail) in
        {757}let k_20: key = (if v_253 then 1-proj-2-tuple(v_252) else caught-fail) in
        {758}let d_6: aead = (if v_253 then catch-fail(decrypt(k_20,n_18,h_33,ciphertext_11)) else caught-fail) in
        {759}let v_254: bool = not-caught-fail(d_6) in
        {760}let v_255: bitstring = (if v_254 then catch-fail(aeadunpack(d_6)) else caught-fail) in
        {761}let v_256: bool = (not-caught-fail(v_255) && success?(1-proj-3-tuple(v_255))) in
        {762}let plaintext_14: bitstring = (if v_256 then 3-proj-3-tuple(v_255) else caught-fail) in
        {763}let adi_6: bitstring = (if v_256 then 2-proj-3-tuple(v_255) else caught-fail) in
        {764}let valid_14: bool = (if v_256 then 1-proj-3-tuple(v_255) else caught-fail) in
        {765}let n_19: nonce = (if v_256 then increment_nonce(n_18) else caught-fail) in
        {766}let v_257: bitstring = (if v_256 then catch-fail(cipherstateunpack(cs_33)) else caught-fail) in
        {767}let v_258: bool = (not-caught-fail(v_257) && success?(1-proj-2-tuple(v_257))) in
        {768}let o_9: nonce = (if v_258 then 2-proj-2-tuple(v_257) else caught-fail) in
        {769}let k_21: key = (if v_258 then 1-proj-2-tuple(v_257) else caught-fail) in
        {770}let csi_18: cipherstate = (if v_256 then catch-fail((if v_258 then cipherstatepack(k_21,n_19) else fail-any)) else caught-fail) in
        {771}let v_259: bool = not-caught-fail(csi_18) in
        {772}let v_260: bitstring = (if v_251 then catch-fail((if v_253 then (if v_254 then (if v_256 then (if v_259 then (csi_18,plaintext_14,valid_14) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {773}let v_261: bool = (not-caught-fail(v_260) && success?(1-proj-3-tuple(v_260))) in
        {774}let valid_15: bool = (if v_261 then 3-proj-3-tuple(v_260) else caught-fail) in
        {775}let plaintext_15: bitstring = (if v_261 then 2-proj-3-tuple(v_260) else caught-fail) in
        {776}let csi_19: cipherstate = (if v_261 then 1-proj-3-tuple(v_260) else caught-fail) in
        {777}let ss_38: symmetricstate = (if v_261 then symmetricstatepack(csi_19,ck_39,h_33) else caught-fail) in
        {778}let v_262: bitstring = (if v_261 then catch-fail(symmetricstateunpack(ss_38)) else caught-fail) in
        {779}let v_263: bool = (not-caught-fail(v_262) && success?(1-proj-3-tuple(v_262))) in
        {780}let h_34: bitstring = (if v_263 then 3-proj-3-tuple(v_262) else caught-fail) in
        {781}let ck_40: key = (if v_263 then 2-proj-3-tuple(v_262) else caught-fail) in
        {782}let cs_34: cipherstate = (if v_263 then 1-proj-3-tuple(v_262) else caught-fail) in
        {783}let ssi_10: symmetricstate = (if v_261 then catch-fail((if v_263 then symmetricstatepack(cs_34,ck_40,hash(h_34,ciphertext_11)) else fail-any)) else caught-fail) in
        {784}let v_264: bool = not-caught-fail(ssi_10) in
        {785}let v_265: bitstring = (if v_249 then catch-fail((if v_251 then (if v_261 then (if v_264 then (ssi_10,plaintext_15,valid_15) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {786}let v_266: bool = (not-caught-fail(v_265) && success?(1-proj-3-tuple(v_265))) in
        {787}let valid3_1: bool = (if v_266 then 3-proj-3-tuple(v_265) else caught-fail) in
        {788}let plaintext_16: bitstring = (if v_266 then 2-proj-3-tuple(v_265) else caught-fail) in
        {789}let ss_39: symmetricstate = (if v_266 then 1-proj-3-tuple(v_265) else caught-fail) in
        {790}let basis_4: key = (if v_266 then key_s(them_1) else caught-fail) in
        {791}let public_key_4: key = (if v_266 then catch-fail(dhexp(basis_4,validkey(g))) else caught-fail) in
        {792}let v_267: bool = not-caught-fail(public_key_4) in
        {793}let basis_5: key = (if v_266 then key_m(them_1) else caught-fail) in
        {794}let public_key_5: key = (if v_266 then catch-fail(dhexp(basis_5,validkey(g))) else caught-fail) in
        {795}let v_268: bool = not-caught-fail(public_key_5) in
        {796}let v_269: bool = (if v_266 then catch-fail(((valid1_4 && (valid2_4 && valid3_1)) && ((rs_9 = getpublickey((if v_267 then keypairpack(validkey(public_key_4),basis_4) else fail-any))) && (rm_9 = getpublickey((if v_268 then keypairpack(validkey(public_key_5),basis_5) else fail-any)))))) else caught-fail) in
        {797}let hs_20: handshakestate = (if v_269 then handshakestatepack(ss_39,s_7,m_7,e_12,rs_9,rm_9,re_9,psk_7,initiator_6) else caught-fail) in
        {798}let v_270: bitstring = (if v_269 then catch-fail(symmetricstateunpack(ss_39)) else caught-fail) in
        {799}let v_271: bool = (not-caught-fail(v_270) && success?(1-proj-3-tuple(v_270))) in
        {800}let h_35: bitstring = (if v_271 then 3-proj-3-tuple(v_270) else caught-fail) in
        {801}let ck_41: key = (if v_271 then 2-proj-3-tuple(v_270) else caught-fail) in
        {802}let cs_35: cipherstate = (if v_271 then 1-proj-3-tuple(v_270) else caught-fail) in
        {803}let input_key_material_7: key = (if v_271 then zero else caught-fail) in
        {804}let output1_7: key = (if v_271 then hmac_hash1(ck_41,input_key_material_7) else caught-fail) in
        {805}let output2_7: key = (if v_271 then hmac_hash2(ck_41,input_key_material_7) else caught-fail) in
        {806}let output3_7: key = (if v_271 then hmac_hash3(ck_41,input_key_material_7) else caught-fail) in
        {807}let v_272: bitstring = (if v_271 then catch-fail((output1_7,output2_7,output3_7)) else caught-fail) in
        {808}let v_273: bool = (not-caught-fail(v_272) && success?(1-proj-3-tuple(v_272))) in
        {809}let temp_k3_1: key = (if v_273 then 3-proj-3-tuple(v_272) else caught-fail) in
        {810}let temp_k2_1: key = (if v_273 then 2-proj-3-tuple(v_272) else caught-fail) in
        {811}let temp_k1_1: key = (if v_273 then 1-proj-3-tuple(v_272) else caught-fail) in
        {812}let cs1_5: cipherstate = (if v_273 then cipherstatepack(temp_k1_1,minnonce) else caught-fail) in
        {813}let cs2_5: cipherstate = (if v_273 then cipherstatepack(temp_k2_1,minnonce) else caught-fail) in
        {814}let v_274: bitstring = (if v_269 then catch-fail((if v_271 then (if v_273 then (ss_39,cs1_5,cs2_5) else fail-any) else fail-any)) else caught-fail) in
        {815}let v_275: bool = (not-caught-fail(v_274) && success?(1-proj-3-tuple(v_274))) in
        {816}let cs2_6: cipherstate = (if v_275 then 3-proj-3-tuple(v_274) else caught-fail) in
        {817}let cs1_6: cipherstate = (if v_275 then 2-proj-3-tuple(v_274) else caught-fail) in
        {818}let ssi_11: symmetricstate = (if v_275 then 1-proj-3-tuple(v_274) else caught-fail) in
        {819}let (hs_21: handshakestate,plaintext_b_1: bitstring,valid_16: bool,cs1_7: cipherstate,cs2_7: cipherstate) = (if v_186 then (if v_188 then (if v_191 then (if v_199 then (if v_216 then (if v_233 then (if v_241 then (if v_249 then (if v_266 then (if undo-catch-fail(v_269) then (if v_275 then (hs_20,plaintext_16,true,cs1_6,cs2_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {820}event RecvMsg(me_1,them_1,stagepack_b(sid_2),plaintext_b_1);
        {821}insert statestore(me_1,them_1,sid_2,statepack_c(hs_21,cs1_7,cs2_7))
    ) | (
        {823}!
        {882}get statestore(=me_1,=them_1,=sid_2,statepack_c(hs_22: handshakestate,cs1_8: cipherstate,cs2_8: cipherstate)) in
        {824}let hs_23: handshakestate = handshakestatesetcs(hs_22,cs1_8) in
        {825}let payload_3: bitstring = msg_c(me_1,them_1,sid_2) in
        {826}let v_276: bitstring = catch-fail(handshakestateunpack(hs_23)) in
        {827}let v_277: bool = (not-caught-fail(v_276) && success?(1-proj-9-tuple(v_276))) in
        {828}let initiator_7: bool = (if v_277 then 9-proj-9-tuple(v_276) else caught-fail) in
        {829}let psk_8: key = (if v_277 then 8-proj-9-tuple(v_276) else caught-fail) in
        {830}let re_10: key = (if v_277 then 7-proj-9-tuple(v_276) else caught-fail) in
        {831}let rm_10: key = (if v_277 then 6-proj-9-tuple(v_276) else caught-fail) in
        {832}let rs_10: key = (if v_277 then 5-proj-9-tuple(v_276) else caught-fail) in
        {833}let e_13: keypair = (if v_277 then 4-proj-9-tuple(v_276) else caught-fail) in
        {834}let m_8: keypair = (if v_277 then 3-proj-9-tuple(v_276) else caught-fail) in
        {835}let s_8: keypair = (if v_277 then 2-proj-9-tuple(v_276) else caught-fail) in
        {836}let ss_40: symmetricstate = (if v_277 then 1-proj-9-tuple(v_276) else caught-fail) in
        {837}let v_278: bitstring = (if v_277 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {838}let v_279: bool = (not-caught-fail(v_278) && success?(1-proj-4-tuple(v_278))) in
        {839}let ciphertext_12: bitstring = (if v_279 then 4-proj-4-tuple(v_278) else caught-fail) in
        {840}let nm_3: bitstring = (if v_279 then 3-proj-4-tuple(v_278) else caught-fail) in
        {841}let ns_6: bitstring = (if v_279 then 2-proj-4-tuple(v_278) else caught-fail) in
        {842}let ne_12: bitstring = (if v_279 then 1-proj-4-tuple(v_278) else caught-fail) in
        {843}let v_280: bitstring = (if v_279 then catch-fail(symmetricstateunpack(ss_40)) else caught-fail) in
        {844}let v_281: bool = (not-caught-fail(v_280) && success?(1-proj-3-tuple(v_280))) in
        {845}let h_36: bitstring = (if v_281 then 3-proj-3-tuple(v_280) else caught-fail) in
        {846}let ck_42: key = (if v_281 then 2-proj-3-tuple(v_280) else caught-fail) in
        {847}let cs_36: cipherstate = (if v_281 then 1-proj-3-tuple(v_280) else caught-fail) in
        {848}let v_282: bitstring = (if v_281 then catch-fail(cipherstateunpack(cs_36)) else caught-fail) in
        {849}let v_283: bool = (not-caught-fail(v_282) && success?(1-proj-2-tuple(v_282))) in
        {850}let n_20: nonce = (if v_283 then 2-proj-2-tuple(v_282) else caught-fail) in
        {851}let k_22: key = (if v_283 then 1-proj-2-tuple(v_282) else caught-fail) in
        {852}let e_14: bitstring = (if v_283 then encrypt(k_22,n_20,h_36,payload_3) else caught-fail) in
        {853}let n_21: nonce = (if v_283 then increment_nonce(n_20) else caught-fail) in
        {854}let v_284: bitstring = (if v_283 then catch-fail(cipherstateunpack(cs_36)) else caught-fail) in
        {855}let v_285: bool = (not-caught-fail(v_284) && success?(1-proj-2-tuple(v_284))) in
        {856}let o_10: nonce = (if v_285 then 2-proj-2-tuple(v_284) else caught-fail) in
        {857}let k_23: key = (if v_285 then 1-proj-2-tuple(v_284) else caught-fail) in
        {858}let csi_20: cipherstate = (if v_283 then catch-fail((if v_285 then cipherstatepack(k_23,n_21) else fail-any)) else caught-fail) in
        {859}let v_286: bool = not-caught-fail(csi_20) in
        {860}let v_287: bitstring = (if v_281 then catch-fail((if v_283 then (if v_286 then (csi_20,e_14) else fail-any) else fail-any)) else caught-fail) in
        {861}let v_288: bool = (not-caught-fail(v_287) && success?(1-proj-2-tuple(v_287))) in
        {862}let ciphertext_13: bitstring = (if v_288 then 2-proj-2-tuple(v_287) else caught-fail) in
        {863}let csi_21: cipherstate = (if v_288 then 1-proj-2-tuple(v_287) else caught-fail) in
        {864}let ss_41: symmetricstate = (if v_288 then symmetricstatepack(csi_21,ck_42,h_36) else caught-fail) in
        {865}let v_289: bitstring = (if v_288 then catch-fail(symmetricstateunpack(ss_41)) else caught-fail) in
        {866}let v_290: bool = (not-caught-fail(v_289) && success?(1-proj-3-tuple(v_289))) in
        {867}let h_37: bitstring = (if v_290 then 3-proj-3-tuple(v_289) else caught-fail) in
        {868}let ck_43: key = (if v_290 then 2-proj-3-tuple(v_289) else caught-fail) in
        {869}let cs_37: cipherstate = (if v_290 then 1-proj-3-tuple(v_289) else caught-fail) in
        {870}let ssi_12: symmetricstate = (if v_288 then catch-fail((if v_290 then symmetricstatepack(cs_37,ck_43,hash(h_37,ciphertext_13)) else fail-any)) else caught-fail) in
        {871}let v_291: bool = not-caught-fail(ssi_12) in
        {872}let v_292: bitstring = (if v_279 then catch-fail((if v_281 then (if v_288 then (if v_291 then (ssi_12,ciphertext_13) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {873}let v_293: bool = (not-caught-fail(v_292) && success?(1-proj-2-tuple(v_292))) in
        {874}let ciphertext_14: bitstring = (if v_293 then 2-proj-2-tuple(v_292) else caught-fail) in
        {875}let ss_42: symmetricstate = (if v_293 then 1-proj-2-tuple(v_292) else caught-fail) in
        {876}let hs_24: handshakestate = (if v_293 then handshakestatepack(ss_42,s_8,m_8,e_13,rs_10,rm_10,re_10,psk_8,initiator_7) else caught-fail) in
        {877}let message_buffer_3: bitstring = (if v_293 then concat3(ne_12,ns_6,ciphertext_14) else caught-fail) in
        {878}let (hs_25: handshakestate,message_c_1: bitstring) = (if v_277 then (if v_279 then (if v_293 then (hs_24,message_buffer_3) else fail-any) else fail-any) else fail-any) in
        {879}event SendMsg(me_1,them_1,stagepack_c(sid_2),msg_c(me_1,them_1,sid_2));
        {880}insert statestore(me_1,them_1,sid_2,statepack_d(hs_25,handshakestategetcs(hs_25),cs2_8));
        {881}out(pub, message_c_1)
    ) | (
        {883}!
        {949}get statestore(=me_1,=them_1,=sid_2,statepack_d(hs_26: handshakestate,cs1_9: cipherstate,cs2_9: cipherstate)) in
        {884}let hs_27: handshakestate = handshakestatesetcs(hs_26,cs2_9) in
        {885}in(pub, message_d_1: bitstring);
        {886}let v_294: bitstring = catch-fail(handshakestateunpack(hs_27)) in
        {887}let v_295: bool = (not-caught-fail(v_294) && success?(1-proj-9-tuple(v_294))) in
        {888}let initiator_8: bool = (if v_295 then 9-proj-9-tuple(v_294) else caught-fail) in
        {889}let psk_9: key = (if v_295 then 8-proj-9-tuple(v_294) else caught-fail) in
        {890}let re_11: key = (if v_295 then 7-proj-9-tuple(v_294) else caught-fail) in
        {891}let rm_11: key = (if v_295 then 6-proj-9-tuple(v_294) else caught-fail) in
        {892}let rs_11: key = (if v_295 then 5-proj-9-tuple(v_294) else caught-fail) in
        {893}let e_15: keypair = (if v_295 then 4-proj-9-tuple(v_294) else caught-fail) in
        {894}let m_9: keypair = (if v_295 then 3-proj-9-tuple(v_294) else caught-fail) in
        {895}let s_9: keypair = (if v_295 then 2-proj-9-tuple(v_294) else caught-fail) in
        {896}let ss_43: symmetricstate = (if v_295 then 1-proj-9-tuple(v_294) else caught-fail) in
        {897}let v_296: bitstring = (if v_295 then catch-fail(deconcat3(message_d_1)) else caught-fail) in
        {898}let v_297: bool = (not-caught-fail(v_296) && success?(1-proj-3-tuple(v_296))) in
        {899}let ciphertext_15: bitstring = (if v_297 then 3-proj-3-tuple(v_296) else caught-fail) in
        {900}let ns_7: bitstring = (if v_297 then 2-proj-3-tuple(v_296) else caught-fail) in
        {901}let ne_13: bitstring = (if v_297 then 1-proj-3-tuple(v_296) else caught-fail) in
        {902}let valid1_5: bool = (if v_297 then true else caught-fail) in
        {903}let v_298: bitstring = (if v_297 then catch-fail(symmetricstateunpack(ss_43)) else caught-fail) in
        {904}let v_299: bool = (not-caught-fail(v_298) && success?(1-proj-3-tuple(v_298))) in
        {905}let h_38: bitstring = (if v_299 then 3-proj-3-tuple(v_298) else caught-fail) in
        {906}let ck_44: key = (if v_299 then 2-proj-3-tuple(v_298) else caught-fail) in
        {907}let cs_38: cipherstate = (if v_299 then 1-proj-3-tuple(v_298) else caught-fail) in
        {908}let v_300: bitstring = (if v_299 then catch-fail(cipherstateunpack(cs_38)) else caught-fail) in
        {909}let v_301: bool = (not-caught-fail(v_300) && success?(1-proj-2-tuple(v_300))) in
        {910}let n_22: nonce = (if v_301 then 2-proj-2-tuple(v_300) else caught-fail) in
        {911}let k_24: key = (if v_301 then 1-proj-2-tuple(v_300) else caught-fail) in
        {912}let d_7: aead = (if v_301 then catch-fail(decrypt(k_24,n_22,h_38,ciphertext_15)) else caught-fail) in
        {913}let v_302: bool = not-caught-fail(d_7) in
        {914}let v_303: bitstring = (if v_302 then catch-fail(aeadunpack(d_7)) else caught-fail) in
        {915}let v_304: bool = (not-caught-fail(v_303) && success?(1-proj-3-tuple(v_303))) in
        {916}let plaintext_17: bitstring = (if v_304 then 3-proj-3-tuple(v_303) else caught-fail) in
        {917}let adi_7: bitstring = (if v_304 then 2-proj-3-tuple(v_303) else caught-fail) in
        {918}let valid_17: bool = (if v_304 then 1-proj-3-tuple(v_303) else caught-fail) in
        {919}let n_23: nonce = (if v_304 then increment_nonce(n_22) else caught-fail) in
        {920}let v_305: bitstring = (if v_304 then catch-fail(cipherstateunpack(cs_38)) else caught-fail) in
        {921}let v_306: bool = (not-caught-fail(v_305) && success?(1-proj-2-tuple(v_305))) in
        {922}let o_11: nonce = (if v_306 then 2-proj-2-tuple(v_305) else caught-fail) in
        {923}let k_25: key = (if v_306 then 1-proj-2-tuple(v_305) else caught-fail) in
        {924}let csi_22: cipherstate = (if v_304 then catch-fail((if v_306 then cipherstatepack(k_25,n_23) else fail-any)) else caught-fail) in
        {925}let v_307: bool = not-caught-fail(csi_22) in
        {926}let v_308: bitstring = (if v_299 then catch-fail((if v_301 then (if v_302 then (if v_304 then (if v_307 then (csi_22,plaintext_17,valid_17) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {927}let v_309: bool = (not-caught-fail(v_308) && success?(1-proj-3-tuple(v_308))) in
        {928}let valid_18: bool = (if v_309 then 3-proj-3-tuple(v_308) else caught-fail) in
        {929}let plaintext_18: bitstring = (if v_309 then 2-proj-3-tuple(v_308) else caught-fail) in
        {930}let csi_23: cipherstate = (if v_309 then 1-proj-3-tuple(v_308) else caught-fail) in
        {931}let ss_44: symmetricstate = (if v_309 then symmetricstatepack(csi_23,ck_44,h_38) else caught-fail) in
        {932}let v_310: bitstring = (if v_309 then catch-fail(symmetricstateunpack(ss_44)) else caught-fail) in
        {933}let v_311: bool = (not-caught-fail(v_310) && success?(1-proj-3-tuple(v_310))) in
        {934}let h_39: bitstring = (if v_311 then 3-proj-3-tuple(v_310) else caught-fail) in
        {935}let ck_45: key = (if v_311 then 2-proj-3-tuple(v_310) else caught-fail) in
        {936}let cs_39: cipherstate = (if v_311 then 1-proj-3-tuple(v_310) else caught-fail) in
        {937}let ssi_13: symmetricstate = (if v_309 then catch-fail((if v_311 then symmetricstatepack(cs_39,ck_45,hash(h_39,ciphertext_15)) else fail-any)) else caught-fail) in
        {938}let v_312: bool = not-caught-fail(ssi_13) in
        {939}let v_313: bitstring = (if v_297 then catch-fail((if v_299 then (if v_309 then (if v_312 then (ssi_13,plaintext_18,valid_18) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {940}let v_314: bool = (not-caught-fail(v_313) && success?(1-proj-3-tuple(v_313))) in
        {941}let valid2_5: bool = (if v_314 then 3-proj-3-tuple(v_313) else caught-fail) in
        {942}let plaintext_19: bitstring = (if v_314 then 2-proj-3-tuple(v_313) else caught-fail) in
        {943}let ss_45: symmetricstate = (if v_314 then 1-proj-3-tuple(v_313) else caught-fail) in
        {944}let v_315: bool = (if v_314 then catch-fail((valid1_5 && valid2_5)) else caught-fail) in
        {945}let hs_28: handshakestate = (if v_315 then handshakestatepack(ss_45,s_9,m_9,e_15,rs_11,rm_11,re_11,psk_9,initiator_8) else caught-fail) in
        {946}let (hs_29: handshakestate,plaintext_d_1: bitstring,valid_19: bool) = (if v_295 then (if v_297 then (if v_314 then (if undo-catch-fail(v_315) then (hs_28,plaintext_19,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {947}event RecvMsg(me_1,them_1,stagepack_d(sid_2),plaintext_d_1);
        {948}event RecvEnd(valid_19)
    ) | (
        0
    )
) | (
    {950}let me_2: principal = bob in
    {951}let them_2: principal = alice in
    {952}let sid_3: sessionid = sid in
    {953}let s_10: keypair = keypairpack(empty,empty) in
    {954}let m_10: keypair = keypairpack(empty,empty) in
    {955}out(pub, (getpublickey(s_10),getpublickey(m_10)));
    (
        {956}let e_16: keypair = keypairpack(empty,empty) in
        {957}let rs_12: key = empty in
        {958}let rm_12: key = empty in
        {959}let re_12: key = empty in
        {960}let prologue_2: bitstring = empty in
        {961}let psk_10: key = empty in
        {962}let protocol_name_2: bitstring = somename in
        {963}let h_40: bitstring = hash(protocol_name_2,empty) in
        {964}let ck_46: key = h_40 in
        {965}let k_26: key = empty in
        {966}let cs_40: cipherstate = cipherstatepack(k_26,minnonce) in
        {967}let ss_46: symmetricstate = symmetricstatepack(cs_40,ck_46,h_40) in
        {968}let v_316: bitstring = catch-fail(symmetricstateunpack(ss_46)) in
        {969}let v_317: bool = (not-caught-fail(v_316) && success?(1-proj-3-tuple(v_316))) in
        {970}let h_41: bitstring = (if v_317 then 3-proj-3-tuple(v_316) else caught-fail) in
        {971}let ck_47: key = (if v_317 then 2-proj-3-tuple(v_316) else caught-fail) in
        {972}let cs_41: cipherstate = (if v_317 then 1-proj-3-tuple(v_316) else caught-fail) in
        {973}let ss_47: symmetricstate = catch-fail((if v_317 then symmetricstatepack(cs_41,ck_47,hash(h_41,prologue_2)) else fail-any)) in
        {974}let v_318: bool = not-caught-fail(ss_47) in
        {975}let hs_30: handshakestate = (if v_318 then handshakestatepack(ss_47,s_10,m_10,e_16,rs_12,rm_12,re_12,psk_10,false) else fail-any) in
        {976}insert statestore(me_2,them_2,sid_3,statepack_a(hs_30))
    ) | (
        {1049}get statestore(=me_2,=them_2,=sid_3,statepack_a(hs_31: handshakestate)) in
        {977}in(pub, message_a_2: bitstring);
        {978}let v_319: bitstring = catch-fail(handshakestateunpack(hs_31)) in
        {979}let v_320: bool = (not-caught-fail(v_319) && success?(1-proj-9-tuple(v_319))) in
        {980}let initiator_9: bool = (if v_320 then 9-proj-9-tuple(v_319) else caught-fail) in
        {981}let psk_11: key = (if v_320 then 8-proj-9-tuple(v_319) else caught-fail) in
        {982}let re_13: key = (if v_320 then 7-proj-9-tuple(v_319) else caught-fail) in
        {983}let rm_13: key = (if v_320 then 6-proj-9-tuple(v_319) else caught-fail) in
        {984}let rs_13: key = (if v_320 then 5-proj-9-tuple(v_319) else caught-fail) in
        {985}let e_17: keypair = (if v_320 then 4-proj-9-tuple(v_319) else caught-fail) in
        {986}let m_11: keypair = (if v_320 then 3-proj-9-tuple(v_319) else caught-fail) in
        {987}let s_11: keypair = (if v_320 then 2-proj-9-tuple(v_319) else caught-fail) in
        {988}let ss_48: symmetricstate = (if v_320 then 1-proj-9-tuple(v_319) else caught-fail) in
        {989}let v_321: bitstring = (if v_320 then catch-fail(deconcat3(message_a_2)) else caught-fail) in
        {990}let v_322: bool = (not-caught-fail(v_321) && success?(1-proj-3-tuple(v_321))) in
        {991}let ciphertext_16: bitstring = (if v_322 then 3-proj-3-tuple(v_321) else caught-fail) in
        {992}let ns_8: bitstring = (if v_322 then 2-proj-3-tuple(v_321) else caught-fail) in
        {993}let ne_14: bitstring = (if v_322 then 1-proj-3-tuple(v_321) else caught-fail) in
        {994}let valid1_6: bool = (if v_322 then true else caught-fail) in
        {995}let re_14: key = (if v_322 then ne_14 else caught-fail) in
        {996}let v_323: bitstring = (if v_322 then catch-fail(symmetricstateunpack(ss_48)) else caught-fail) in
        {997}let v_324: bool = (not-caught-fail(v_323) && success?(1-proj-3-tuple(v_323))) in
        {998}let h_42: bitstring = (if v_324 then 3-proj-3-tuple(v_323) else caught-fail) in
        {999}let ck_48: key = (if v_324 then 2-proj-3-tuple(v_323) else caught-fail) in
        {1000}let cs_42: cipherstate = (if v_324 then 1-proj-3-tuple(v_323) else caught-fail) in
        {1001}let ss_49: symmetricstate = (if v_322 then catch-fail((if v_324 then symmetricstatepack(cs_42,ck_48,hash(h_42,re_14)) else fail-any)) else caught-fail) in
        {1002}let v_325: bool = not-caught-fail(ss_49) in
        {1003}let v_326: bitstring = (if v_325 then catch-fail(symmetricstateunpack(ss_49)) else caught-fail) in
        {1004}let v_327: bool = (not-caught-fail(v_326) && success?(1-proj-3-tuple(v_326))) in
        {1005}let h_43: bitstring = (if v_327 then 3-proj-3-tuple(v_326) else caught-fail) in
        {1006}let ck_49: key = (if v_327 then 2-proj-3-tuple(v_326) else caught-fail) in
        {1007}let cs_43: cipherstate = (if v_327 then 1-proj-3-tuple(v_326) else caught-fail) in
        {1008}let v_328: bitstring = (if v_327 then catch-fail(cipherstateunpack(cs_43)) else caught-fail) in
        {1009}let v_329: bool = (not-caught-fail(v_328) && success?(1-proj-2-tuple(v_328))) in
        {1010}let n_24: nonce = (if v_329 then 2-proj-2-tuple(v_328) else caught-fail) in
        {1011}let k_27: key = (if v_329 then 1-proj-2-tuple(v_328) else caught-fail) in
        {1012}let d_8: aead = (if v_329 then catch-fail(decrypt(k_27,n_24,h_43,ciphertext_16)) else caught-fail) in
        {1013}let v_330: bool = not-caught-fail(d_8) in
        {1014}let v_331: bitstring = (if v_330 then catch-fail(aeadunpack(d_8)) else caught-fail) in
        {1015}let v_332: bool = (not-caught-fail(v_331) && success?(1-proj-3-tuple(v_331))) in
        {1016}let plaintext_20: bitstring = (if v_332 then 3-proj-3-tuple(v_331) else caught-fail) in
        {1017}let adi_8: bitstring = (if v_332 then 2-proj-3-tuple(v_331) else caught-fail) in
        {1018}let valid_20: bool = (if v_332 then 1-proj-3-tuple(v_331) else caught-fail) in
        {1019}let n_25: nonce = (if v_332 then increment_nonce(n_24) else caught-fail) in
        {1020}let v_333: bitstring = (if v_332 then catch-fail(cipherstateunpack(cs_43)) else caught-fail) in
        {1021}let v_334: bool = (not-caught-fail(v_333) && success?(1-proj-2-tuple(v_333))) in
        {1022}let o_12: nonce = (if v_334 then 2-proj-2-tuple(v_333) else caught-fail) in
        {1023}let k_28: key = (if v_334 then 1-proj-2-tuple(v_333) else caught-fail) in
        {1024}let csi_24: cipherstate = (if v_332 then catch-fail((if v_334 then cipherstatepack(k_28,n_25) else fail-any)) else caught-fail) in
        {1025}let v_335: bool = not-caught-fail(csi_24) in
        {1026}let v_336: bitstring = (if v_327 then catch-fail((if v_329 then (if v_330 then (if v_332 then (if v_335 then (csi_24,plaintext_20,valid_20) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1027}let v_337: bool = (not-caught-fail(v_336) && success?(1-proj-3-tuple(v_336))) in
        {1028}let valid_21: bool = (if v_337 then 3-proj-3-tuple(v_336) else caught-fail) in
        {1029}let plaintext_21: bitstring = (if v_337 then 2-proj-3-tuple(v_336) else caught-fail) in
        {1030}let csi_25: cipherstate = (if v_337 then 1-proj-3-tuple(v_336) else caught-fail) in
        {1031}let ss_50: symmetricstate = (if v_337 then symmetricstatepack(csi_25,ck_49,h_43) else caught-fail) in
        {1032}let v_338: bitstring = (if v_337 then catch-fail(symmetricstateunpack(ss_50)) else caught-fail) in
        {1033}let v_339: bool = (not-caught-fail(v_338) && success?(1-proj-3-tuple(v_338))) in
        {1034}let h_44: bitstring = (if v_339 then 3-proj-3-tuple(v_338) else caught-fail) in
        {1035}let ck_50: key = (if v_339 then 2-proj-3-tuple(v_338) else caught-fail) in
        {1036}let cs_44: cipherstate = (if v_339 then 1-proj-3-tuple(v_338) else caught-fail) in
        {1037}let ssi_14: symmetricstate = (if v_337 then catch-fail((if v_339 then symmetricstatepack(cs_44,ck_50,hash(h_44,ciphertext_16)) else fail-any)) else caught-fail) in
        {1038}let v_340: bool = not-caught-fail(ssi_14) in
        {1039}let v_341: bitstring = (if v_325 then catch-fail((if v_327 then (if v_337 then (if v_340 then (ssi_14,plaintext_21,valid_21) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1040}let v_342: bool = (not-caught-fail(v_341) && success?(1-proj-3-tuple(v_341))) in
        {1041}let valid2_6: bool = (if v_342 then 3-proj-3-tuple(v_341) else caught-fail) in
        {1042}let plaintext_22: bitstring = (if v_342 then 2-proj-3-tuple(v_341) else caught-fail) in
        {1043}let ss_51: symmetricstate = (if v_342 then 1-proj-3-tuple(v_341) else caught-fail) in
        {1044}let v_343: bool = (if v_342 then catch-fail((valid1_6 && valid2_6)) else caught-fail) in
        {1045}let hs_32: handshakestate = (if v_343 then handshakestatepack(ss_51,s_11,m_11,e_17,rs_13,rm_13,re_14,psk_11,initiator_9) else caught-fail) in
        {1046}let (hs_33: handshakestate,plaintext_a: bitstring,valid_22: bool) = (if v_320 then (if v_322 then (if v_325 then (if v_342 then (if undo-catch-fail(v_343) then (hs_32,plaintext_22,true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1047}event RecvMsg(me_2,them_2,stagepack_a(sid_3),plaintext_a);
        {1048}insert statestore(me_2,them_2,sid_3,statepack_b(hs_33))
    ) | (
        {1285}get statestore(=me_2,=them_2,=sid_3,statepack_b(hs_34: handshakestate)) in
        {1050}let payload_4: bitstring = msg_b(me_2,them_2,sid_3) in
        {1051}let v_344: bitstring = catch-fail(handshakestateunpack(hs_34)) in
        {1052}let v_345: bool = (not-caught-fail(v_344) && success?(1-proj-9-tuple(v_344))) in
        {1053}let initiator_10: bool = (if v_345 then 9-proj-9-tuple(v_344) else caught-fail) in
        {1054}let psk_12: key = (if v_345 then 8-proj-9-tuple(v_344) else caught-fail) in
        {1055}let re_15: key = (if v_345 then 7-proj-9-tuple(v_344) else caught-fail) in
        {1056}let rm_14: key = (if v_345 then 6-proj-9-tuple(v_344) else caught-fail) in
        {1057}let rs_14: key = (if v_345 then 5-proj-9-tuple(v_344) else caught-fail) in
        {1058}let e_18: keypair = (if v_345 then 4-proj-9-tuple(v_344) else caught-fail) in
        {1059}let m_12: keypair = (if v_345 then 3-proj-9-tuple(v_344) else caught-fail) in
        {1060}let s_12: keypair = (if v_345 then 2-proj-9-tuple(v_344) else caught-fail) in
        {1061}let ss_52: symmetricstate = (if v_345 then 1-proj-9-tuple(v_344) else caught-fail) in
        {1062}let v_346: bitstring = (if v_345 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {1063}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-4-tuple(v_346))) in
        {1064}let ciphertext_17: bitstring = (if v_347 then 4-proj-4-tuple(v_346) else caught-fail) in
        {1065}let nm_4: bitstring = (if v_347 then 3-proj-4-tuple(v_346) else caught-fail) in
        {1066}let ns_9: bitstring = (if v_347 then 2-proj-4-tuple(v_346) else caught-fail) in
        {1067}let ne_15: bitstring = (if v_347 then 1-proj-4-tuple(v_346) else caught-fail) in
        {1068}let basis_6: key = (if v_347 then key_e(me_2,them_2,sid_3) else caught-fail) in
        {1069}let public_key_6: key = (if v_347 then catch-fail(dhexp(basis_6,validkey(g))) else caught-fail) in
        {1070}let v_348: bool = not-caught-fail(public_key_6) in
        {1071}let e_19: keypair = (if v_347 then catch-fail((if v_348 then keypairpack(validkey(public_key_6),basis_6) else fail-any)) else caught-fail) in
        {1072}let v_349: bool = not-caught-fail(e_19) in
        {1073}let ne_16: bitstring = (if v_349 then catch-fail(getpublickey(e_19)) else caught-fail) in
        {1074}let v_350: bool = not-caught-fail(ne_16) in
        {1075}let v_351: bitstring = (if v_350 then catch-fail(symmetricstateunpack(ss_52)) else caught-fail) in
        {1076}let v_352: bool = (not-caught-fail(v_351) && success?(1-proj-3-tuple(v_351))) in
        {1077}let h_45: bitstring = (if v_352 then 3-proj-3-tuple(v_351) else caught-fail) in
        {1078}let ck_51: key = (if v_352 then 2-proj-3-tuple(v_351) else caught-fail) in
        {1079}let cs_45: cipherstate = (if v_352 then 1-proj-3-tuple(v_351) else caught-fail) in
        {1080}let ss_53: symmetricstate = (if v_350 then catch-fail((if v_352 then symmetricstatepack(cs_45,ck_51,hash(h_45,ne_16)) else fail-any)) else caught-fail) in
        {1081}let v_353: bool = not-caught-fail(ss_53) in
        {1082}let v_354: bitstring = (if v_353 then catch-fail(keypairunpack(e_19)) else caught-fail) in
        {1083}let v_355: bool = (not-caught-fail(v_354) && success?(1-proj-2-tuple(v_354))) in
        {1084}let my_private_key_6: key = (if v_355 then 2-proj-2-tuple(v_354) else caught-fail) in
        {1085}let my_public_key_6: key = (if v_355 then 1-proj-2-tuple(v_354) else caught-fail) in
        {1086}let input_key_material_8: key = (if v_353 then catch-fail((if v_355 then dhexp(my_private_key_6,re_15) else fail-any)) else caught-fail) in
        {1087}let v_356: bool = not-caught-fail(input_key_material_8) in
        {1088}let v_357: bitstring = (if v_356 then catch-fail(symmetricstateunpack(ss_53)) else caught-fail) in
        {1089}let v_358: bool = (not-caught-fail(v_357) && success?(1-proj-3-tuple(v_357))) in
        {1090}let h_46: bitstring = (if v_358 then 3-proj-3-tuple(v_357) else caught-fail) in
        {1091}let ck_52: key = (if v_358 then 2-proj-3-tuple(v_357) else caught-fail) in
        {1092}let cs_46: cipherstate = (if v_358 then 1-proj-3-tuple(v_357) else caught-fail) in
        {1093}let output1_8: key = (if v_358 then hmac_hash1(ck_52,input_key_material_8) else caught-fail) in
        {1094}let output2_8: key = (if v_358 then hmac_hash2(ck_52,input_key_material_8) else caught-fail) in
        {1095}let output3_8: key = (if v_358 then hmac_hash3(ck_52,input_key_material_8) else caught-fail) in
        {1096}let v_359: bitstring = (if v_358 then catch-fail((output1_8,output2_8,output3_8)) else caught-fail) in
        {1097}let v_360: bool = (not-caught-fail(v_359) && success?(1-proj-3-tuple(v_359))) in
        {1098}let output_6: key = (if v_360 then 3-proj-3-tuple(v_359) else caught-fail) in
        {1099}let temp_k_6: key = (if v_360 then 2-proj-3-tuple(v_359) else caught-fail) in
        {1100}let ck_53: key = (if v_360 then 1-proj-3-tuple(v_359) else caught-fail) in
        {1101}let ss_54: symmetricstate = (if v_353 then catch-fail((if v_356 then (if v_358 then (if v_360 then symmetricstatepack(cipherstatepack(temp_k_6,minnonce),ck_53,h_46) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1102}let v_361: bool = not-caught-fail(ss_54) in
        {1103}let basis_7: key = (if v_361 then key_s(me_2) else caught-fail) in
        {1104}let public_key_7: key = (if v_361 then catch-fail(dhexp(basis_7,validkey(g))) else caught-fail) in
        {1105}let v_362: bool = not-caught-fail(public_key_7) in
        {1106}let s_13: keypair = (if v_361 then catch-fail((if v_362 then keypairpack(validkey(public_key_7),basis_7) else fail-any)) else caught-fail) in
        {1107}let v_363: bool = not-caught-fail(s_13) in
        {1108}let plaintext_23: bitstring = (if v_363 then catch-fail(getpublickey(s_13)) else caught-fail) in
        {1109}let v_364: bool = not-caught-fail(plaintext_23) in
        {1110}let v_365: bitstring = (if v_364 then catch-fail(symmetricstateunpack(ss_54)) else caught-fail) in
        {1111}let v_366: bool = (not-caught-fail(v_365) && success?(1-proj-3-tuple(v_365))) in
        {1112}let h_47: bitstring = (if v_366 then 3-proj-3-tuple(v_365) else caught-fail) in
        {1113}let ck_54: key = (if v_366 then 2-proj-3-tuple(v_365) else caught-fail) in
        {1114}let cs_47: cipherstate = (if v_366 then 1-proj-3-tuple(v_365) else caught-fail) in
        {1115}let v_367: bitstring = (if v_366 then catch-fail(cipherstateunpack(cs_47)) else caught-fail) in
        {1116}let v_368: bool = (not-caught-fail(v_367) && success?(1-proj-2-tuple(v_367))) in
        {1117}let n_26: nonce = (if v_368 then 2-proj-2-tuple(v_367) else caught-fail) in
        {1118}let k_29: key = (if v_368 then 1-proj-2-tuple(v_367) else caught-fail) in
        {1119}let e_20: bitstring = (if v_368 then encrypt(k_29,n_26,h_47,plaintext_23) else caught-fail) in
        {1120}let n_27: nonce = (if v_368 then increment_nonce(n_26) else caught-fail) in
        {1121}let v_369: bitstring = (if v_368 then catch-fail(cipherstateunpack(cs_47)) else caught-fail) in
        {1122}let v_370: bool = (not-caught-fail(v_369) && success?(1-proj-2-tuple(v_369))) in
        {1123}let o_13: nonce = (if v_370 then 2-proj-2-tuple(v_369) else caught-fail) in
        {1124}let k_30: key = (if v_370 then 1-proj-2-tuple(v_369) else caught-fail) in
        {1125}let csi_26: cipherstate = (if v_368 then catch-fail((if v_370 then cipherstatepack(k_30,n_27) else fail-any)) else caught-fail) in
        {1126}let v_371: bool = not-caught-fail(csi_26) in
        {1127}let v_372: bitstring = (if v_366 then catch-fail((if v_368 then (if v_371 then (csi_26,e_20) else fail-any) else fail-any)) else caught-fail) in
        {1128}let v_373: bool = (not-caught-fail(v_372) && success?(1-proj-2-tuple(v_372))) in
        {1129}let ciphertext_18: bitstring = (if v_373 then 2-proj-2-tuple(v_372) else caught-fail) in
        {1130}let csi_27: cipherstate = (if v_373 then 1-proj-2-tuple(v_372) else caught-fail) in
        {1131}let ss_55: symmetricstate = (if v_373 then symmetricstatepack(csi_27,ck_54,h_47) else caught-fail) in
        {1132}let v_374: bitstring = (if v_373 then catch-fail(symmetricstateunpack(ss_55)) else caught-fail) in
        {1133}let v_375: bool = (not-caught-fail(v_374) && success?(1-proj-3-tuple(v_374))) in
        {1134}let h_48: bitstring = (if v_375 then 3-proj-3-tuple(v_374) else caught-fail) in
        {1135}let ck_55: key = (if v_375 then 2-proj-3-tuple(v_374) else caught-fail) in
        {1136}let cs_48: cipherstate = (if v_375 then 1-proj-3-tuple(v_374) else caught-fail) in
        {1137}let ssi_15: symmetricstate = (if v_373 then catch-fail((if v_375 then symmetricstatepack(cs_48,ck_55,hash(h_48,ciphertext_18)) else fail-any)) else caught-fail) in
        {1138}let v_376: bool = not-caught-fail(ssi_15) in
        {1139}let v_377: bitstring = (if v_363 then catch-fail((if v_364 then (if v_366 then (if v_373 then (if v_376 then (ssi_15,ciphertext_18) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1140}let v_378: bool = (not-caught-fail(v_377) && success?(1-proj-2-tuple(v_377))) in
        {1141}let ns_10: bitstring = (if v_378 then 2-proj-2-tuple(v_377) else caught-fail) in
        {1142}let ss_56: symmetricstate = (if v_378 then 1-proj-2-tuple(v_377) else caught-fail) in
        {1143}let basis_8: key = (if v_378 then key_m(me_2) else caught-fail) in
        {1144}let public_key_8: key = (if v_378 then catch-fail(dhexp(basis_8,validkey(g))) else caught-fail) in
        {1145}let v_379: bool = not-caught-fail(public_key_8) in
        {1146}let m_13: keypair = (if v_378 then catch-fail((if v_379 then keypairpack(validkey(public_key_8),basis_8) else fail-any)) else caught-fail) in
        {1147}let v_380: bool = not-caught-fail(m_13) in
        {1148}let plaintext_24: bitstring = (if v_380 then catch-fail(getpublickey(m_13)) else caught-fail) in
        {1149}let v_381: bool = not-caught-fail(plaintext_24) in
        {1150}let v_382: bitstring = (if v_381 then catch-fail(symmetricstateunpack(ss_56)) else caught-fail) in
        {1151}let v_383: bool = (not-caught-fail(v_382) && success?(1-proj-3-tuple(v_382))) in
        {1152}let h_49: bitstring = (if v_383 then 3-proj-3-tuple(v_382) else caught-fail) in
        {1153}let ck_56: key = (if v_383 then 2-proj-3-tuple(v_382) else caught-fail) in
        {1154}let cs_49: cipherstate = (if v_383 then 1-proj-3-tuple(v_382) else caught-fail) in
        {1155}let v_384: bitstring = (if v_383 then catch-fail(cipherstateunpack(cs_49)) else caught-fail) in
        {1156}let v_385: bool = (not-caught-fail(v_384) && success?(1-proj-2-tuple(v_384))) in
        {1157}let n_28: nonce = (if v_385 then 2-proj-2-tuple(v_384) else caught-fail) in
        {1158}let k_31: key = (if v_385 then 1-proj-2-tuple(v_384) else caught-fail) in
        {1159}let e_21: bitstring = (if v_385 then encrypt(k_31,n_28,h_49,plaintext_24) else caught-fail) in
        {1160}let n_29: nonce = (if v_385 then increment_nonce(n_28) else caught-fail) in
        {1161}let v_386: bitstring = (if v_385 then catch-fail(cipherstateunpack(cs_49)) else caught-fail) in
        {1162}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
        {1163}let o_14: nonce = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
        {1164}let k_32: key = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
        {1165}let csi_28: cipherstate = (if v_385 then catch-fail((if v_387 then cipherstatepack(k_32,n_29) else fail-any)) else caught-fail) in
        {1166}let v_388: bool = not-caught-fail(csi_28) in
        {1167}let v_389: bitstring = (if v_383 then catch-fail((if v_385 then (if v_388 then (csi_28,e_21) else fail-any) else fail-any)) else caught-fail) in
        {1168}let v_390: bool = (not-caught-fail(v_389) && success?(1-proj-2-tuple(v_389))) in
        {1169}let ciphertext_19: bitstring = (if v_390 then 2-proj-2-tuple(v_389) else caught-fail) in
        {1170}let csi_29: cipherstate = (if v_390 then 1-proj-2-tuple(v_389) else caught-fail) in
        {1171}let ss_57: symmetricstate = (if v_390 then symmetricstatepack(csi_29,ck_56,h_49) else caught-fail) in
        {1172}let v_391: bitstring = (if v_390 then catch-fail(symmetricstateunpack(ss_57)) else caught-fail) in
        {1173}let v_392: bool = (not-caught-fail(v_391) && success?(1-proj-3-tuple(v_391))) in
        {1174}let h_50: bitstring = (if v_392 then 3-proj-3-tuple(v_391) else caught-fail) in
        {1175}let ck_57: key = (if v_392 then 2-proj-3-tuple(v_391) else caught-fail) in
        {1176}let cs_50: cipherstate = (if v_392 then 1-proj-3-tuple(v_391) else caught-fail) in
        {1177}let ssi_16: symmetricstate = (if v_390 then catch-fail((if v_392 then symmetricstatepack(cs_50,ck_57,hash(h_50,ciphertext_19)) else fail-any)) else caught-fail) in
        {1178}let v_393: bool = not-caught-fail(ssi_16) in
        {1179}let v_394: bitstring = (if v_380 then catch-fail((if v_381 then (if v_383 then (if v_390 then (if v_393 then (ssi_16,ciphertext_19) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1180}let v_395: bool = (not-caught-fail(v_394) && success?(1-proj-2-tuple(v_394))) in
        {1181}let nm_5: bitstring = (if v_395 then 2-proj-2-tuple(v_394) else caught-fail) in
        {1182}let ss_58: symmetricstate = (if v_395 then 1-proj-2-tuple(v_394) else caught-fail) in
        {1183}let v_396: bitstring = (if v_395 then catch-fail(keypairunpack(s_13)) else caught-fail) in
        {1184}let v_397: bool = (not-caught-fail(v_396) && success?(1-proj-2-tuple(v_396))) in
        {1185}let my_private_key_7: key = (if v_397 then 2-proj-2-tuple(v_396) else caught-fail) in
        {1186}let my_public_key_7: key = (if v_397 then 1-proj-2-tuple(v_396) else caught-fail) in
        {1187}let input_key_material_9: key = (if v_395 then catch-fail((if v_397 then dhexp(my_private_key_7,re_15) else fail-any)) else caught-fail) in
        {1188}let v_398: bool = not-caught-fail(input_key_material_9) in
        {1189}let v_399: bitstring = (if v_398 then catch-fail(symmetricstateunpack(ss_58)) else caught-fail) in
        {1190}let v_400: bool = (not-caught-fail(v_399) && success?(1-proj-3-tuple(v_399))) in
        {1191}let h_51: bitstring = (if v_400 then 3-proj-3-tuple(v_399) else caught-fail) in
        {1192}let ck_58: key = (if v_400 then 2-proj-3-tuple(v_399) else caught-fail) in
        {1193}let cs_51: cipherstate = (if v_400 then 1-proj-3-tuple(v_399) else caught-fail) in
        {1194}let output1_9: key = (if v_400 then hmac_hash1(ck_58,input_key_material_9) else caught-fail) in
        {1195}let output2_9: key = (if v_400 then hmac_hash2(ck_58,input_key_material_9) else caught-fail) in
        {1196}let output3_9: key = (if v_400 then hmac_hash3(ck_58,input_key_material_9) else caught-fail) in
        {1197}let v_401: bitstring = (if v_400 then catch-fail((output1_9,output2_9,output3_9)) else caught-fail) in
        {1198}let v_402: bool = (not-caught-fail(v_401) && success?(1-proj-3-tuple(v_401))) in
        {1199}let output_7: key = (if v_402 then 3-proj-3-tuple(v_401) else caught-fail) in
        {1200}let temp_k_7: key = (if v_402 then 2-proj-3-tuple(v_401) else caught-fail) in
        {1201}let ck_59: key = (if v_402 then 1-proj-3-tuple(v_401) else caught-fail) in
        {1202}let ss_59: symmetricstate = (if v_395 then catch-fail((if v_398 then (if v_400 then (if v_402 then symmetricstatepack(cipherstatepack(temp_k_7,minnonce),ck_59,h_51) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1203}let v_403: bool = not-caught-fail(ss_59) in
        {1204}let v_404: bitstring = (if v_403 then catch-fail(keypairunpack(m_13)) else caught-fail) in
        {1205}let v_405: bool = (not-caught-fail(v_404) && success?(1-proj-2-tuple(v_404))) in
        {1206}let my_private_key_8: key = (if v_405 then 2-proj-2-tuple(v_404) else caught-fail) in
        {1207}let my_public_key_8: key = (if v_405 then 1-proj-2-tuple(v_404) else caught-fail) in
        {1208}let input_key_material_10: key = (if v_403 then catch-fail((if v_405 then dhexp(my_private_key_8,re_15) else fail-any)) else caught-fail) in
        {1209}let v_406: bool = not-caught-fail(input_key_material_10) in
        {1210}let v_407: bitstring = (if v_406 then catch-fail(symmetricstateunpack(ss_59)) else caught-fail) in
        {1211}let v_408: bool = (not-caught-fail(v_407) && success?(1-proj-3-tuple(v_407))) in
        {1212}let h_52: bitstring = (if v_408 then 3-proj-3-tuple(v_407) else caught-fail) in
        {1213}let ck_60: key = (if v_408 then 2-proj-3-tuple(v_407) else caught-fail) in
        {1214}let cs_52: cipherstate = (if v_408 then 1-proj-3-tuple(v_407) else caught-fail) in
        {1215}let output1_10: key = (if v_408 then hmac_hash1(ck_60,input_key_material_10) else caught-fail) in
        {1216}let output2_10: key = (if v_408 then hmac_hash2(ck_60,input_key_material_10) else caught-fail) in
        {1217}let output3_10: key = (if v_408 then hmac_hash3(ck_60,input_key_material_10) else caught-fail) in
        {1218}let v_409: bitstring = (if v_408 then catch-fail((output1_10,output2_10,output3_10)) else caught-fail) in
        {1219}let v_410: bool = (not-caught-fail(v_409) && success?(1-proj-3-tuple(v_409))) in
        {1220}let output_8: key = (if v_410 then 3-proj-3-tuple(v_409) else caught-fail) in
        {1221}let temp_k_8: key = (if v_410 then 2-proj-3-tuple(v_409) else caught-fail) in
        {1222}let ck_61: key = (if v_410 then 1-proj-3-tuple(v_409) else caught-fail) in
        {1223}let ss_60: symmetricstate = (if v_403 then catch-fail((if v_406 then (if v_408 then (if v_410 then symmetricstatepack(cipherstatepack(temp_k_8,minnonce),ck_61,h_52) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1224}let v_411: bool = not-caught-fail(ss_60) in
        {1225}let v_412: bitstring = (if v_411 then catch-fail(symmetricstateunpack(ss_60)) else caught-fail) in
        {1226}let v_413: bool = (not-caught-fail(v_412) && success?(1-proj-3-tuple(v_412))) in
        {1227}let h_53: bitstring = (if v_413 then 3-proj-3-tuple(v_412) else caught-fail) in
        {1228}let ck_62: key = (if v_413 then 2-proj-3-tuple(v_412) else caught-fail) in
        {1229}let cs_53: cipherstate = (if v_413 then 1-proj-3-tuple(v_412) else caught-fail) in
        {1230}let v_414: bitstring = (if v_413 then catch-fail(cipherstateunpack(cs_53)) else caught-fail) in
        {1231}let v_415: bool = (not-caught-fail(v_414) && success?(1-proj-2-tuple(v_414))) in
        {1232}let n_30: nonce = (if v_415 then 2-proj-2-tuple(v_414) else caught-fail) in
        {1233}let k_33: key = (if v_415 then 1-proj-2-tuple(v_414) else caught-fail) in
        {1234}let e_22: bitstring = (if v_415 then encrypt(k_33,n_30,h_53,payload_4) else caught-fail) in
        {1235}let n_31: nonce = (if v_415 then increment_nonce(n_30) else caught-fail) in
        {1236}let v_416: bitstring = (if v_415 then catch-fail(cipherstateunpack(cs_53)) else caught-fail) in
        {1237}let v_417: bool = (not-caught-fail(v_416) && success?(1-proj-2-tuple(v_416))) in
        {1238}let o_15: nonce = (if v_417 then 2-proj-2-tuple(v_416) else caught-fail) in
        {1239}let k_34: key = (if v_417 then 1-proj-2-tuple(v_416) else caught-fail) in
        {1240}let csi_30: cipherstate = (if v_415 then catch-fail((if v_417 then cipherstatepack(k_34,n_31) else fail-any)) else caught-fail) in
        {1241}let v_418: bool = not-caught-fail(csi_30) in
        {1242}let v_419: bitstring = (if v_413 then catch-fail((if v_415 then (if v_418 then (csi_30,e_22) else fail-any) else fail-any)) else caught-fail) in
        {1243}let v_420: bool = (not-caught-fail(v_419) && success?(1-proj-2-tuple(v_419))) in
        {1244}let ciphertext_20: bitstring = (if v_420 then 2-proj-2-tuple(v_419) else caught-fail) in
        {1245}let csi_31: cipherstate = (if v_420 then 1-proj-2-tuple(v_419) else caught-fail) in
        {1246}let ss_61: symmetricstate = (if v_420 then symmetricstatepack(csi_31,ck_62,h_53) else caught-fail) in
        {1247}let v_421: bitstring = (if v_420 then catch-fail(symmetricstateunpack(ss_61)) else caught-fail) in
        {1248}let v_422: bool = (not-caught-fail(v_421) && success?(1-proj-3-tuple(v_421))) in
        {1249}let h_54: bitstring = (if v_422 then 3-proj-3-tuple(v_421) else caught-fail) in
        {1250}let ck_63: key = (if v_422 then 2-proj-3-tuple(v_421) else caught-fail) in
        {1251}let cs_54: cipherstate = (if v_422 then 1-proj-3-tuple(v_421) else caught-fail) in
        {1252}let ssi_17: symmetricstate = (if v_420 then catch-fail((if v_422 then symmetricstatepack(cs_54,ck_63,hash(h_54,ciphertext_20)) else fail-any)) else caught-fail) in
        {1253}let v_423: bool = not-caught-fail(ssi_17) in
        {1254}let v_424: bitstring = (if v_411 then catch-fail((if v_413 then (if v_420 then (if v_423 then (ssi_17,ciphertext_20) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1255}let v_425: bool = (not-caught-fail(v_424) && success?(1-proj-2-tuple(v_424))) in
        {1256}let ciphertext_21: bitstring = (if v_425 then 2-proj-2-tuple(v_424) else caught-fail) in
        {1257}let ss_62: symmetricstate = (if v_425 then 1-proj-2-tuple(v_424) else caught-fail) in
        {1258}let hs_35: handshakestate = (if v_425 then handshakestatepack(ss_62,s_13,m_13,e_19,rs_14,rm_14,re_15,psk_12,initiator_10) else caught-fail) in
        {1259}let message_buffer_4: bitstring = (if v_425 then concat4(ne_16,ns_10,nm_5,ciphertext_21) else caught-fail) in
        {1260}let v_426: bitstring = (if v_425 then catch-fail(symmetricstateunpack(ss_62)) else caught-fail) in
        {1261}let v_427: bool = (not-caught-fail(v_426) && success?(1-proj-3-tuple(v_426))) in
        {1262}let h_55: bitstring = (if v_427 then 3-proj-3-tuple(v_426) else caught-fail) in
        {1263}let ck_64: key = (if v_427 then 2-proj-3-tuple(v_426) else caught-fail) in
        {1264}let cs_55: cipherstate = (if v_427 then 1-proj-3-tuple(v_426) else caught-fail) in
        {1265}let input_key_material_11: key = (if v_427 then zero else caught-fail) in
        {1266}let output1_11: key = (if v_427 then hmac_hash1(ck_64,input_key_material_11) else caught-fail) in
        {1267}let output2_11: key = (if v_427 then hmac_hash2(ck_64,input_key_material_11) else caught-fail) in
        {1268}let output3_11: key = (if v_427 then hmac_hash3(ck_64,input_key_material_11) else caught-fail) in
        {1269}let v_428: bitstring = (if v_427 then catch-fail((output1_11,output2_11,output3_11)) else caught-fail) in
        {1270}let v_429: bool = (not-caught-fail(v_428) && success?(1-proj-3-tuple(v_428))) in
        {1271}let temp_k3_2: key = (if v_429 then 3-proj-3-tuple(v_428) else caught-fail) in
        {1272}let temp_k2_2: key = (if v_429 then 2-proj-3-tuple(v_428) else caught-fail) in
        {1273}let temp_k1_2: key = (if v_429 then 1-proj-3-tuple(v_428) else caught-fail) in
        {1274}let cs1_10: cipherstate = (if v_429 then cipherstatepack(temp_k1_2,minnonce) else caught-fail) in
        {1275}let cs2_10: cipherstate = (if v_429 then cipherstatepack(temp_k2_2,minnonce) else caught-fail) in
        {1276}let v_430: bitstring = (if v_425 then catch-fail((if v_427 then (if v_429 then (ss_62,cs1_10,cs2_10) else fail-any) else fail-any)) else caught-fail) in
        {1277}let v_431: bool = (not-caught-fail(v_430) && success?(1-proj-3-tuple(v_430))) in
        {1278}let cs2_11: cipherstate = (if v_431 then 3-proj-3-tuple(v_430) else caught-fail) in
        {1279}let cs1_11: cipherstate = (if v_431 then 2-proj-3-tuple(v_430) else caught-fail) in
        {1280}let ssi_18: symmetricstate = (if v_431 then 1-proj-3-tuple(v_430) else caught-fail) in
        {1281}let (hs_36: handshakestate,message_b_2: bitstring,cs1_12: cipherstate,cs2_12: cipherstate) = (if v_345 then (if v_347 then (if v_349 then (if v_350 then (if v_353 then (if v_361 then (if v_363 then (if v_378 then (if v_380 then (if v_395 then (if v_403 then (if v_411 then (if v_425 then (if v_431 then (hs_35,message_buffer_4,cs1_11,cs2_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1282}event SendMsg(me_2,them_2,stagepack_b(sid_3),msg_b(me_2,them_2,sid_3));
        {1283}insert statestore(me_2,them_2,sid_3,statepack_c(hs_36,cs1_12,cs2_12));
        {1284}out(pub, message_b_2)
    ) | (
        {1286}!
        {1352}get statestore(=me_2,=them_2,=sid_3,statepack_c(hs_37: handshakestate,cs1_13: cipherstate,cs2_13: cipherstate)) in
        {1287}let hs_38: handshakestate = handshakestatesetcs(hs_37,cs1_13) in
        {1288}in(pub, message_c_2: bitstring);
        {1289}let v_432: bitstring = catch-fail(handshakestateunpack(hs_38)) in
        {1290}let v_433: bool = (not-caught-fail(v_432) && success?(1-proj-9-tuple(v_432))) in
        {1291}let initiator_11: bool = (if v_433 then 9-proj-9-tuple(v_432) else caught-fail) in
        {1292}let psk_13: key = (if v_433 then 8-proj-9-tuple(v_432) else caught-fail) in
        {1293}let re_16: key = (if v_433 then 7-proj-9-tuple(v_432) else caught-fail) in
        {1294}let rm_15: key = (if v_433 then 6-proj-9-tuple(v_432) else caught-fail) in
        {1295}let rs_15: key = (if v_433 then 5-proj-9-tuple(v_432) else caught-fail) in
        {1296}let e_23: keypair = (if v_433 then 4-proj-9-tuple(v_432) else caught-fail) in
        {1297}let m_14: keypair = (if v_433 then 3-proj-9-tuple(v_432) else caught-fail) in
        {1298}let s_14: keypair = (if v_433 then 2-proj-9-tuple(v_432) else caught-fail) in
        {1299}let ss_63: symmetricstate = (if v_433 then 1-proj-9-tuple(v_432) else caught-fail) in
        {1300}let v_434: bitstring = (if v_433 then catch-fail(deconcat3(message_c_2)) else caught-fail) in
        {1301}let v_435: bool = (not-caught-fail(v_434) && success?(1-proj-3-tuple(v_434))) in
        {1302}let ciphertext_22: bitstring = (if v_435 then 3-proj-3-tuple(v_434) else caught-fail) in
        {1303}let ns_11: bitstring = (if v_435 then 2-proj-3-tuple(v_434) else caught-fail) in
        {1304}let ne_17: bitstring = (if v_435 then 1-proj-3-tuple(v_434) else caught-fail) in
        {1305}let valid1_7: bool = (if v_435 then true else caught-fail) in
        {1306}let v_436: bitstring = (if v_435 then catch-fail(symmetricstateunpack(ss_63)) else caught-fail) in
        {1307}let v_437: bool = (not-caught-fail(v_436) && success?(1-proj-3-tuple(v_436))) in
        {1308}let h_56: bitstring = (if v_437 then 3-proj-3-tuple(v_436) else caught-fail) in
        {1309}let ck_65: key = (if v_437 then 2-proj-3-tuple(v_436) else caught-fail) in
        {1310}let cs_56: cipherstate = (if v_437 then 1-proj-3-tuple(v_436) else caught-fail) in
        {1311}let v_438: bitstring = (if v_437 then catch-fail(cipherstateunpack(cs_56)) else caught-fail) in
        {1312}let v_439: bool = (not-caught-fail(v_438) && success?(1-proj-2-tuple(v_438))) in
        {1313}let n_32: nonce = (if v_439 then 2-proj-2-tuple(v_438) else caught-fail) in
        {1314}let k_35: key = (if v_439 then 1-proj-2-tuple(v_438) else caught-fail) in
        {1315}let d_9: aead = (if v_439 then catch-fail(decrypt(k_35,n_32,h_56,ciphertext_22)) else caught-fail) in
        {1316}let v_440: bool = not-caught-fail(d_9) in
        {1317}let v_441: bitstring = (if v_440 then catch-fail(aeadunpack(d_9)) else caught-fail) in
        {1318}let v_442: bool = (not-caught-fail(v_441) && success?(1-proj-3-tuple(v_441))) in
        {1319}let plaintext_25: bitstring = (if v_442 then 3-proj-3-tuple(v_441) else caught-fail) in
        {1320}let adi_9: bitstring = (if v_442 then 2-proj-3-tuple(v_441) else caught-fail) in
        {1321}let valid_23: bool = (if v_442 then 1-proj-3-tuple(v_441) else caught-fail) in
        {1322}let n_33: nonce = (if v_442 then increment_nonce(n_32) else caught-fail) in
        {1323}let v_443: bitstring = (if v_442 then catch-fail(cipherstateunpack(cs_56)) else caught-fail) in
        {1324}let v_444: bool = (not-caught-fail(v_443) && success?(1-proj-2-tuple(v_443))) in
        {1325}let o_16: nonce = (if v_444 then 2-proj-2-tuple(v_443) else caught-fail) in
        {1326}let k_36: key = (if v_444 then 1-proj-2-tuple(v_443) else caught-fail) in
        {1327}let csi_32: cipherstate = (if v_442 then catch-fail((if v_444 then cipherstatepack(k_36,n_33) else fail-any)) else caught-fail) in
        {1328}let v_445: bool = not-caught-fail(csi_32) in
        {1329}let v_446: bitstring = (if v_437 then catch-fail((if v_439 then (if v_440 then (if v_442 then (if v_445 then (csi_32,plaintext_25,valid_23) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1330}let v_447: bool = (not-caught-fail(v_446) && success?(1-proj-3-tuple(v_446))) in
        {1331}let valid_24: bool = (if v_447 then 3-proj-3-tuple(v_446) else caught-fail) in
        {1332}let plaintext_26: bitstring = (if v_447 then 2-proj-3-tuple(v_446) else caught-fail) in
        {1333}let csi_33: cipherstate = (if v_447 then 1-proj-3-tuple(v_446) else caught-fail) in
        {1334}let ss_64: symmetricstate = (if v_447 then symmetricstatepack(csi_33,ck_65,h_56) else caught-fail) in
        {1335}let v_448: bitstring = (if v_447 then catch-fail(symmetricstateunpack(ss_64)) else caught-fail) in
        {1336}let v_449: bool = (not-caught-fail(v_448) && success?(1-proj-3-tuple(v_448))) in
        {1337}let h_57: bitstring = (if v_449 then 3-proj-3-tuple(v_448) else caught-fail) in
        {1338}let ck_66: key = (if v_449 then 2-proj-3-tuple(v_448) else caught-fail) in
        {1339}let cs_57: cipherstate = (if v_449 then 1-proj-3-tuple(v_448) else caught-fail) in
        {1340}let ssi_19: symmetricstate = (if v_447 then catch-fail((if v_449 then symmetricstatepack(cs_57,ck_66,hash(h_57,ciphertext_22)) else fail-any)) else caught-fail) in
        {1341}let v_450: bool = not-caught-fail(ssi_19) in
        {1342}let v_451: bitstring = (if v_435 then catch-fail((if v_437 then (if v_447 then (if v_450 then (ssi_19,plaintext_26,valid_24) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1343}let v_452: bool = (not-caught-fail(v_451) && success?(1-proj-3-tuple(v_451))) in
        {1344}let valid2_7: bool = (if v_452 then 3-proj-3-tuple(v_451) else caught-fail) in
        {1345}let plaintext_27: bitstring = (if v_452 then 2-proj-3-tuple(v_451) else caught-fail) in
        {1346}let ss_65: symmetricstate = (if v_452 then 1-proj-3-tuple(v_451) else caught-fail) in
        {1347}let v_453: bool = (if v_452 then catch-fail((valid1_7 && valid2_7)) else caught-fail) in
        {1348}let hs_39: handshakestate = (if v_453 then handshakestatepack(ss_65,s_14,m_14,e_23,rs_15,rm_15,re_16,psk_13,initiator_11) else caught-fail) in
        {1349}let (hs_40: handshakestate,plaintext_c: bitstring,valid_25: bool) = (if v_433 then (if v_435 then (if v_452 then (if undo-catch-fail(v_453) then (hs_39,plaintext_27,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1350}event RecvMsg(me_2,them_2,stagepack_c(sid_3),plaintext_c);
        {1351}insert statestore(me_2,them_2,sid_3,statepack_d(hs_40,handshakestategetcs(hs_40),cs2_13))
    ) | (
        {1353}!
        {1410}get statestore(=me_2,=them_2,=sid_3,statepack_d(hs_41: handshakestate,cs1_14: cipherstate,cs2_14: cipherstate)) in
        {1354}let hs_42: handshakestate = handshakestatesetcs(hs_41,cs2_14) in
        {1355}let payload_5: bitstring = msg_d(me_2,them_2,sid_3) in
        {1356}let v_454: bitstring = catch-fail(handshakestateunpack(hs_42)) in
        {1357}let v_455: bool = (not-caught-fail(v_454) && success?(1-proj-9-tuple(v_454))) in
        {1358}let initiator_12: bool = (if v_455 then 9-proj-9-tuple(v_454) else caught-fail) in
        {1359}let psk_14: key = (if v_455 then 8-proj-9-tuple(v_454) else caught-fail) in
        {1360}let re_17: key = (if v_455 then 7-proj-9-tuple(v_454) else caught-fail) in
        {1361}let rm_16: key = (if v_455 then 6-proj-9-tuple(v_454) else caught-fail) in
        {1362}let rs_16: key = (if v_455 then 5-proj-9-tuple(v_454) else caught-fail) in
        {1363}let e_24: keypair = (if v_455 then 4-proj-9-tuple(v_454) else caught-fail) in
        {1364}let m_15: keypair = (if v_455 then 3-proj-9-tuple(v_454) else caught-fail) in
        {1365}let s_15: keypair = (if v_455 then 2-proj-9-tuple(v_454) else caught-fail) in
        {1366}let ss_66: symmetricstate = (if v_455 then 1-proj-9-tuple(v_454) else caught-fail) in
        {1367}let v_456: bitstring = (if v_455 then catch-fail((empty,empty,empty)) else caught-fail) in
        {1368}let v_457: bool = (not-caught-fail(v_456) && success?(1-proj-3-tuple(v_456))) in
        {1369}let ciphertext_23: bitstring = (if v_457 then 3-proj-3-tuple(v_456) else caught-fail) in
        {1370}let ns_12: bitstring = (if v_457 then 2-proj-3-tuple(v_456) else caught-fail) in
        {1371}let ne_18: bitstring = (if v_457 then 1-proj-3-tuple(v_456) else caught-fail) in
        {1372}let v_458: bitstring = (if v_457 then catch-fail(symmetricstateunpack(ss_66)) else caught-fail) in
        {1373}let v_459: bool = (not-caught-fail(v_458) && success?(1-proj-3-tuple(v_458))) in
        {1374}let h_58: bitstring = (if v_459 then 3-proj-3-tuple(v_458) else caught-fail) in
        {1375}let ck_67: key = (if v_459 then 2-proj-3-tuple(v_458) else caught-fail) in
        {1376}let cs_58: cipherstate = (if v_459 then 1-proj-3-tuple(v_458) else caught-fail) in
        {1377}let v_460: bitstring = (if v_459 then catch-fail(cipherstateunpack(cs_58)) else caught-fail) in
        {1378}let v_461: bool = (not-caught-fail(v_460) && success?(1-proj-2-tuple(v_460))) in
        {1379}let n_34: nonce = (if v_461 then 2-proj-2-tuple(v_460) else caught-fail) in
        {1380}let k_37: key = (if v_461 then 1-proj-2-tuple(v_460) else caught-fail) in
        {1381}let e_25: bitstring = (if v_461 then encrypt(k_37,n_34,h_58,payload_5) else caught-fail) in
        {1382}let n_35: nonce = (if v_461 then increment_nonce(n_34) else caught-fail) in
        {1383}let v_462: bitstring = (if v_461 then catch-fail(cipherstateunpack(cs_58)) else caught-fail) in
        {1384}let v_463: bool = (not-caught-fail(v_462) && success?(1-proj-2-tuple(v_462))) in
        {1385}let o_17: nonce = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
        {1386}let k_38: key = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
        {1387}let csi_34: cipherstate = (if v_461 then catch-fail((if v_463 then cipherstatepack(k_38,n_35) else fail-any)) else caught-fail) in
        {1388}let v_464: bool = not-caught-fail(csi_34) in
        {1389}let v_465: bitstring = (if v_459 then catch-fail((if v_461 then (if v_464 then (csi_34,e_25) else fail-any) else fail-any)) else caught-fail) in
        {1390}let v_466: bool = (not-caught-fail(v_465) && success?(1-proj-2-tuple(v_465))) in
        {1391}let ciphertext_24: bitstring = (if v_466 then 2-proj-2-tuple(v_465) else caught-fail) in
        {1392}let csi_35: cipherstate = (if v_466 then 1-proj-2-tuple(v_465) else caught-fail) in
        {1393}let ss_67: symmetricstate = (if v_466 then symmetricstatepack(csi_35,ck_67,h_58) else caught-fail) in
        {1394}let v_467: bitstring = (if v_466 then catch-fail(symmetricstateunpack(ss_67)) else caught-fail) in
        {1395}let v_468: bool = (not-caught-fail(v_467) && success?(1-proj-3-tuple(v_467))) in
        {1396}let h_59: bitstring = (if v_468 then 3-proj-3-tuple(v_467) else caught-fail) in
        {1397}let ck_68: key = (if v_468 then 2-proj-3-tuple(v_467) else caught-fail) in
        {1398}let cs_59: cipherstate = (if v_468 then 1-proj-3-tuple(v_467) else caught-fail) in
        {1399}let ssi_20: symmetricstate = (if v_466 then catch-fail((if v_468 then symmetricstatepack(cs_59,ck_68,hash(h_59,ciphertext_24)) else fail-any)) else caught-fail) in
        {1400}let v_469: bool = not-caught-fail(ssi_20) in
        {1401}let v_470: bitstring = (if v_457 then catch-fail((if v_459 then (if v_466 then (if v_469 then (ssi_20,ciphertext_24) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1402}let v_471: bool = (not-caught-fail(v_470) && success?(1-proj-2-tuple(v_470))) in
        {1403}let ciphertext_25: bitstring = (if v_471 then 2-proj-2-tuple(v_470) else caught-fail) in
        {1404}let ss_68: symmetricstate = (if v_471 then 1-proj-2-tuple(v_470) else caught-fail) in
        {1405}let hs_43: handshakestate = (if v_471 then handshakestatepack(ss_68,s_15,m_15,e_24,rs_16,rm_16,re_17,psk_14,initiator_12) else caught-fail) in
        {1406}let message_buffer_5: bitstring = (if v_471 then concat3(ne_18,ns_12,ciphertext_25) else caught-fail) in
        {1407}let (hs_44: handshakestate,message_d_2: bitstring) = (if v_455 then (if v_457 then (if v_471 then (hs_43,message_buffer_5) else fail-any) else fail-any) else fail-any) in
        {1408}event SendMsg(me_2,them_2,stagepack_d(sid_3),msg_d(me_2,them_2,sid_3));
        {1409}out(pub, message_d_2)
    ) | (
        {1411}event LeakS(phase0,me_2);
        {1412}event LeakM(phase0,me_2);
        {1413}out(pub, (key_s(me_2),key_m(me_2)))
    ) | (
        {1414}phase 1;
        {1415}event LeakS(phase1,me_2);
        {1416}event LeakM(phase1,me_2);
        {1417}out(pub, (key_s(me_2),key_m(me_2)))
    )
) | (
    {1418}let me_3: principal = bob in
    {1419}let them_3: principal = charlie in
    {1420}let sid_4: sessionid = sid in
    {1421}let s_16: keypair = keypairpack(empty,empty) in
    {1422}let m_16: keypair = keypairpack(empty,empty) in
    {1423}out(pub, (getpublickey(s_16),getpublickey(m_16)));
    (
        {1424}let e_26: keypair = keypairpack(empty,empty) in
        {1425}let rs_17: key = empty in
        {1426}let rm_17: key = empty in
        {1427}let re_18: key = empty in
        {1428}let prologue_3: bitstring = empty in
        {1429}let psk_15: key = empty in
        {1430}let protocol_name_3: bitstring = somename in
        {1431}let h_60: bitstring = hash(protocol_name_3,empty) in
        {1432}let ck_69: key = h_60 in
        {1433}let k_39: key = empty in
        {1434}let cs_60: cipherstate = cipherstatepack(k_39,minnonce) in
        {1435}let ss_69: symmetricstate = symmetricstatepack(cs_60,ck_69,h_60) in
        {1436}let v_472: bitstring = catch-fail(symmetricstateunpack(ss_69)) in
        {1437}let v_473: bool = (not-caught-fail(v_472) && success?(1-proj-3-tuple(v_472))) in
        {1438}let h_61: bitstring = (if v_473 then 3-proj-3-tuple(v_472) else caught-fail) in
        {1439}let ck_70: key = (if v_473 then 2-proj-3-tuple(v_472) else caught-fail) in
        {1440}let cs_61: cipherstate = (if v_473 then 1-proj-3-tuple(v_472) else caught-fail) in
        {1441}let ss_70: symmetricstate = catch-fail((if v_473 then symmetricstatepack(cs_61,ck_70,hash(h_61,prologue_3)) else fail-any)) in
        {1442}let v_474: bool = not-caught-fail(ss_70) in
        {1443}let hs_45: handshakestate = (if v_474 then handshakestatepack(ss_70,s_16,m_16,e_26,rs_17,rm_17,re_18,psk_15,false) else fail-any) in
        {1444}insert statestore(me_3,them_3,sid_4,statepack_a(hs_45))
    ) | (
        {1517}get statestore(=me_3,=them_3,=sid_4,statepack_a(hs_46: handshakestate)) in
        {1445}in(pub, message_a_3: bitstring);
        {1446}let v_475: bitstring = catch-fail(handshakestateunpack(hs_46)) in
        {1447}let v_476: bool = (not-caught-fail(v_475) && success?(1-proj-9-tuple(v_475))) in
        {1448}let initiator_13: bool = (if v_476 then 9-proj-9-tuple(v_475) else caught-fail) in
        {1449}let psk_16: key = (if v_476 then 8-proj-9-tuple(v_475) else caught-fail) in
        {1450}let re_19: key = (if v_476 then 7-proj-9-tuple(v_475) else caught-fail) in
        {1451}let rm_18: key = (if v_476 then 6-proj-9-tuple(v_475) else caught-fail) in
        {1452}let rs_18: key = (if v_476 then 5-proj-9-tuple(v_475) else caught-fail) in
        {1453}let e_27: keypair = (if v_476 then 4-proj-9-tuple(v_475) else caught-fail) in
        {1454}let m_17: keypair = (if v_476 then 3-proj-9-tuple(v_475) else caught-fail) in
        {1455}let s_17: keypair = (if v_476 then 2-proj-9-tuple(v_475) else caught-fail) in
        {1456}let ss_71: symmetricstate = (if v_476 then 1-proj-9-tuple(v_475) else caught-fail) in
        {1457}let v_477: bitstring = (if v_476 then catch-fail(deconcat3(message_a_3)) else caught-fail) in
        {1458}let v_478: bool = (not-caught-fail(v_477) && success?(1-proj-3-tuple(v_477))) in
        {1459}let ciphertext_26: bitstring = (if v_478 then 3-proj-3-tuple(v_477) else caught-fail) in
        {1460}let ns_13: bitstring = (if v_478 then 2-proj-3-tuple(v_477) else caught-fail) in
        {1461}let ne_19: bitstring = (if v_478 then 1-proj-3-tuple(v_477) else caught-fail) in
        {1462}let valid1_8: bool = (if v_478 then true else caught-fail) in
        {1463}let re_20: key = (if v_478 then ne_19 else caught-fail) in
        {1464}let v_479: bitstring = (if v_478 then catch-fail(symmetricstateunpack(ss_71)) else caught-fail) in
        {1465}let v_480: bool = (not-caught-fail(v_479) && success?(1-proj-3-tuple(v_479))) in
        {1466}let h_62: bitstring = (if v_480 then 3-proj-3-tuple(v_479) else caught-fail) in
        {1467}let ck_71: key = (if v_480 then 2-proj-3-tuple(v_479) else caught-fail) in
        {1468}let cs_62: cipherstate = (if v_480 then 1-proj-3-tuple(v_479) else caught-fail) in
        {1469}let ss_72: symmetricstate = (if v_478 then catch-fail((if v_480 then symmetricstatepack(cs_62,ck_71,hash(h_62,re_20)) else fail-any)) else caught-fail) in
        {1470}let v_481: bool = not-caught-fail(ss_72) in
        {1471}let v_482: bitstring = (if v_481 then catch-fail(symmetricstateunpack(ss_72)) else caught-fail) in
        {1472}let v_483: bool = (not-caught-fail(v_482) && success?(1-proj-3-tuple(v_482))) in
        {1473}let h_63: bitstring = (if v_483 then 3-proj-3-tuple(v_482) else caught-fail) in
        {1474}let ck_72: key = (if v_483 then 2-proj-3-tuple(v_482) else caught-fail) in
        {1475}let cs_63: cipherstate = (if v_483 then 1-proj-3-tuple(v_482) else caught-fail) in
        {1476}let v_484: bitstring = (if v_483 then catch-fail(cipherstateunpack(cs_63)) else caught-fail) in
        {1477}let v_485: bool = (not-caught-fail(v_484) && success?(1-proj-2-tuple(v_484))) in
        {1478}let n_36: nonce = (if v_485 then 2-proj-2-tuple(v_484) else caught-fail) in
        {1479}let k_40: key = (if v_485 then 1-proj-2-tuple(v_484) else caught-fail) in
        {1480}let d_10: aead = (if v_485 then catch-fail(decrypt(k_40,n_36,h_63,ciphertext_26)) else caught-fail) in
        {1481}let v_486: bool = not-caught-fail(d_10) in
        {1482}let v_487: bitstring = (if v_486 then catch-fail(aeadunpack(d_10)) else caught-fail) in
        {1483}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-3-tuple(v_487))) in
        {1484}let plaintext_28: bitstring = (if v_488 then 3-proj-3-tuple(v_487) else caught-fail) in
        {1485}let adi_10: bitstring = (if v_488 then 2-proj-3-tuple(v_487) else caught-fail) in
        {1486}let valid_26: bool = (if v_488 then 1-proj-3-tuple(v_487) else caught-fail) in
        {1487}let n_37: nonce = (if v_488 then increment_nonce(n_36) else caught-fail) in
        {1488}let v_489: bitstring = (if v_488 then catch-fail(cipherstateunpack(cs_63)) else caught-fail) in
        {1489}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-2-tuple(v_489))) in
        {1490}let o_18: nonce = (if v_490 then 2-proj-2-tuple(v_489) else caught-fail) in
        {1491}let k_41: key = (if v_490 then 1-proj-2-tuple(v_489) else caught-fail) in
        {1492}let csi_36: cipherstate = (if v_488 then catch-fail((if v_490 then cipherstatepack(k_41,n_37) else fail-any)) else caught-fail) in
        {1493}let v_491: bool = not-caught-fail(csi_36) in
        {1494}let v_492: bitstring = (if v_483 then catch-fail((if v_485 then (if v_486 then (if v_488 then (if v_491 then (csi_36,plaintext_28,valid_26) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1495}let v_493: bool = (not-caught-fail(v_492) && success?(1-proj-3-tuple(v_492))) in
        {1496}let valid_27: bool = (if v_493 then 3-proj-3-tuple(v_492) else caught-fail) in
        {1497}let plaintext_29: bitstring = (if v_493 then 2-proj-3-tuple(v_492) else caught-fail) in
        {1498}let csi_37: cipherstate = (if v_493 then 1-proj-3-tuple(v_492) else caught-fail) in
        {1499}let ss_73: symmetricstate = (if v_493 then symmetricstatepack(csi_37,ck_72,h_63) else caught-fail) in
        {1500}let v_494: bitstring = (if v_493 then catch-fail(symmetricstateunpack(ss_73)) else caught-fail) in
        {1501}let v_495: bool = (not-caught-fail(v_494) && success?(1-proj-3-tuple(v_494))) in
        {1502}let h_64: bitstring = (if v_495 then 3-proj-3-tuple(v_494) else caught-fail) in
        {1503}let ck_73: key = (if v_495 then 2-proj-3-tuple(v_494) else caught-fail) in
        {1504}let cs_64: cipherstate = (if v_495 then 1-proj-3-tuple(v_494) else caught-fail) in
        {1505}let ssi_21: symmetricstate = (if v_493 then catch-fail((if v_495 then symmetricstatepack(cs_64,ck_73,hash(h_64,ciphertext_26)) else fail-any)) else caught-fail) in
        {1506}let v_496: bool = not-caught-fail(ssi_21) in
        {1507}let v_497: bitstring = (if v_481 then catch-fail((if v_483 then (if v_493 then (if v_496 then (ssi_21,plaintext_29,valid_27) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1508}let v_498: bool = (not-caught-fail(v_497) && success?(1-proj-3-tuple(v_497))) in
        {1509}let valid2_8: bool = (if v_498 then 3-proj-3-tuple(v_497) else caught-fail) in
        {1510}let plaintext_30: bitstring = (if v_498 then 2-proj-3-tuple(v_497) else caught-fail) in
        {1511}let ss_74: symmetricstate = (if v_498 then 1-proj-3-tuple(v_497) else caught-fail) in
        {1512}let v_499: bool = (if v_498 then catch-fail((valid1_8 && valid2_8)) else caught-fail) in
        {1513}let hs_47: handshakestate = (if v_499 then handshakestatepack(ss_74,s_17,m_17,e_27,rs_18,rm_18,re_20,psk_16,initiator_13) else caught-fail) in
        {1514}let (hs_48: handshakestate,plaintext_a_1: bitstring,valid_28: bool) = (if v_476 then (if v_478 then (if v_481 then (if v_498 then (if undo-catch-fail(v_499) then (hs_47,plaintext_30,true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1515}event RecvMsg(me_3,them_3,stagepack_a(sid_4),plaintext_a_1);
        {1516}insert statestore(me_3,them_3,sid_4,statepack_b(hs_48))
    ) | (
        {1753}get statestore(=me_3,=them_3,=sid_4,statepack_b(hs_49: handshakestate)) in
        {1518}let payload_6: bitstring = msg_b(me_3,them_3,sid_4) in
        {1519}let v_500: bitstring = catch-fail(handshakestateunpack(hs_49)) in
        {1520}let v_501: bool = (not-caught-fail(v_500) && success?(1-proj-9-tuple(v_500))) in
        {1521}let initiator_14: bool = (if v_501 then 9-proj-9-tuple(v_500) else caught-fail) in
        {1522}let psk_17: key = (if v_501 then 8-proj-9-tuple(v_500) else caught-fail) in
        {1523}let re_21: key = (if v_501 then 7-proj-9-tuple(v_500) else caught-fail) in
        {1524}let rm_19: key = (if v_501 then 6-proj-9-tuple(v_500) else caught-fail) in
        {1525}let rs_19: key = (if v_501 then 5-proj-9-tuple(v_500) else caught-fail) in
        {1526}let e_28: keypair = (if v_501 then 4-proj-9-tuple(v_500) else caught-fail) in
        {1527}let m_18: keypair = (if v_501 then 3-proj-9-tuple(v_500) else caught-fail) in
        {1528}let s_18: keypair = (if v_501 then 2-proj-9-tuple(v_500) else caught-fail) in
        {1529}let ss_75: symmetricstate = (if v_501 then 1-proj-9-tuple(v_500) else caught-fail) in
        {1530}let v_502: bitstring = (if v_501 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {1531}let v_503: bool = (not-caught-fail(v_502) && success?(1-proj-4-tuple(v_502))) in
        {1532}let ciphertext_27: bitstring = (if v_503 then 4-proj-4-tuple(v_502) else caught-fail) in
        {1533}let nm_6: bitstring = (if v_503 then 3-proj-4-tuple(v_502) else caught-fail) in
        {1534}let ns_14: bitstring = (if v_503 then 2-proj-4-tuple(v_502) else caught-fail) in
        {1535}let ne_20: bitstring = (if v_503 then 1-proj-4-tuple(v_502) else caught-fail) in
        {1536}let basis_9: key = (if v_503 then key_e(me_3,them_3,sid_4) else caught-fail) in
        {1537}let public_key_9: key = (if v_503 then catch-fail(dhexp(basis_9,validkey(g))) else caught-fail) in
        {1538}let v_504: bool = not-caught-fail(public_key_9) in
        {1539}let e_29: keypair = (if v_503 then catch-fail((if v_504 then keypairpack(validkey(public_key_9),basis_9) else fail-any)) else caught-fail) in
        {1540}let v_505: bool = not-caught-fail(e_29) in
        {1541}let ne_21: bitstring = (if v_505 then catch-fail(getpublickey(e_29)) else caught-fail) in
        {1542}let v_506: bool = not-caught-fail(ne_21) in
        {1543}let v_507: bitstring = (if v_506 then catch-fail(symmetricstateunpack(ss_75)) else caught-fail) in
        {1544}let v_508: bool = (not-caught-fail(v_507) && success?(1-proj-3-tuple(v_507))) in
        {1545}let h_65: bitstring = (if v_508 then 3-proj-3-tuple(v_507) else caught-fail) in
        {1546}let ck_74: key = (if v_508 then 2-proj-3-tuple(v_507) else caught-fail) in
        {1547}let cs_65: cipherstate = (if v_508 then 1-proj-3-tuple(v_507) else caught-fail) in
        {1548}let ss_76: symmetricstate = (if v_506 then catch-fail((if v_508 then symmetricstatepack(cs_65,ck_74,hash(h_65,ne_21)) else fail-any)) else caught-fail) in
        {1549}let v_509: bool = not-caught-fail(ss_76) in
        {1550}let v_510: bitstring = (if v_509 then catch-fail(keypairunpack(e_29)) else caught-fail) in
        {1551}let v_511: bool = (not-caught-fail(v_510) && success?(1-proj-2-tuple(v_510))) in
        {1552}let my_private_key_9: key = (if v_511 then 2-proj-2-tuple(v_510) else caught-fail) in
        {1553}let my_public_key_9: key = (if v_511 then 1-proj-2-tuple(v_510) else caught-fail) in
        {1554}let input_key_material_12: key = (if v_509 then catch-fail((if v_511 then dhexp(my_private_key_9,re_21) else fail-any)) else caught-fail) in
        {1555}let v_512: bool = not-caught-fail(input_key_material_12) in
        {1556}let v_513: bitstring = (if v_512 then catch-fail(symmetricstateunpack(ss_76)) else caught-fail) in
        {1557}let v_514: bool = (not-caught-fail(v_513) && success?(1-proj-3-tuple(v_513))) in
        {1558}let h_66: bitstring = (if v_514 then 3-proj-3-tuple(v_513) else caught-fail) in
        {1559}let ck_75: key = (if v_514 then 2-proj-3-tuple(v_513) else caught-fail) in
        {1560}let cs_66: cipherstate = (if v_514 then 1-proj-3-tuple(v_513) else caught-fail) in
        {1561}let output1_12: key = (if v_514 then hmac_hash1(ck_75,input_key_material_12) else caught-fail) in
        {1562}let output2_12: key = (if v_514 then hmac_hash2(ck_75,input_key_material_12) else caught-fail) in
        {1563}let output3_12: key = (if v_514 then hmac_hash3(ck_75,input_key_material_12) else caught-fail) in
        {1564}let v_515: bitstring = (if v_514 then catch-fail((output1_12,output2_12,output3_12)) else caught-fail) in
        {1565}let v_516: bool = (not-caught-fail(v_515) && success?(1-proj-3-tuple(v_515))) in
        {1566}let output_9: key = (if v_516 then 3-proj-3-tuple(v_515) else caught-fail) in
        {1567}let temp_k_9: key = (if v_516 then 2-proj-3-tuple(v_515) else caught-fail) in
        {1568}let ck_76: key = (if v_516 then 1-proj-3-tuple(v_515) else caught-fail) in
        {1569}let ss_77: symmetricstate = (if v_509 then catch-fail((if v_512 then (if v_514 then (if v_516 then symmetricstatepack(cipherstatepack(temp_k_9,minnonce),ck_76,h_66) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1570}let v_517: bool = not-caught-fail(ss_77) in
        {1571}let basis_10: key = (if v_517 then key_s(me_3) else caught-fail) in
        {1572}let public_key_10: key = (if v_517 then catch-fail(dhexp(basis_10,validkey(g))) else caught-fail) in
        {1573}let v_518: bool = not-caught-fail(public_key_10) in
        {1574}let s_19: keypair = (if v_517 then catch-fail((if v_518 then keypairpack(validkey(public_key_10),basis_10) else fail-any)) else caught-fail) in
        {1575}let v_519: bool = not-caught-fail(s_19) in
        {1576}let plaintext_31: bitstring = (if v_519 then catch-fail(getpublickey(s_19)) else caught-fail) in
        {1577}let v_520: bool = not-caught-fail(plaintext_31) in
        {1578}let v_521: bitstring = (if v_520 then catch-fail(symmetricstateunpack(ss_77)) else caught-fail) in
        {1579}let v_522: bool = (not-caught-fail(v_521) && success?(1-proj-3-tuple(v_521))) in
        {1580}let h_67: bitstring = (if v_522 then 3-proj-3-tuple(v_521) else caught-fail) in
        {1581}let ck_77: key = (if v_522 then 2-proj-3-tuple(v_521) else caught-fail) in
        {1582}let cs_67: cipherstate = (if v_522 then 1-proj-3-tuple(v_521) else caught-fail) in
        {1583}let v_523: bitstring = (if v_522 then catch-fail(cipherstateunpack(cs_67)) else caught-fail) in
        {1584}let v_524: bool = (not-caught-fail(v_523) && success?(1-proj-2-tuple(v_523))) in
        {1585}let n_38: nonce = (if v_524 then 2-proj-2-tuple(v_523) else caught-fail) in
        {1586}let k_42: key = (if v_524 then 1-proj-2-tuple(v_523) else caught-fail) in
        {1587}let e_30: bitstring = (if v_524 then encrypt(k_42,n_38,h_67,plaintext_31) else caught-fail) in
        {1588}let n_39: nonce = (if v_524 then increment_nonce(n_38) else caught-fail) in
        {1589}let v_525: bitstring = (if v_524 then catch-fail(cipherstateunpack(cs_67)) else caught-fail) in
        {1590}let v_526: bool = (not-caught-fail(v_525) && success?(1-proj-2-tuple(v_525))) in
        {1591}let o_19: nonce = (if v_526 then 2-proj-2-tuple(v_525) else caught-fail) in
        {1592}let k_43: key = (if v_526 then 1-proj-2-tuple(v_525) else caught-fail) in
        {1593}let csi_38: cipherstate = (if v_524 then catch-fail((if v_526 then cipherstatepack(k_43,n_39) else fail-any)) else caught-fail) in
        {1594}let v_527: bool = not-caught-fail(csi_38) in
        {1595}let v_528: bitstring = (if v_522 then catch-fail((if v_524 then (if v_527 then (csi_38,e_30) else fail-any) else fail-any)) else caught-fail) in
        {1596}let v_529: bool = (not-caught-fail(v_528) && success?(1-proj-2-tuple(v_528))) in
        {1597}let ciphertext_28: bitstring = (if v_529 then 2-proj-2-tuple(v_528) else caught-fail) in
        {1598}let csi_39: cipherstate = (if v_529 then 1-proj-2-tuple(v_528) else caught-fail) in
        {1599}let ss_78: symmetricstate = (if v_529 then symmetricstatepack(csi_39,ck_77,h_67) else caught-fail) in
        {1600}let v_530: bitstring = (if v_529 then catch-fail(symmetricstateunpack(ss_78)) else caught-fail) in
        {1601}let v_531: bool = (not-caught-fail(v_530) && success?(1-proj-3-tuple(v_530))) in
        {1602}let h_68: bitstring = (if v_531 then 3-proj-3-tuple(v_530) else caught-fail) in
        {1603}let ck_78: key = (if v_531 then 2-proj-3-tuple(v_530) else caught-fail) in
        {1604}let cs_68: cipherstate = (if v_531 then 1-proj-3-tuple(v_530) else caught-fail) in
        {1605}let ssi_22: symmetricstate = (if v_529 then catch-fail((if v_531 then symmetricstatepack(cs_68,ck_78,hash(h_68,ciphertext_28)) else fail-any)) else caught-fail) in
        {1606}let v_532: bool = not-caught-fail(ssi_22) in
        {1607}let v_533: bitstring = (if v_519 then catch-fail((if v_520 then (if v_522 then (if v_529 then (if v_532 then (ssi_22,ciphertext_28) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1608}let v_534: bool = (not-caught-fail(v_533) && success?(1-proj-2-tuple(v_533))) in
        {1609}let ns_15: bitstring = (if v_534 then 2-proj-2-tuple(v_533) else caught-fail) in
        {1610}let ss_79: symmetricstate = (if v_534 then 1-proj-2-tuple(v_533) else caught-fail) in
        {1611}let basis_11: key = (if v_534 then key_m(me_3) else caught-fail) in
        {1612}let public_key_11: key = (if v_534 then catch-fail(dhexp(basis_11,validkey(g))) else caught-fail) in
        {1613}let v_535: bool = not-caught-fail(public_key_11) in
        {1614}let m_19: keypair = (if v_534 then catch-fail((if v_535 then keypairpack(validkey(public_key_11),basis_11) else fail-any)) else caught-fail) in
        {1615}let v_536: bool = not-caught-fail(m_19) in
        {1616}let plaintext_32: bitstring = (if v_536 then catch-fail(getpublickey(m_19)) else caught-fail) in
        {1617}let v_537: bool = not-caught-fail(plaintext_32) in
        {1618}let v_538: bitstring = (if v_537 then catch-fail(symmetricstateunpack(ss_79)) else caught-fail) in
        {1619}let v_539: bool = (not-caught-fail(v_538) && success?(1-proj-3-tuple(v_538))) in
        {1620}let h_69: bitstring = (if v_539 then 3-proj-3-tuple(v_538) else caught-fail) in
        {1621}let ck_79: key = (if v_539 then 2-proj-3-tuple(v_538) else caught-fail) in
        {1622}let cs_69: cipherstate = (if v_539 then 1-proj-3-tuple(v_538) else caught-fail) in
        {1623}let v_540: bitstring = (if v_539 then catch-fail(cipherstateunpack(cs_69)) else caught-fail) in
        {1624}let v_541: bool = (not-caught-fail(v_540) && success?(1-proj-2-tuple(v_540))) in
        {1625}let n_40: nonce = (if v_541 then 2-proj-2-tuple(v_540) else caught-fail) in
        {1626}let k_44: key = (if v_541 then 1-proj-2-tuple(v_540) else caught-fail) in
        {1627}let e_31: bitstring = (if v_541 then encrypt(k_44,n_40,h_69,plaintext_32) else caught-fail) in
        {1628}let n_41: nonce = (if v_541 then increment_nonce(n_40) else caught-fail) in
        {1629}let v_542: bitstring = (if v_541 then catch-fail(cipherstateunpack(cs_69)) else caught-fail) in
        {1630}let v_543: bool = (not-caught-fail(v_542) && success?(1-proj-2-tuple(v_542))) in
        {1631}let o_20: nonce = (if v_543 then 2-proj-2-tuple(v_542) else caught-fail) in
        {1632}let k_45: key = (if v_543 then 1-proj-2-tuple(v_542) else caught-fail) in
        {1633}let csi_40: cipherstate = (if v_541 then catch-fail((if v_543 then cipherstatepack(k_45,n_41) else fail-any)) else caught-fail) in
        {1634}let v_544: bool = not-caught-fail(csi_40) in
        {1635}let v_545: bitstring = (if v_539 then catch-fail((if v_541 then (if v_544 then (csi_40,e_31) else fail-any) else fail-any)) else caught-fail) in
        {1636}let v_546: bool = (not-caught-fail(v_545) && success?(1-proj-2-tuple(v_545))) in
        {1637}let ciphertext_29: bitstring = (if v_546 then 2-proj-2-tuple(v_545) else caught-fail) in
        {1638}let csi_41: cipherstate = (if v_546 then 1-proj-2-tuple(v_545) else caught-fail) in
        {1639}let ss_80: symmetricstate = (if v_546 then symmetricstatepack(csi_41,ck_79,h_69) else caught-fail) in
        {1640}let v_547: bitstring = (if v_546 then catch-fail(symmetricstateunpack(ss_80)) else caught-fail) in
        {1641}let v_548: bool = (not-caught-fail(v_547) && success?(1-proj-3-tuple(v_547))) in
        {1642}let h_70: bitstring = (if v_548 then 3-proj-3-tuple(v_547) else caught-fail) in
        {1643}let ck_80: key = (if v_548 then 2-proj-3-tuple(v_547) else caught-fail) in
        {1644}let cs_70: cipherstate = (if v_548 then 1-proj-3-tuple(v_547) else caught-fail) in
        {1645}let ssi_23: symmetricstate = (if v_546 then catch-fail((if v_548 then symmetricstatepack(cs_70,ck_80,hash(h_70,ciphertext_29)) else fail-any)) else caught-fail) in
        {1646}let v_549: bool = not-caught-fail(ssi_23) in
        {1647}let v_550: bitstring = (if v_536 then catch-fail((if v_537 then (if v_539 then (if v_546 then (if v_549 then (ssi_23,ciphertext_29) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1648}let v_551: bool = (not-caught-fail(v_550) && success?(1-proj-2-tuple(v_550))) in
        {1649}let nm_7: bitstring = (if v_551 then 2-proj-2-tuple(v_550) else caught-fail) in
        {1650}let ss_81: symmetricstate = (if v_551 then 1-proj-2-tuple(v_550) else caught-fail) in
        {1651}let v_552: bitstring = (if v_551 then catch-fail(keypairunpack(s_19)) else caught-fail) in
        {1652}let v_553: bool = (not-caught-fail(v_552) && success?(1-proj-2-tuple(v_552))) in
        {1653}let my_private_key_10: key = (if v_553 then 2-proj-2-tuple(v_552) else caught-fail) in
        {1654}let my_public_key_10: key = (if v_553 then 1-proj-2-tuple(v_552) else caught-fail) in
        {1655}let input_key_material_13: key = (if v_551 then catch-fail((if v_553 then dhexp(my_private_key_10,re_21) else fail-any)) else caught-fail) in
        {1656}let v_554: bool = not-caught-fail(input_key_material_13) in
        {1657}let v_555: bitstring = (if v_554 then catch-fail(symmetricstateunpack(ss_81)) else caught-fail) in
        {1658}let v_556: bool = (not-caught-fail(v_555) && success?(1-proj-3-tuple(v_555))) in
        {1659}let h_71: bitstring = (if v_556 then 3-proj-3-tuple(v_555) else caught-fail) in
        {1660}let ck_81: key = (if v_556 then 2-proj-3-tuple(v_555) else caught-fail) in
        {1661}let cs_71: cipherstate = (if v_556 then 1-proj-3-tuple(v_555) else caught-fail) in
        {1662}let output1_13: key = (if v_556 then hmac_hash1(ck_81,input_key_material_13) else caught-fail) in
        {1663}let output2_13: key = (if v_556 then hmac_hash2(ck_81,input_key_material_13) else caught-fail) in
        {1664}let output3_13: key = (if v_556 then hmac_hash3(ck_81,input_key_material_13) else caught-fail) in
        {1665}let v_557: bitstring = (if v_556 then catch-fail((output1_13,output2_13,output3_13)) else caught-fail) in
        {1666}let v_558: bool = (not-caught-fail(v_557) && success?(1-proj-3-tuple(v_557))) in
        {1667}let output_10: key = (if v_558 then 3-proj-3-tuple(v_557) else caught-fail) in
        {1668}let temp_k_10: key = (if v_558 then 2-proj-3-tuple(v_557) else caught-fail) in
        {1669}let ck_82: key = (if v_558 then 1-proj-3-tuple(v_557) else caught-fail) in
        {1670}let ss_82: symmetricstate = (if v_551 then catch-fail((if v_554 then (if v_556 then (if v_558 then symmetricstatepack(cipherstatepack(temp_k_10,minnonce),ck_82,h_71) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1671}let v_559: bool = not-caught-fail(ss_82) in
        {1672}let v_560: bitstring = (if v_559 then catch-fail(keypairunpack(m_19)) else caught-fail) in
        {1673}let v_561: bool = (not-caught-fail(v_560) && success?(1-proj-2-tuple(v_560))) in
        {1674}let my_private_key_11: key = (if v_561 then 2-proj-2-tuple(v_560) else caught-fail) in
        {1675}let my_public_key_11: key = (if v_561 then 1-proj-2-tuple(v_560) else caught-fail) in
        {1676}let input_key_material_14: key = (if v_559 then catch-fail((if v_561 then dhexp(my_private_key_11,re_21) else fail-any)) else caught-fail) in
        {1677}let v_562: bool = not-caught-fail(input_key_material_14) in
        {1678}let v_563: bitstring = (if v_562 then catch-fail(symmetricstateunpack(ss_82)) else caught-fail) in
        {1679}let v_564: bool = (not-caught-fail(v_563) && success?(1-proj-3-tuple(v_563))) in
        {1680}let h_72: bitstring = (if v_564 then 3-proj-3-tuple(v_563) else caught-fail) in
        {1681}let ck_83: key = (if v_564 then 2-proj-3-tuple(v_563) else caught-fail) in
        {1682}let cs_72: cipherstate = (if v_564 then 1-proj-3-tuple(v_563) else caught-fail) in
        {1683}let output1_14: key = (if v_564 then hmac_hash1(ck_83,input_key_material_14) else caught-fail) in
        {1684}let output2_14: key = (if v_564 then hmac_hash2(ck_83,input_key_material_14) else caught-fail) in
        {1685}let output3_14: key = (if v_564 then hmac_hash3(ck_83,input_key_material_14) else caught-fail) in
        {1686}let v_565: bitstring = (if v_564 then catch-fail((output1_14,output2_14,output3_14)) else caught-fail) in
        {1687}let v_566: bool = (not-caught-fail(v_565) && success?(1-proj-3-tuple(v_565))) in
        {1688}let output_11: key = (if v_566 then 3-proj-3-tuple(v_565) else caught-fail) in
        {1689}let temp_k_11: key = (if v_566 then 2-proj-3-tuple(v_565) else caught-fail) in
        {1690}let ck_84: key = (if v_566 then 1-proj-3-tuple(v_565) else caught-fail) in
        {1691}let ss_83: symmetricstate = (if v_559 then catch-fail((if v_562 then (if v_564 then (if v_566 then symmetricstatepack(cipherstatepack(temp_k_11,minnonce),ck_84,h_72) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1692}let v_567: bool = not-caught-fail(ss_83) in
        {1693}let v_568: bitstring = (if v_567 then catch-fail(symmetricstateunpack(ss_83)) else caught-fail) in
        {1694}let v_569: bool = (not-caught-fail(v_568) && success?(1-proj-3-tuple(v_568))) in
        {1695}let h_73: bitstring = (if v_569 then 3-proj-3-tuple(v_568) else caught-fail) in
        {1696}let ck_85: key = (if v_569 then 2-proj-3-tuple(v_568) else caught-fail) in
        {1697}let cs_73: cipherstate = (if v_569 then 1-proj-3-tuple(v_568) else caught-fail) in
        {1698}let v_570: bitstring = (if v_569 then catch-fail(cipherstateunpack(cs_73)) else caught-fail) in
        {1699}let v_571: bool = (not-caught-fail(v_570) && success?(1-proj-2-tuple(v_570))) in
        {1700}let n_42: nonce = (if v_571 then 2-proj-2-tuple(v_570) else caught-fail) in
        {1701}let k_46: key = (if v_571 then 1-proj-2-tuple(v_570) else caught-fail) in
        {1702}let e_32: bitstring = (if v_571 then encrypt(k_46,n_42,h_73,payload_6) else caught-fail) in
        {1703}let n_43: nonce = (if v_571 then increment_nonce(n_42) else caught-fail) in
        {1704}let v_572: bitstring = (if v_571 then catch-fail(cipherstateunpack(cs_73)) else caught-fail) in
        {1705}let v_573: bool = (not-caught-fail(v_572) && success?(1-proj-2-tuple(v_572))) in
        {1706}let o_21: nonce = (if v_573 then 2-proj-2-tuple(v_572) else caught-fail) in
        {1707}let k_47: key = (if v_573 then 1-proj-2-tuple(v_572) else caught-fail) in
        {1708}let csi_42: cipherstate = (if v_571 then catch-fail((if v_573 then cipherstatepack(k_47,n_43) else fail-any)) else caught-fail) in
        {1709}let v_574: bool = not-caught-fail(csi_42) in
        {1710}let v_575: bitstring = (if v_569 then catch-fail((if v_571 then (if v_574 then (csi_42,e_32) else fail-any) else fail-any)) else caught-fail) in
        {1711}let v_576: bool = (not-caught-fail(v_575) && success?(1-proj-2-tuple(v_575))) in
        {1712}let ciphertext_30: bitstring = (if v_576 then 2-proj-2-tuple(v_575) else caught-fail) in
        {1713}let csi_43: cipherstate = (if v_576 then 1-proj-2-tuple(v_575) else caught-fail) in
        {1714}let ss_84: symmetricstate = (if v_576 then symmetricstatepack(csi_43,ck_85,h_73) else caught-fail) in
        {1715}let v_577: bitstring = (if v_576 then catch-fail(symmetricstateunpack(ss_84)) else caught-fail) in
        {1716}let v_578: bool = (not-caught-fail(v_577) && success?(1-proj-3-tuple(v_577))) in
        {1717}let h_74: bitstring = (if v_578 then 3-proj-3-tuple(v_577) else caught-fail) in
        {1718}let ck_86: key = (if v_578 then 2-proj-3-tuple(v_577) else caught-fail) in
        {1719}let cs_74: cipherstate = (if v_578 then 1-proj-3-tuple(v_577) else caught-fail) in
        {1720}let ssi_24: symmetricstate = (if v_576 then catch-fail((if v_578 then symmetricstatepack(cs_74,ck_86,hash(h_74,ciphertext_30)) else fail-any)) else caught-fail) in
        {1721}let v_579: bool = not-caught-fail(ssi_24) in
        {1722}let v_580: bitstring = (if v_567 then catch-fail((if v_569 then (if v_576 then (if v_579 then (ssi_24,ciphertext_30) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1723}let v_581: bool = (not-caught-fail(v_580) && success?(1-proj-2-tuple(v_580))) in
        {1724}let ciphertext_31: bitstring = (if v_581 then 2-proj-2-tuple(v_580) else caught-fail) in
        {1725}let ss_85: symmetricstate = (if v_581 then 1-proj-2-tuple(v_580) else caught-fail) in
        {1726}let hs_50: handshakestate = (if v_581 then handshakestatepack(ss_85,s_19,m_19,e_29,rs_19,rm_19,re_21,psk_17,initiator_14) else caught-fail) in
        {1727}let message_buffer_6: bitstring = (if v_581 then concat4(ne_21,ns_15,nm_7,ciphertext_31) else caught-fail) in
        {1728}let v_582: bitstring = (if v_581 then catch-fail(symmetricstateunpack(ss_85)) else caught-fail) in
        {1729}let v_583: bool = (not-caught-fail(v_582) && success?(1-proj-3-tuple(v_582))) in
        {1730}let h_75: bitstring = (if v_583 then 3-proj-3-tuple(v_582) else caught-fail) in
        {1731}let ck_87: key = (if v_583 then 2-proj-3-tuple(v_582) else caught-fail) in
        {1732}let cs_75: cipherstate = (if v_583 then 1-proj-3-tuple(v_582) else caught-fail) in
        {1733}let input_key_material_15: key = (if v_583 then zero else caught-fail) in
        {1734}let output1_15: key = (if v_583 then hmac_hash1(ck_87,input_key_material_15) else caught-fail) in
        {1735}let output2_15: key = (if v_583 then hmac_hash2(ck_87,input_key_material_15) else caught-fail) in
        {1736}let output3_15: key = (if v_583 then hmac_hash3(ck_87,input_key_material_15) else caught-fail) in
        {1737}let v_584: bitstring = (if v_583 then catch-fail((output1_15,output2_15,output3_15)) else caught-fail) in
        {1738}let v_585: bool = (not-caught-fail(v_584) && success?(1-proj-3-tuple(v_584))) in
        {1739}let temp_k3_3: key = (if v_585 then 3-proj-3-tuple(v_584) else caught-fail) in
        {1740}let temp_k2_3: key = (if v_585 then 2-proj-3-tuple(v_584) else caught-fail) in
        {1741}let temp_k1_3: key = (if v_585 then 1-proj-3-tuple(v_584) else caught-fail) in
        {1742}let cs1_15: cipherstate = (if v_585 then cipherstatepack(temp_k1_3,minnonce) else caught-fail) in
        {1743}let cs2_15: cipherstate = (if v_585 then cipherstatepack(temp_k2_3,minnonce) else caught-fail) in
        {1744}let v_586: bitstring = (if v_581 then catch-fail((if v_583 then (if v_585 then (ss_85,cs1_15,cs2_15) else fail-any) else fail-any)) else caught-fail) in
        {1745}let v_587: bool = (not-caught-fail(v_586) && success?(1-proj-3-tuple(v_586))) in
        {1746}let cs2_16: cipherstate = (if v_587 then 3-proj-3-tuple(v_586) else caught-fail) in
        {1747}let cs1_16: cipherstate = (if v_587 then 2-proj-3-tuple(v_586) else caught-fail) in
        {1748}let ssi_25: symmetricstate = (if v_587 then 1-proj-3-tuple(v_586) else caught-fail) in
        {1749}let (hs_51: handshakestate,message_b_3: bitstring,cs1_17: cipherstate,cs2_17: cipherstate) = (if v_501 then (if v_503 then (if v_505 then (if v_506 then (if v_509 then (if v_517 then (if v_519 then (if v_534 then (if v_536 then (if v_551 then (if v_559 then (if v_567 then (if v_581 then (if v_587 then (hs_50,message_buffer_6,cs1_16,cs2_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1750}event SendMsg(me_3,them_3,stagepack_b(sid_4),msg_b(me_3,them_3,sid_4));
        {1751}insert statestore(me_3,them_3,sid_4,statepack_c(hs_51,cs1_17,cs2_17));
        {1752}out(pub, message_b_3)
    ) | (
        {1754}!
        {1820}get statestore(=me_3,=them_3,=sid_4,statepack_c(hs_52: handshakestate,cs1_18: cipherstate,cs2_18: cipherstate)) in
        {1755}let hs_53: handshakestate = handshakestatesetcs(hs_52,cs1_18) in
        {1756}in(pub, message_c_3: bitstring);
        {1757}let v_588: bitstring = catch-fail(handshakestateunpack(hs_53)) in
        {1758}let v_589: bool = (not-caught-fail(v_588) && success?(1-proj-9-tuple(v_588))) in
        {1759}let initiator_15: bool = (if v_589 then 9-proj-9-tuple(v_588) else caught-fail) in
        {1760}let psk_18: key = (if v_589 then 8-proj-9-tuple(v_588) else caught-fail) in
        {1761}let re_22: key = (if v_589 then 7-proj-9-tuple(v_588) else caught-fail) in
        {1762}let rm_20: key = (if v_589 then 6-proj-9-tuple(v_588) else caught-fail) in
        {1763}let rs_20: key = (if v_589 then 5-proj-9-tuple(v_588) else caught-fail) in
        {1764}let e_33: keypair = (if v_589 then 4-proj-9-tuple(v_588) else caught-fail) in
        {1765}let m_20: keypair = (if v_589 then 3-proj-9-tuple(v_588) else caught-fail) in
        {1766}let s_20: keypair = (if v_589 then 2-proj-9-tuple(v_588) else caught-fail) in
        {1767}let ss_86: symmetricstate = (if v_589 then 1-proj-9-tuple(v_588) else caught-fail) in
        {1768}let v_590: bitstring = (if v_589 then catch-fail(deconcat3(message_c_3)) else caught-fail) in
        {1769}let v_591: bool = (not-caught-fail(v_590) && success?(1-proj-3-tuple(v_590))) in
        {1770}let ciphertext_32: bitstring = (if v_591 then 3-proj-3-tuple(v_590) else caught-fail) in
        {1771}let ns_16: bitstring = (if v_591 then 2-proj-3-tuple(v_590) else caught-fail) in
        {1772}let ne_22: bitstring = (if v_591 then 1-proj-3-tuple(v_590) else caught-fail) in
        {1773}let valid1_9: bool = (if v_591 then true else caught-fail) in
        {1774}let v_592: bitstring = (if v_591 then catch-fail(symmetricstateunpack(ss_86)) else caught-fail) in
        {1775}let v_593: bool = (not-caught-fail(v_592) && success?(1-proj-3-tuple(v_592))) in
        {1776}let h_76: bitstring = (if v_593 then 3-proj-3-tuple(v_592) else caught-fail) in
        {1777}let ck_88: key = (if v_593 then 2-proj-3-tuple(v_592) else caught-fail) in
        {1778}let cs_76: cipherstate = (if v_593 then 1-proj-3-tuple(v_592) else caught-fail) in
        {1779}let v_594: bitstring = (if v_593 then catch-fail(cipherstateunpack(cs_76)) else caught-fail) in
        {1780}let v_595: bool = (not-caught-fail(v_594) && success?(1-proj-2-tuple(v_594))) in
        {1781}let n_44: nonce = (if v_595 then 2-proj-2-tuple(v_594) else caught-fail) in
        {1782}let k_48: key = (if v_595 then 1-proj-2-tuple(v_594) else caught-fail) in
        {1783}let d_11: aead = (if v_595 then catch-fail(decrypt(k_48,n_44,h_76,ciphertext_32)) else caught-fail) in
        {1784}let v_596: bool = not-caught-fail(d_11) in
        {1785}let v_597: bitstring = (if v_596 then catch-fail(aeadunpack(d_11)) else caught-fail) in
        {1786}let v_598: bool = (not-caught-fail(v_597) && success?(1-proj-3-tuple(v_597))) in
        {1787}let plaintext_33: bitstring = (if v_598 then 3-proj-3-tuple(v_597) else caught-fail) in
        {1788}let adi_11: bitstring = (if v_598 then 2-proj-3-tuple(v_597) else caught-fail) in
        {1789}let valid_29: bool = (if v_598 then 1-proj-3-tuple(v_597) else caught-fail) in
        {1790}let n_45: nonce = (if v_598 then increment_nonce(n_44) else caught-fail) in
        {1791}let v_599: bitstring = (if v_598 then catch-fail(cipherstateunpack(cs_76)) else caught-fail) in
        {1792}let v_600: bool = (not-caught-fail(v_599) && success?(1-proj-2-tuple(v_599))) in
        {1793}let o_22: nonce = (if v_600 then 2-proj-2-tuple(v_599) else caught-fail) in
        {1794}let k_49: key = (if v_600 then 1-proj-2-tuple(v_599) else caught-fail) in
        {1795}let csi_44: cipherstate = (if v_598 then catch-fail((if v_600 then cipherstatepack(k_49,n_45) else fail-any)) else caught-fail) in
        {1796}let v_601: bool = not-caught-fail(csi_44) in
        {1797}let v_602: bitstring = (if v_593 then catch-fail((if v_595 then (if v_596 then (if v_598 then (if v_601 then (csi_44,plaintext_33,valid_29) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1798}let v_603: bool = (not-caught-fail(v_602) && success?(1-proj-3-tuple(v_602))) in
        {1799}let valid_30: bool = (if v_603 then 3-proj-3-tuple(v_602) else caught-fail) in
        {1800}let plaintext_34: bitstring = (if v_603 then 2-proj-3-tuple(v_602) else caught-fail) in
        {1801}let csi_45: cipherstate = (if v_603 then 1-proj-3-tuple(v_602) else caught-fail) in
        {1802}let ss_87: symmetricstate = (if v_603 then symmetricstatepack(csi_45,ck_88,h_76) else caught-fail) in
        {1803}let v_604: bitstring = (if v_603 then catch-fail(symmetricstateunpack(ss_87)) else caught-fail) in
        {1804}let v_605: bool = (not-caught-fail(v_604) && success?(1-proj-3-tuple(v_604))) in
        {1805}let h_77: bitstring = (if v_605 then 3-proj-3-tuple(v_604) else caught-fail) in
        {1806}let ck_89: key = (if v_605 then 2-proj-3-tuple(v_604) else caught-fail) in
        {1807}let cs_77: cipherstate = (if v_605 then 1-proj-3-tuple(v_604) else caught-fail) in
        {1808}let ssi_26: symmetricstate = (if v_603 then catch-fail((if v_605 then symmetricstatepack(cs_77,ck_89,hash(h_77,ciphertext_32)) else fail-any)) else caught-fail) in
        {1809}let v_606: bool = not-caught-fail(ssi_26) in
        {1810}let v_607: bitstring = (if v_591 then catch-fail((if v_593 then (if v_603 then (if v_606 then (ssi_26,plaintext_34,valid_30) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1811}let v_608: bool = (not-caught-fail(v_607) && success?(1-proj-3-tuple(v_607))) in
        {1812}let valid2_9: bool = (if v_608 then 3-proj-3-tuple(v_607) else caught-fail) in
        {1813}let plaintext_35: bitstring = (if v_608 then 2-proj-3-tuple(v_607) else caught-fail) in
        {1814}let ss_88: symmetricstate = (if v_608 then 1-proj-3-tuple(v_607) else caught-fail) in
        {1815}let v_609: bool = (if v_608 then catch-fail((valid1_9 && valid2_9)) else caught-fail) in
        {1816}let hs_54: handshakestate = (if v_609 then handshakestatepack(ss_88,s_20,m_20,e_33,rs_20,rm_20,re_22,psk_18,initiator_15) else caught-fail) in
        {1817}let (hs_55: handshakestate,plaintext_c_1: bitstring,valid_31: bool) = (if v_589 then (if v_591 then (if v_608 then (if undo-catch-fail(v_609) then (hs_54,plaintext_35,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1818}event RecvMsg(me_3,them_3,stagepack_c(sid_4),plaintext_c_1);
        {1819}insert statestore(me_3,them_3,sid_4,statepack_d(hs_55,handshakestategetcs(hs_55),cs2_18))
    ) | (
        {1821}!
        {1878}get statestore(=me_3,=them_3,=sid_4,statepack_d(hs_56: handshakestate,cs1_19: cipherstate,cs2_19: cipherstate)) in
        {1822}let hs_57: handshakestate = handshakestatesetcs(hs_56,cs2_19) in
        {1823}let payload_7: bitstring = msg_d(me_3,them_3,sid_4) in
        {1824}let v_610: bitstring = catch-fail(handshakestateunpack(hs_57)) in
        {1825}let v_611: bool = (not-caught-fail(v_610) && success?(1-proj-9-tuple(v_610))) in
        {1826}let initiator_16: bool = (if v_611 then 9-proj-9-tuple(v_610) else caught-fail) in
        {1827}let psk_19: key = (if v_611 then 8-proj-9-tuple(v_610) else caught-fail) in
        {1828}let re_23: key = (if v_611 then 7-proj-9-tuple(v_610) else caught-fail) in
        {1829}let rm_21: key = (if v_611 then 6-proj-9-tuple(v_610) else caught-fail) in
        {1830}let rs_21: key = (if v_611 then 5-proj-9-tuple(v_610) else caught-fail) in
        {1831}let e_34: keypair = (if v_611 then 4-proj-9-tuple(v_610) else caught-fail) in
        {1832}let m_21: keypair = (if v_611 then 3-proj-9-tuple(v_610) else caught-fail) in
        {1833}let s_21: keypair = (if v_611 then 2-proj-9-tuple(v_610) else caught-fail) in
        {1834}let ss_89: symmetricstate = (if v_611 then 1-proj-9-tuple(v_610) else caught-fail) in
        {1835}let v_612: bitstring = (if v_611 then catch-fail((empty,empty,empty)) else caught-fail) in
        {1836}let v_613: bool = (not-caught-fail(v_612) && success?(1-proj-3-tuple(v_612))) in
        {1837}let ciphertext_33: bitstring = (if v_613 then 3-proj-3-tuple(v_612) else caught-fail) in
        {1838}let ns_17: bitstring = (if v_613 then 2-proj-3-tuple(v_612) else caught-fail) in
        {1839}let ne_23: bitstring = (if v_613 then 1-proj-3-tuple(v_612) else caught-fail) in
        {1840}let v_614: bitstring = (if v_613 then catch-fail(symmetricstateunpack(ss_89)) else caught-fail) in
        {1841}let v_615: bool = (not-caught-fail(v_614) && success?(1-proj-3-tuple(v_614))) in
        {1842}let h_78: bitstring = (if v_615 then 3-proj-3-tuple(v_614) else caught-fail) in
        {1843}let ck_90: key = (if v_615 then 2-proj-3-tuple(v_614) else caught-fail) in
        {1844}let cs_78: cipherstate = (if v_615 then 1-proj-3-tuple(v_614) else caught-fail) in
        {1845}let v_616: bitstring = (if v_615 then catch-fail(cipherstateunpack(cs_78)) else caught-fail) in
        {1846}let v_617: bool = (not-caught-fail(v_616) && success?(1-proj-2-tuple(v_616))) in
        {1847}let n_46: nonce = (if v_617 then 2-proj-2-tuple(v_616) else caught-fail) in
        {1848}let k_50: key = (if v_617 then 1-proj-2-tuple(v_616) else caught-fail) in
        {1849}let e_35: bitstring = (if v_617 then encrypt(k_50,n_46,h_78,payload_7) else caught-fail) in
        {1850}let n_47: nonce = (if v_617 then increment_nonce(n_46) else caught-fail) in
        {1851}let v_618: bitstring = (if v_617 then catch-fail(cipherstateunpack(cs_78)) else caught-fail) in
        {1852}let v_619: bool = (not-caught-fail(v_618) && success?(1-proj-2-tuple(v_618))) in
        {1853}let o_23: nonce = (if v_619 then 2-proj-2-tuple(v_618) else caught-fail) in
        {1854}let k_51: key = (if v_619 then 1-proj-2-tuple(v_618) else caught-fail) in
        {1855}let csi_46: cipherstate = (if v_617 then catch-fail((if v_619 then cipherstatepack(k_51,n_47) else fail-any)) else caught-fail) in
        {1856}let v_620: bool = not-caught-fail(csi_46) in
        {1857}let v_621: bitstring = (if v_615 then catch-fail((if v_617 then (if v_620 then (csi_46,e_35) else fail-any) else fail-any)) else caught-fail) in
        {1858}let v_622: bool = (not-caught-fail(v_621) && success?(1-proj-2-tuple(v_621))) in
        {1859}let ciphertext_34: bitstring = (if v_622 then 2-proj-2-tuple(v_621) else caught-fail) in
        {1860}let csi_47: cipherstate = (if v_622 then 1-proj-2-tuple(v_621) else caught-fail) in
        {1861}let ss_90: symmetricstate = (if v_622 then symmetricstatepack(csi_47,ck_90,h_78) else caught-fail) in
        {1862}let v_623: bitstring = (if v_622 then catch-fail(symmetricstateunpack(ss_90)) else caught-fail) in
        {1863}let v_624: bool = (not-caught-fail(v_623) && success?(1-proj-3-tuple(v_623))) in
        {1864}let h_79: bitstring = (if v_624 then 3-proj-3-tuple(v_623) else caught-fail) in
        {1865}let ck_91: key = (if v_624 then 2-proj-3-tuple(v_623) else caught-fail) in
        {1866}let cs_79: cipherstate = (if v_624 then 1-proj-3-tuple(v_623) else caught-fail) in
        {1867}let ssi_27: symmetricstate = (if v_622 then catch-fail((if v_624 then symmetricstatepack(cs_79,ck_91,hash(h_79,ciphertext_34)) else fail-any)) else caught-fail) in
        {1868}let v_625: bool = not-caught-fail(ssi_27) in
        {1869}let v_626: bitstring = (if v_613 then catch-fail((if v_615 then (if v_622 then (if v_625 then (ssi_27,ciphertext_34) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1870}let v_627: bool = (not-caught-fail(v_626) && success?(1-proj-2-tuple(v_626))) in
        {1871}let ciphertext_35: bitstring = (if v_627 then 2-proj-2-tuple(v_626) else caught-fail) in
        {1872}let ss_91: symmetricstate = (if v_627 then 1-proj-2-tuple(v_626) else caught-fail) in
        {1873}let hs_58: handshakestate = (if v_627 then handshakestatepack(ss_91,s_21,m_21,e_34,rs_21,rm_21,re_23,psk_19,initiator_16) else caught-fail) in
        {1874}let message_buffer_7: bitstring = (if v_627 then concat3(ne_23,ns_17,ciphertext_35) else caught-fail) in
        {1875}let (hs_59: handshakestate,message_d_3: bitstring) = (if v_611 then (if v_613 then (if v_627 then (hs_58,message_buffer_7) else fail-any) else fail-any) else fail-any) in
        {1876}event SendMsg(me_3,them_3,stagepack_d(sid_4),msg_d(me_3,them_3,sid_4));
        {1877}out(pub, message_d_3)
    ) | (
        {1879}event LeakS(phase0,me_3);
        {1880}event LeakM(phase0,me_3);
        {1881}out(pub, (key_s(me_3),key_m(me_3)))
    ) | (
        {1882}phase 1;
        {1883}event LeakS(phase1,me_3);
        {1884}event LeakM(phase1,me_3);
        {1885}out(pub, (key_s(me_3),key_m(me_3)))
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
{1}out(pub, (key_s(charlie),key_m(charlie)));
{2}!
{3}new sid: sessionid;
(
    {6}let sid_1: sessionid = sid in
    {5}let them: principal = bob in
    {4}let me: principal = alice in
    (
        {18}let k: key = empty in
        {19}let cs: cipherstate = cipherstatepack(k,minnonce) in
        {15}let protocol_name: bitstring = somename in
        {16}let h: bitstring = hash(protocol_name,empty) in
        {17}let ck: key = h in
        {20}let ss: symmetricstate = symmetricstatepack(cs,ck,h) in
        {21}let v: bitstring = catch-fail(symmetricstateunpack(ss)) in
        {22}let v_1: bool = (not-caught-fail(v) && success?(1-proj-3-tuple(v))) in
        {23}let h_1: bitstring = (if v_1 then 3-proj-3-tuple(v) else caught-fail) in
        {24}let ck_1: key = (if v_1 then 2-proj-3-tuple(v) else caught-fail) in
        {25}let cs_1: cipherstate = (if v_1 then 1-proj-3-tuple(v) else caught-fail) in
        {13}let prologue: bitstring = empty in
        {26}let ss_1: symmetricstate = catch-fail((if v_1 then symmetricstatepack(cs_1,ck_1,hash(h_1,prologue)) else fail-any)) in
        {27}let v_2: bool = not-caught-fail(ss_1) in
        {14}let psk: key = empty in
        {12}let re: key = empty in
        {11}let rm: key = empty in
        {10}let rs: key = empty in
        {9}let e: keypair = keypairpack(empty,empty) in
        {8}let m: keypair = keypairpack(empty,empty) in
        {7}let s: keypair = keypairpack(empty,empty) in
        {28}let hs: handshakestate = (if v_2 then handshakestatepack(ss_1,s,m,e,rs,rm,re,psk,true) else fail-any) in
        {29}insert statestore(me,them,sid_1,statepack_a(hs))
    ) | (
        {100}get statestore(=me,=them,=sid_1,statepack_a(hs_1: handshakestate)) in
        {31}let v_3: bitstring = catch-fail(handshakestateunpack(hs_1)) in
        {32}let v_4: bool = (not-caught-fail(v_3) && success?(1-proj-9-tuple(v_3))) in
        {33}let initiator_1: bool = (if v_4 then 9-proj-9-tuple(v_3) else caught-fail) in
        {34}let psk_1: key = (if v_4 then 8-proj-9-tuple(v_3) else caught-fail) in
        {35}let re_1: key = (if v_4 then 7-proj-9-tuple(v_3) else caught-fail) in
        {36}let rm_1: key = (if v_4 then 6-proj-9-tuple(v_3) else caught-fail) in
        {37}let rs_1: key = (if v_4 then 5-proj-9-tuple(v_3) else caught-fail) in
        {38}let e_1: keypair = (if v_4 then 4-proj-9-tuple(v_3) else caught-fail) in
        {39}let m_1: keypair = (if v_4 then 3-proj-9-tuple(v_3) else caught-fail) in
        {40}let s_1: keypair = (if v_4 then 2-proj-9-tuple(v_3) else caught-fail) in
        {41}let ss_2: symmetricstate = (if v_4 then 1-proj-9-tuple(v_3) else caught-fail) in
        {42}let v_5: bitstring = (if v_4 then catch-fail((empty,empty,empty)) else caught-fail) in
        {43}let v_6: bool = (not-caught-fail(v_5) && success?(1-proj-3-tuple(v_5))) in
        {44}let ciphertext: bitstring = (if v_6 then 3-proj-3-tuple(v_5) else caught-fail) in
        {45}let ns: bitstring = (if v_6 then 2-proj-3-tuple(v_5) else caught-fail) in
        {46}let ne: bitstring = (if v_6 then 1-proj-3-tuple(v_5) else caught-fail) in
        {47}let basis: key = (if v_6 then key_e(me,them,sid_1) else caught-fail) in
        {48}let public_key: key = (if v_6 then catch-fail(dhexp(basis,validkey(g))) else caught-fail) in
        {49}let v_7: bool = not-caught-fail(public_key) in
        {50}let e_2: keypair = (if v_6 then catch-fail((if v_7 then keypairpack(validkey(public_key),basis) else fail-any)) else caught-fail) in
        {51}let v_8: bool = not-caught-fail(e_2) in
        {52}let ne_1: bitstring = (if v_8 then catch-fail(getpublickey(e_2)) else caught-fail) in
        {53}let v_9: bool = not-caught-fail(ne_1) in
        {54}let v_10: bitstring = (if v_9 then catch-fail(symmetricstateunpack(ss_2)) else caught-fail) in
        {55}let v_11: bool = (not-caught-fail(v_10) && success?(1-proj-3-tuple(v_10))) in
        {56}let h_2: bitstring = (if v_11 then 3-proj-3-tuple(v_10) else caught-fail) in
        {57}let ck_2: key = (if v_11 then 2-proj-3-tuple(v_10) else caught-fail) in
        {58}let cs_2: cipherstate = (if v_11 then 1-proj-3-tuple(v_10) else caught-fail) in
        {59}let ss_3: symmetricstate = (if v_9 then catch-fail((if v_11 then symmetricstatepack(cs_2,ck_2,hash(h_2,ne_1)) else fail-any)) else caught-fail) in
        {60}let v_12: bool = not-caught-fail(ss_3) in
        {61}let v_13: bitstring = (if v_12 then catch-fail(symmetricstateunpack(ss_3)) else caught-fail) in
        {62}let v_14: bool = (not-caught-fail(v_13) && success?(1-proj-3-tuple(v_13))) in
        {63}let h_3: bitstring = (if v_14 then 3-proj-3-tuple(v_13) else caught-fail) in
        {64}let ck_3: key = (if v_14 then 2-proj-3-tuple(v_13) else caught-fail) in
        {65}let cs_3: cipherstate = (if v_14 then 1-proj-3-tuple(v_13) else caught-fail) in
        {66}let v_15: bitstring = (if v_14 then catch-fail(cipherstateunpack(cs_3)) else caught-fail) in
        {67}let v_16: bool = (not-caught-fail(v_15) && success?(1-proj-2-tuple(v_15))) in
        {68}let n: nonce = (if v_16 then 2-proj-2-tuple(v_15) else caught-fail) in
        {69}let k_1: key = (if v_16 then 1-proj-2-tuple(v_15) else caught-fail) in
        {72}let v_17: bitstring = (if v_16 then catch-fail(cipherstateunpack(cs_3)) else caught-fail) in
        {73}let v_18: bool = (not-caught-fail(v_17) && success?(1-proj-2-tuple(v_17))) in
        {74}let o: nonce = (if v_18 then 2-proj-2-tuple(v_17) else caught-fail) in
        {75}let k_2: key = (if v_18 then 1-proj-2-tuple(v_17) else caught-fail) in
        {71}let n_1: nonce = (if v_16 then increment_nonce(n) else caught-fail) in
        {76}let csi: cipherstate = (if v_16 then catch-fail((if v_18 then cipherstatepack(k_2,n_1) else fail-any)) else caught-fail) in
        {77}let v_19: bool = not-caught-fail(csi) in
        {30}let payload: bitstring = msg_a(me,them,sid_1) in
        {70}let e_3: bitstring = (if v_16 then encrypt(k_1,n,h_3,payload) else caught-fail) in
        {78}let v_20: bitstring = (if v_14 then catch-fail((if v_16 then (if v_19 then (csi,e_3) else fail-any) else fail-any)) else caught-fail) in
        {79}let v_21: bool = (not-caught-fail(v_20) && success?(1-proj-2-tuple(v_20))) in
        {80}let ciphertext_1: bitstring = (if v_21 then 2-proj-2-tuple(v_20) else caught-fail) in
        {81}let csi_1: cipherstate = (if v_21 then 1-proj-2-tuple(v_20) else caught-fail) in
        {82}let ss_4: symmetricstate = (if v_21 then symmetricstatepack(csi_1,ck_3,h_3) else caught-fail) in
        {83}let v_22: bitstring = (if v_21 then catch-fail(symmetricstateunpack(ss_4)) else caught-fail) in
        {84}let v_23: bool = (not-caught-fail(v_22) && success?(1-proj-3-tuple(v_22))) in
        {85}let h_4: bitstring = (if v_23 then 3-proj-3-tuple(v_22) else caught-fail) in
        {86}let ck_4: key = (if v_23 then 2-proj-3-tuple(v_22) else caught-fail) in
        {87}let cs_4: cipherstate = (if v_23 then 1-proj-3-tuple(v_22) else caught-fail) in
        {88}let ssi: symmetricstate = (if v_21 then catch-fail((if v_23 then symmetricstatepack(cs_4,ck_4,hash(h_4,ciphertext_1)) else fail-any)) else caught-fail) in
        {89}let v_24: bool = not-caught-fail(ssi) in
        {90}let v_25: bitstring = (if v_12 then catch-fail((if v_14 then (if v_21 then (if v_24 then (ssi,ciphertext_1) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {91}let v_26: bool = (not-caught-fail(v_25) && success?(1-proj-2-tuple(v_25))) in
        {92}let ciphertext_2: bitstring = (if v_26 then 2-proj-2-tuple(v_25) else caught-fail) in
        {93}let ss_5: symmetricstate = (if v_26 then 1-proj-2-tuple(v_25) else caught-fail) in
        {95}let message_buffer: bitstring = (if v_26 then concat3(ne_1,ns,ciphertext_2) else caught-fail) in
        {94}let hs_2: handshakestate = (if v_26 then handshakestatepack(ss_5,s_1,m_1,e_2,rs_1,rm_1,re_1,psk_1,initiator_1) else caught-fail) in
        {96}let (hs_3: handshakestate,message_a: bitstring) = (if v_4 then (if v_6 then (if v_8 then (if v_9 then (if v_12 then (if v_26 then (hs_2,message_buffer) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {97}event SendMsg(me,them,stagepack_a(sid_1),msg_a(me,them,sid_1));
        {98}insert statestore(me,them,sid_1,statepack_b(hs_3));
        {99}out(pub, message_a)
    ) | (
        {349}get statestore(=me,=them,=sid_1,statepack_b(hs_4: handshakestate)) in
        {101}in(pub, message_b: bitstring);
        {102}let v_27: bitstring = catch-fail(handshakestateunpack(hs_4)) in
        {103}let v_28: bool = (not-caught-fail(v_27) && success?(1-proj-9-tuple(v_27))) in
        {104}let initiator_2: bool = (if v_28 then 9-proj-9-tuple(v_27) else caught-fail) in
        {105}let psk_2: key = (if v_28 then 8-proj-9-tuple(v_27) else caught-fail) in
        {106}let re_2: key = (if v_28 then 7-proj-9-tuple(v_27) else caught-fail) in
        {107}let rm_2: key = (if v_28 then 6-proj-9-tuple(v_27) else caught-fail) in
        {108}let rs_2: key = (if v_28 then 5-proj-9-tuple(v_27) else caught-fail) in
        {109}let e_4: keypair = (if v_28 then 4-proj-9-tuple(v_27) else caught-fail) in
        {110}let m_2: keypair = (if v_28 then 3-proj-9-tuple(v_27) else caught-fail) in
        {111}let s_2: keypair = (if v_28 then 2-proj-9-tuple(v_27) else caught-fail) in
        {112}let ss_6: symmetricstate = (if v_28 then 1-proj-9-tuple(v_27) else caught-fail) in
        {113}let v_29: bitstring = (if v_28 then catch-fail(deconcat4(message_b)) else caught-fail) in
        {114}let v_30: bool = (not-caught-fail(v_29) && success?(1-proj-4-tuple(v_29))) in
        {115}let ciphertext_3: bitstring = (if v_30 then 4-proj-4-tuple(v_29) else caught-fail) in
        {116}let nm: bitstring = (if v_30 then 3-proj-4-tuple(v_29) else caught-fail) in
        {117}let ns_1: bitstring = (if v_30 then 2-proj-4-tuple(v_29) else caught-fail) in
        {118}let ne_2: bitstring = (if v_30 then 1-proj-4-tuple(v_29) else caught-fail) in
        {122}let v_31: bitstring = (if v_30 then catch-fail(symmetricstateunpack(ss_6)) else caught-fail) in
        {123}let v_32: bool = (not-caught-fail(v_31) && success?(1-proj-3-tuple(v_31))) in
        {124}let h_5: bitstring = (if v_32 then 3-proj-3-tuple(v_31) else caught-fail) in
        {125}let ck_5: key = (if v_32 then 2-proj-3-tuple(v_31) else caught-fail) in
        {126}let cs_5: cipherstate = (if v_32 then 1-proj-3-tuple(v_31) else caught-fail) in
        {121}let re_3: key = (if v_30 then ne_2 else caught-fail) in
        {127}let ss_7: symmetricstate = (if v_30 then catch-fail((if v_32 then symmetricstatepack(cs_5,ck_5,hash(h_5,re_3)) else fail-any)) else caught-fail) in
        {128}let v_33: bool = not-caught-fail(ss_7) in
        {129}let v_34: bitstring = (if v_33 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {130}let v_35: bool = (not-caught-fail(v_34) && success?(1-proj-2-tuple(v_34))) in
        {131}let my_private_key: key = (if v_35 then 2-proj-2-tuple(v_34) else caught-fail) in
        {132}let my_public_key: key = (if v_35 then 1-proj-2-tuple(v_34) else caught-fail) in
        {133}let input_key_material: key = (if v_33 then catch-fail((if v_35 then dhexp(my_private_key,re_3) else fail-any)) else caught-fail) in
        {134}let v_36: bool = not-caught-fail(input_key_material) in
        {135}let v_37: bitstring = (if v_36 then catch-fail(symmetricstateunpack(ss_7)) else caught-fail) in
        {136}let v_38: bool = (not-caught-fail(v_37) && success?(1-proj-3-tuple(v_37))) in
        {137}let h_6: bitstring = (if v_38 then 3-proj-3-tuple(v_37) else caught-fail) in
        {138}let ck_6: key = (if v_38 then 2-proj-3-tuple(v_37) else caught-fail) in
        {139}let cs_6: cipherstate = (if v_38 then 1-proj-3-tuple(v_37) else caught-fail) in
        {142}let output3: key = (if v_38 then hmac_hash3(ck_6,input_key_material) else caught-fail) in
        {141}let output2: key = (if v_38 then hmac_hash2(ck_6,input_key_material) else caught-fail) in
        {140}let output1: key = (if v_38 then hmac_hash1(ck_6,input_key_material) else caught-fail) in
        {143}let v_39: bitstring = (if v_38 then catch-fail((output1,output2,output3)) else caught-fail) in
        {144}let v_40: bool = (not-caught-fail(v_39) && success?(1-proj-3-tuple(v_39))) in
        {145}let output_3: key = (if v_40 then 3-proj-3-tuple(v_39) else caught-fail) in
        {146}let temp_k: key = (if v_40 then 2-proj-3-tuple(v_39) else caught-fail) in
        {147}let ck_7: key = (if v_40 then 1-proj-3-tuple(v_39) else caught-fail) in
        {148}let ss_8: symmetricstate = (if v_33 then catch-fail((if v_36 then (if v_38 then (if v_40 then symmetricstatepack(cipherstatepack(temp_k,minnonce),ck_7,h_6) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {149}let v_41: bool = not-caught-fail(ss_8) in
        {150}let v_42: bitstring = (if v_41 then catch-fail(symmetricstateunpack(ss_8)) else caught-fail) in
        {151}let v_43: bool = (not-caught-fail(v_42) && success?(1-proj-3-tuple(v_42))) in
        {152}let h_7: bitstring = (if v_43 then 3-proj-3-tuple(v_42) else caught-fail) in
        {153}let ck_8: key = (if v_43 then 2-proj-3-tuple(v_42) else caught-fail) in
        {154}let cs_7: cipherstate = (if v_43 then 1-proj-3-tuple(v_42) else caught-fail) in
        {155}let v_44: bitstring = (if v_43 then catch-fail(cipherstateunpack(cs_7)) else caught-fail) in
        {156}let v_45: bool = (not-caught-fail(v_44) && success?(1-proj-2-tuple(v_44))) in
        {157}let n_2: nonce = (if v_45 then 2-proj-2-tuple(v_44) else caught-fail) in
        {158}let k_3: key = (if v_45 then 1-proj-2-tuple(v_44) else caught-fail) in
        {159}let d: aead = (if v_45 then catch-fail(decrypt(k_3,n_2,h_7,ns_1)) else caught-fail) in
        {160}let v_46: bool = not-caught-fail(d) in
        {161}let v_47: bitstring = (if v_46 then catch-fail(aeadunpack(d)) else caught-fail) in
        {162}let v_48: bool = (not-caught-fail(v_47) && success?(1-proj-3-tuple(v_47))) in
        {163}let plaintext: bitstring = (if v_48 then 3-proj-3-tuple(v_47) else caught-fail) in
        {164}let adi: bitstring = (if v_48 then 2-proj-3-tuple(v_47) else caught-fail) in
        {165}let valid: bool = (if v_48 then 1-proj-3-tuple(v_47) else caught-fail) in
        {167}let v_49: bitstring = (if v_48 then catch-fail(cipherstateunpack(cs_7)) else caught-fail) in
        {168}let v_50: bool = (not-caught-fail(v_49) && success?(1-proj-2-tuple(v_49))) in
        {169}let o_1: nonce = (if v_50 then 2-proj-2-tuple(v_49) else caught-fail) in
        {170}let k_4: key = (if v_50 then 1-proj-2-tuple(v_49) else caught-fail) in
        {166}let n_3: nonce = (if v_48 then increment_nonce(n_2) else caught-fail) in
        {171}let csi_2: cipherstate = (if v_48 then catch-fail((if v_50 then cipherstatepack(k_4,n_3) else fail-any)) else caught-fail) in
        {172}let v_51: bool = not-caught-fail(csi_2) in
        {173}let v_52: bitstring = (if v_43 then catch-fail((if v_45 then (if v_46 then (if v_48 then (if v_51 then (csi_2,plaintext,valid) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {174}let v_53: bool = (not-caught-fail(v_52) && success?(1-proj-3-tuple(v_52))) in
        {175}let valid_1: bool = (if v_53 then 3-proj-3-tuple(v_52) else caught-fail) in
        {176}let plaintext_1: bitstring = (if v_53 then 2-proj-3-tuple(v_52) else caught-fail) in
        {177}let csi_3: cipherstate = (if v_53 then 1-proj-3-tuple(v_52) else caught-fail) in
        {178}let ss_9: symmetricstate = (if v_53 then symmetricstatepack(csi_3,ck_8,h_7) else caught-fail) in
        {179}let v_54: bitstring = (if v_53 then catch-fail(symmetricstateunpack(ss_9)) else caught-fail) in
        {180}let v_55: bool = (not-caught-fail(v_54) && success?(1-proj-3-tuple(v_54))) in
        {181}let h_8: bitstring = (if v_55 then 3-proj-3-tuple(v_54) else caught-fail) in
        {182}let ck_9: key = (if v_55 then 2-proj-3-tuple(v_54) else caught-fail) in
        {183}let cs_8: cipherstate = (if v_55 then 1-proj-3-tuple(v_54) else caught-fail) in
        {184}let ssi_1: symmetricstate = (if v_53 then catch-fail((if v_55 then symmetricstatepack(cs_8,ck_9,hash(h_8,ns_1)) else fail-any)) else caught-fail) in
        {185}let v_56: bool = not-caught-fail(ssi_1) in
        {186}let v_57: bitstring = (if v_41 then catch-fail((if v_43 then (if v_53 then (if v_56 then (ssi_1,plaintext_1,valid_1) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {187}let v_58: bool = (not-caught-fail(v_57) && success?(1-proj-3-tuple(v_57))) in
        {188}let valid1_1: bool = (if v_58 then 3-proj-3-tuple(v_57) else caught-fail) in
        {189}let ne_3: bitstring = (if v_58 then 2-proj-3-tuple(v_57) else caught-fail) in
        {190}let ss_10: symmetricstate = (if v_58 then 1-proj-3-tuple(v_57) else caught-fail) in
        {192}let v_59: bitstring = (if v_58 then catch-fail(symmetricstateunpack(ss_10)) else caught-fail) in
        {193}let v_60: bool = (not-caught-fail(v_59) && success?(1-proj-3-tuple(v_59))) in
        {194}let h_9: bitstring = (if v_60 then 3-proj-3-tuple(v_59) else caught-fail) in
        {195}let ck_10: key = (if v_60 then 2-proj-3-tuple(v_59) else caught-fail) in
        {196}let cs_9: cipherstate = (if v_60 then 1-proj-3-tuple(v_59) else caught-fail) in
        {197}let v_61: bitstring = (if v_60 then catch-fail(cipherstateunpack(cs_9)) else caught-fail) in
        {198}let v_62: bool = (not-caught-fail(v_61) && success?(1-proj-2-tuple(v_61))) in
        {199}let n_4: nonce = (if v_62 then 2-proj-2-tuple(v_61) else caught-fail) in
        {200}let k_5: key = (if v_62 then 1-proj-2-tuple(v_61) else caught-fail) in
        {201}let d_1: aead = (if v_62 then catch-fail(decrypt(k_5,n_4,h_9,nm)) else caught-fail) in
        {202}let v_63: bool = not-caught-fail(d_1) in
        {203}let v_64: bitstring = (if v_63 then catch-fail(aeadunpack(d_1)) else caught-fail) in
        {204}let v_65: bool = (not-caught-fail(v_64) && success?(1-proj-3-tuple(v_64))) in
        {205}let plaintext_2: bitstring = (if v_65 then 3-proj-3-tuple(v_64) else caught-fail) in
        {206}let adi_1: bitstring = (if v_65 then 2-proj-3-tuple(v_64) else caught-fail) in
        {207}let valid_2: bool = (if v_65 then 1-proj-3-tuple(v_64) else caught-fail) in
        {209}let v_66: bitstring = (if v_65 then catch-fail(cipherstateunpack(cs_9)) else caught-fail) in
        {210}let v_67: bool = (not-caught-fail(v_66) && success?(1-proj-2-tuple(v_66))) in
        {211}let o_2: nonce = (if v_67 then 2-proj-2-tuple(v_66) else caught-fail) in
        {212}let k_6: key = (if v_67 then 1-proj-2-tuple(v_66) else caught-fail) in
        {208}let n_5: nonce = (if v_65 then increment_nonce(n_4) else caught-fail) in
        {213}let csi_4: cipherstate = (if v_65 then catch-fail((if v_67 then cipherstatepack(k_6,n_5) else fail-any)) else caught-fail) in
        {214}let v_68: bool = not-caught-fail(csi_4) in
        {215}let v_69: bitstring = (if v_60 then catch-fail((if v_62 then (if v_63 then (if v_65 then (if v_68 then (csi_4,plaintext_2,valid_2) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {216}let v_70: bool = (not-caught-fail(v_69) && success?(1-proj-3-tuple(v_69))) in
        {217}let valid_3: bool = (if v_70 then 3-proj-3-tuple(v_69) else caught-fail) in
        {218}let plaintext_3: bitstring = (if v_70 then 2-proj-3-tuple(v_69) else caught-fail) in
        {219}let csi_5: cipherstate = (if v_70 then 1-proj-3-tuple(v_69) else caught-fail) in
        {220}let ss_11: symmetricstate = (if v_70 then symmetricstatepack(csi_5,ck_10,h_9) else caught-fail) in
        {221}let v_71: bitstring = (if v_70 then catch-fail(symmetricstateunpack(ss_11)) else caught-fail) in
        {222}let v_72: bool = (not-caught-fail(v_71) && success?(1-proj-3-tuple(v_71))) in
        {223}let h_10: bitstring = (if v_72 then 3-proj-3-tuple(v_71) else caught-fail) in
        {224}let ck_11: key = (if v_72 then 2-proj-3-tuple(v_71) else caught-fail) in
        {225}let cs_10: cipherstate = (if v_72 then 1-proj-3-tuple(v_71) else caught-fail) in
        {226}let ssi_2: symmetricstate = (if v_70 then catch-fail((if v_72 then symmetricstatepack(cs_10,ck_11,hash(h_10,nm)) else fail-any)) else caught-fail) in
        {227}let v_73: bool = not-caught-fail(ssi_2) in
        {228}let v_74: bitstring = (if v_58 then catch-fail((if v_60 then (if v_70 then (if v_73 then (ssi_2,plaintext_3,valid_3) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {229}let v_75: bool = (not-caught-fail(v_74) && success?(1-proj-3-tuple(v_74))) in
        {230}let valid2_1: bool = (if v_75 then 3-proj-3-tuple(v_74) else caught-fail) in
        {231}let ne_4: bitstring = (if v_75 then 2-proj-3-tuple(v_74) else caught-fail) in
        {232}let ss_12: symmetricstate = (if v_75 then 1-proj-3-tuple(v_74) else caught-fail) in
        {234}let v_76: bitstring = (if v_75 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {235}let v_77: bool = (not-caught-fail(v_76) && success?(1-proj-2-tuple(v_76))) in
        {236}let my_private_key_1: key = (if v_77 then 2-proj-2-tuple(v_76) else caught-fail) in
        {237}let my_public_key_1: key = (if v_77 then 1-proj-2-tuple(v_76) else caught-fail) in
        {191}let rs_3: key = (if v_58 then ne_3 else caught-fail) in
        {238}let input_key_material_1: key = (if v_75 then catch-fail((if v_77 then dhexp(my_private_key_1,rs_3) else fail-any)) else caught-fail) in
        {239}let v_78: bool = not-caught-fail(input_key_material_1) in
        {240}let v_79: bitstring = (if v_78 then catch-fail(symmetricstateunpack(ss_12)) else caught-fail) in
        {241}let v_80: bool = (not-caught-fail(v_79) && success?(1-proj-3-tuple(v_79))) in
        {242}let h_11: bitstring = (if v_80 then 3-proj-3-tuple(v_79) else caught-fail) in
        {243}let ck_12: key = (if v_80 then 2-proj-3-tuple(v_79) else caught-fail) in
        {244}let cs_11: cipherstate = (if v_80 then 1-proj-3-tuple(v_79) else caught-fail) in
        {247}let output3_1: key = (if v_80 then hmac_hash3(ck_12,input_key_material_1) else caught-fail) in
        {246}let output2_1: key = (if v_80 then hmac_hash2(ck_12,input_key_material_1) else caught-fail) in
        {245}let output1_1: key = (if v_80 then hmac_hash1(ck_12,input_key_material_1) else caught-fail) in
        {248}let v_81: bitstring = (if v_80 then catch-fail((output1_1,output2_1,output3_1)) else caught-fail) in
        {249}let v_82: bool = (not-caught-fail(v_81) && success?(1-proj-3-tuple(v_81))) in
        {250}let output: key = (if v_82 then 3-proj-3-tuple(v_81) else caught-fail) in
        {251}let temp_k_1: key = (if v_82 then 2-proj-3-tuple(v_81) else caught-fail) in
        {252}let ck_13: key = (if v_82 then 1-proj-3-tuple(v_81) else caught-fail) in
        {253}let ss_13: symmetricstate = (if v_75 then catch-fail((if v_78 then (if v_80 then (if v_82 then symmetricstatepack(cipherstatepack(temp_k_1,minnonce),ck_13,h_11) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {254}let v_83: bool = not-caught-fail(ss_13) in
        {255}let v_84: bitstring = (if v_83 then catch-fail(keypairunpack(e_4)) else caught-fail) in
        {256}let v_85: bool = (not-caught-fail(v_84) && success?(1-proj-2-tuple(v_84))) in
        {257}let my_private_key_2: key = (if v_85 then 2-proj-2-tuple(v_84) else caught-fail) in
        {258}let my_public_key_2: key = (if v_85 then 1-proj-2-tuple(v_84) else caught-fail) in
        {233}let rm_3: key = (if v_75 then ne_4 else caught-fail) in
        {259}let input_key_material_2: key = (if v_83 then catch-fail((if v_85 then dhexp(my_private_key_2,rm_3) else fail-any)) else caught-fail) in
        {260}let v_86: bool = not-caught-fail(input_key_material_2) in
        {261}let v_87: bitstring = (if v_86 then catch-fail(symmetricstateunpack(ss_13)) else caught-fail) in
        {262}let v_88: bool = (not-caught-fail(v_87) && success?(1-proj-3-tuple(v_87))) in
        {263}let h_12: bitstring = (if v_88 then 3-proj-3-tuple(v_87) else caught-fail) in
        {264}let ck_14: key = (if v_88 then 2-proj-3-tuple(v_87) else caught-fail) in
        {265}let cs_12: cipherstate = (if v_88 then 1-proj-3-tuple(v_87) else caught-fail) in
        {268}let output3_2: key = (if v_88 then hmac_hash3(ck_14,input_key_material_2) else caught-fail) in
        {267}let output2_2: key = (if v_88 then hmac_hash2(ck_14,input_key_material_2) else caught-fail) in
        {266}let output1_2: key = (if v_88 then hmac_hash1(ck_14,input_key_material_2) else caught-fail) in
        {269}let v_89: bitstring = (if v_88 then catch-fail((output1_2,output2_2,output3_2)) else caught-fail) in
        {270}let v_90: bool = (not-caught-fail(v_89) && success?(1-proj-3-tuple(v_89))) in
        {271}let output_1: key = (if v_90 then 3-proj-3-tuple(v_89) else caught-fail) in
        {272}let temp_k_2: key = (if v_90 then 2-proj-3-tuple(v_89) else caught-fail) in
        {273}let ck_15: key = (if v_90 then 1-proj-3-tuple(v_89) else caught-fail) in
        {274}let ss_14: symmetricstate = (if v_83 then catch-fail((if v_86 then (if v_88 then (if v_90 then symmetricstatepack(cipherstatepack(temp_k_2,minnonce),ck_15,h_12) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {275}let v_91: bool = not-caught-fail(ss_14) in
        {276}let v_92: bitstring = (if v_91 then catch-fail(symmetricstateunpack(ss_14)) else caught-fail) in
        {277}let v_93: bool = (not-caught-fail(v_92) && success?(1-proj-3-tuple(v_92))) in
        {278}let h_13: bitstring = (if v_93 then 3-proj-3-tuple(v_92) else caught-fail) in
        {279}let ck_16: key = (if v_93 then 2-proj-3-tuple(v_92) else caught-fail) in
        {280}let cs_13: cipherstate = (if v_93 then 1-proj-3-tuple(v_92) else caught-fail) in
        {281}let v_94: bitstring = (if v_93 then catch-fail(cipherstateunpack(cs_13)) else caught-fail) in
        {282}let v_95: bool = (not-caught-fail(v_94) && success?(1-proj-2-tuple(v_94))) in
        {283}let n_6: nonce = (if v_95 then 2-proj-2-tuple(v_94) else caught-fail) in
        {284}let k_7: key = (if v_95 then 1-proj-2-tuple(v_94) else caught-fail) in
        {285}let d_2: aead = (if v_95 then catch-fail(decrypt(k_7,n_6,h_13,ciphertext_3)) else caught-fail) in
        {286}let v_96: bool = not-caught-fail(d_2) in
        {287}let v_97: bitstring = (if v_96 then catch-fail(aeadunpack(d_2)) else caught-fail) in
        {288}let v_98: bool = (not-caught-fail(v_97) && success?(1-proj-3-tuple(v_97))) in
        {289}let plaintext_4: bitstring = (if v_98 then 3-proj-3-tuple(v_97) else caught-fail) in
        {290}let adi_2: bitstring = (if v_98 then 2-proj-3-tuple(v_97) else caught-fail) in
        {291}let valid_4: bool = (if v_98 then 1-proj-3-tuple(v_97) else caught-fail) in
        {293}let v_99: bitstring = (if v_98 then catch-fail(cipherstateunpack(cs_13)) else caught-fail) in
        {294}let v_100: bool = (not-caught-fail(v_99) && success?(1-proj-2-tuple(v_99))) in
        {295}let o_3: nonce = (if v_100 then 2-proj-2-tuple(v_99) else caught-fail) in
        {296}let k_8: key = (if v_100 then 1-proj-2-tuple(v_99) else caught-fail) in
        {292}let n_7: nonce = (if v_98 then increment_nonce(n_6) else caught-fail) in
        {297}let csi_6: cipherstate = (if v_98 then catch-fail((if v_100 then cipherstatepack(k_8,n_7) else fail-any)) else caught-fail) in
        {298}let v_101: bool = not-caught-fail(csi_6) in
        {299}let v_102: bitstring = (if v_93 then catch-fail((if v_95 then (if v_96 then (if v_98 then (if v_101 then (csi_6,plaintext_4,valid_4) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {300}let v_103: bool = (not-caught-fail(v_102) && success?(1-proj-3-tuple(v_102))) in
        {301}let valid_5: bool = (if v_103 then 3-proj-3-tuple(v_102) else caught-fail) in
        {302}let plaintext_5: bitstring = (if v_103 then 2-proj-3-tuple(v_102) else caught-fail) in
        {303}let csi_7: cipherstate = (if v_103 then 1-proj-3-tuple(v_102) else caught-fail) in
        {304}let ss_15: symmetricstate = (if v_103 then symmetricstatepack(csi_7,ck_16,h_13) else caught-fail) in
        {305}let v_104: bitstring = (if v_103 then catch-fail(symmetricstateunpack(ss_15)) else caught-fail) in
        {306}let v_105: bool = (not-caught-fail(v_104) && success?(1-proj-3-tuple(v_104))) in
        {307}let h_14: bitstring = (if v_105 then 3-proj-3-tuple(v_104) else caught-fail) in
        {308}let ck_17: key = (if v_105 then 2-proj-3-tuple(v_104) else caught-fail) in
        {309}let cs_14: cipherstate = (if v_105 then 1-proj-3-tuple(v_104) else caught-fail) in
        {310}let ssi_3: symmetricstate = (if v_103 then catch-fail((if v_105 then symmetricstatepack(cs_14,ck_17,hash(h_14,ciphertext_3)) else fail-any)) else caught-fail) in
        {311}let v_106: bool = not-caught-fail(ssi_3) in
        {312}let v_107: bitstring = (if v_91 then catch-fail((if v_93 then (if v_103 then (if v_106 then (ssi_3,plaintext_5,valid_5) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {313}let v_108: bool = (not-caught-fail(v_107) && success?(1-proj-3-tuple(v_107))) in
        {314}let valid3: bool = (if v_108 then 3-proj-3-tuple(v_107) else caught-fail) in
        {315}let plaintext_6: bitstring = (if v_108 then 2-proj-3-tuple(v_107) else caught-fail) in
        {316}let ss_16: symmetricstate = (if v_108 then 1-proj-3-tuple(v_107) else caught-fail) in
        {320}let basis_2: key = (if v_108 then key_m(them) else caught-fail) in
        {321}let public_key_2: key = (if v_108 then catch-fail(dhexp(basis_2,validkey(g))) else caught-fail) in
        {322}let v_110: bool = not-caught-fail(public_key_2) in
        {317}let basis_1: key = (if v_108 then key_s(them) else caught-fail) in
        {318}let public_key_1: key = (if v_108 then catch-fail(dhexp(basis_1,validkey(g))) else caught-fail) in
        {319}let v_109: bool = not-caught-fail(public_key_1) in
        {323}let v_111: bool = (if v_108 then catch-fail(((valid1_1 && (valid2_1 && valid3)) && ((rs_3 = getpublickey((if v_109 then keypairpack(validkey(public_key_1),basis_1) else fail-any))) && (rm_3 = getpublickey((if v_110 then keypairpack(validkey(public_key_2),basis_2) else fail-any)))))) else caught-fail) in
        {325}let v_112: bitstring = (if v_111 then catch-fail(symmetricstateunpack(ss_16)) else caught-fail) in
        {326}let v_113: bool = (not-caught-fail(v_112) && success?(1-proj-3-tuple(v_112))) in
        {327}let h_15: bitstring = (if v_113 then 3-proj-3-tuple(v_112) else caught-fail) in
        {328}let ck_18: key = (if v_113 then 2-proj-3-tuple(v_112) else caught-fail) in
        {329}let cs_15: cipherstate = (if v_113 then 1-proj-3-tuple(v_112) else caught-fail) in
        {330}let input_key_material_3: key = (if v_113 then zero else caught-fail) in
        {333}let output3_3: key = (if v_113 then hmac_hash3(ck_18,input_key_material_3) else caught-fail) in
        {332}let output2_3: key = (if v_113 then hmac_hash2(ck_18,input_key_material_3) else caught-fail) in
        {331}let output1_3: key = (if v_113 then hmac_hash1(ck_18,input_key_material_3) else caught-fail) in
        {334}let v_114: bitstring = (if v_113 then catch-fail((output1_3,output2_3,output3_3)) else caught-fail) in
        {335}let v_115: bool = (not-caught-fail(v_114) && success?(1-proj-3-tuple(v_114))) in
        {336}let temp_k3: key = (if v_115 then 3-proj-3-tuple(v_114) else caught-fail) in
        {337}let temp_k2: key = (if v_115 then 2-proj-3-tuple(v_114) else caught-fail) in
        {338}let temp_k1: key = (if v_115 then 1-proj-3-tuple(v_114) else caught-fail) in
        {340}let cs2: cipherstate = (if v_115 then cipherstatepack(temp_k2,minnonce) else caught-fail) in
        {339}let cs1: cipherstate = (if v_115 then cipherstatepack(temp_k1,minnonce) else caught-fail) in
        {341}let v_116: bitstring = (if v_111 then catch-fail((if v_113 then (if v_115 then (ss_16,cs1,cs2) else fail-any) else fail-any)) else caught-fail) in
        {342}let v_117: bool = (not-caught-fail(v_116) && success?(1-proj-3-tuple(v_116))) in
        {343}let cs2_1: cipherstate = (if v_117 then 3-proj-3-tuple(v_116) else caught-fail) in
        {344}let cs1_1: cipherstate = (if v_117 then 2-proj-3-tuple(v_116) else caught-fail) in
        {345}let ssi_4: symmetricstate = (if v_117 then 1-proj-3-tuple(v_116) else caught-fail) in
        {324}let hs_5: handshakestate = (if v_111 then handshakestatepack(ss_16,s_2,m_2,e_4,rs_3,rm_3,re_3,psk_2,initiator_2) else caught-fail) in
        {346}let (hs_6: handshakestate,plaintext_b: bitstring,valid_6: bool,cs1_2: cipherstate,cs2_2: cipherstate) = (if v_28 then (if v_30 then (if v_33 then (if v_41 then (if v_58 then (if v_75 then (if v_83 then (if v_91 then (if v_108 then (if undo-catch-fail(v_111) then (if v_117 then (hs_5,plaintext_6,true,cs1_1,cs2_1) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {347}event RecvMsg(me,them,stagepack_b(sid_1),plaintext_b);
        {348}insert statestore(me,them,sid_1,statepack_c(hs_6,cs1_2,cs2_2))
    ) | (
        {350}!
        {409}get statestore(=me,=them,=sid_1,statepack_c(hs_7: handshakestate,cs1_3: cipherstate,cs2_3: cipherstate)) in
        {351}let hs_8: handshakestate = handshakestatesetcs(hs_7,cs1_3) in
        {353}let v_118: bitstring = catch-fail(handshakestateunpack(hs_8)) in
        {354}let v_119: bool = (not-caught-fail(v_118) && success?(1-proj-9-tuple(v_118))) in
        {355}let initiator_3: bool = (if v_119 then 9-proj-9-tuple(v_118) else caught-fail) in
        {356}let psk_3: key = (if v_119 then 8-proj-9-tuple(v_118) else caught-fail) in
        {357}let re_4: key = (if v_119 then 7-proj-9-tuple(v_118) else caught-fail) in
        {358}let rm_4: key = (if v_119 then 6-proj-9-tuple(v_118) else caught-fail) in
        {359}let rs_4: key = (if v_119 then 5-proj-9-tuple(v_118) else caught-fail) in
        {360}let e_5: keypair = (if v_119 then 4-proj-9-tuple(v_118) else caught-fail) in
        {361}let m_3: keypair = (if v_119 then 3-proj-9-tuple(v_118) else caught-fail) in
        {362}let s_3: keypair = (if v_119 then 2-proj-9-tuple(v_118) else caught-fail) in
        {363}let ss_17: symmetricstate = (if v_119 then 1-proj-9-tuple(v_118) else caught-fail) in
        {364}let v_120: bitstring = (if v_119 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {365}let v_121: bool = (not-caught-fail(v_120) && success?(1-proj-4-tuple(v_120))) in
        {366}let ciphertext_4: bitstring = (if v_121 then 4-proj-4-tuple(v_120) else caught-fail) in
        {367}let nm_1: bitstring = (if v_121 then 3-proj-4-tuple(v_120) else caught-fail) in
        {368}let ns_2: bitstring = (if v_121 then 2-proj-4-tuple(v_120) else caught-fail) in
        {369}let ne_5: bitstring = (if v_121 then 1-proj-4-tuple(v_120) else caught-fail) in
        {370}let v_122: bitstring = (if v_121 then catch-fail(symmetricstateunpack(ss_17)) else caught-fail) in
        {371}let v_123: bool = (not-caught-fail(v_122) && success?(1-proj-3-tuple(v_122))) in
        {372}let h_16: bitstring = (if v_123 then 3-proj-3-tuple(v_122) else caught-fail) in
        {373}let ck_19: key = (if v_123 then 2-proj-3-tuple(v_122) else caught-fail) in
        {374}let cs_16: cipherstate = (if v_123 then 1-proj-3-tuple(v_122) else caught-fail) in
        {375}let v_124: bitstring = (if v_123 then catch-fail(cipherstateunpack(cs_16)) else caught-fail) in
        {376}let v_125: bool = (not-caught-fail(v_124) && success?(1-proj-2-tuple(v_124))) in
        {377}let n_8: nonce = (if v_125 then 2-proj-2-tuple(v_124) else caught-fail) in
        {378}let k_9: key = (if v_125 then 1-proj-2-tuple(v_124) else caught-fail) in
        {381}let v_126: bitstring = (if v_125 then catch-fail(cipherstateunpack(cs_16)) else caught-fail) in
        {382}let v_127: bool = (not-caught-fail(v_126) && success?(1-proj-2-tuple(v_126))) in
        {383}let o_4: nonce = (if v_127 then 2-proj-2-tuple(v_126) else caught-fail) in
        {384}let k_10: key = (if v_127 then 1-proj-2-tuple(v_126) else caught-fail) in
        {380}let n_9: nonce = (if v_125 then increment_nonce(n_8) else caught-fail) in
        {385}let csi_8: cipherstate = (if v_125 then catch-fail((if v_127 then cipherstatepack(k_10,n_9) else fail-any)) else caught-fail) in
        {386}let v_128: bool = not-caught-fail(csi_8) in
        {352}let payload_1: bitstring = msg_c(me,them,sid_1) in
        {379}let e_6: bitstring = (if v_125 then encrypt(k_9,n_8,h_16,payload_1) else caught-fail) in
        {387}let v_129: bitstring = (if v_123 then catch-fail((if v_125 then (if v_128 then (csi_8,e_6) else fail-any) else fail-any)) else caught-fail) in
        {388}let v_130: bool = (not-caught-fail(v_129) && success?(1-proj-2-tuple(v_129))) in
        {389}let ciphertext_5: bitstring = (if v_130 then 2-proj-2-tuple(v_129) else caught-fail) in
        {390}let csi_9: cipherstate = (if v_130 then 1-proj-2-tuple(v_129) else caught-fail) in
        {391}let ss_18: symmetricstate = (if v_130 then symmetricstatepack(csi_9,ck_19,h_16) else caught-fail) in
        {392}let v_131: bitstring = (if v_130 then catch-fail(symmetricstateunpack(ss_18)) else caught-fail) in
        {393}let v_132: bool = (not-caught-fail(v_131) && success?(1-proj-3-tuple(v_131))) in
        {394}let h_17: bitstring = (if v_132 then 3-proj-3-tuple(v_131) else caught-fail) in
        {395}let ck_20: key = (if v_132 then 2-proj-3-tuple(v_131) else caught-fail) in
        {396}let cs_17: cipherstate = (if v_132 then 1-proj-3-tuple(v_131) else caught-fail) in
        {397}let ssi_5: symmetricstate = (if v_130 then catch-fail((if v_132 then symmetricstatepack(cs_17,ck_20,hash(h_17,ciphertext_5)) else fail-any)) else caught-fail) in
        {398}let v_133: bool = not-caught-fail(ssi_5) in
        {399}let v_134: bitstring = (if v_121 then catch-fail((if v_123 then (if v_130 then (if v_133 then (ssi_5,ciphertext_5) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {400}let v_135: bool = (not-caught-fail(v_134) && success?(1-proj-2-tuple(v_134))) in
        {401}let ciphertext_6: bitstring = (if v_135 then 2-proj-2-tuple(v_134) else caught-fail) in
        {402}let ss_19: symmetricstate = (if v_135 then 1-proj-2-tuple(v_134) else caught-fail) in
        {404}let message_buffer_1: bitstring = (if v_135 then concat3(ne_5,ns_2,ciphertext_6) else caught-fail) in
        {403}let hs_9: handshakestate = (if v_135 then handshakestatepack(ss_19,s_3,m_3,e_5,rs_4,rm_4,re_4,psk_3,initiator_3) else caught-fail) in
        {405}let (hs_10: handshakestate,message_c: bitstring) = (if v_119 then (if v_121 then (if v_135 then (hs_9,message_buffer_1) else fail-any) else fail-any) else fail-any) in
        {406}event SendMsg(me,them,stagepack_c(sid_1),msg_c(me,them,sid_1));
        {407}insert statestore(me,them,sid_1,statepack_d(hs_10,handshakestategetcs(hs_10),cs2_3));
        {408}out(pub, message_c)
    ) | (
        {410}!
        {476}get statestore(=me,=them,=sid_1,statepack_d(hs_11: handshakestate,cs1_4: cipherstate,cs2_4: cipherstate)) in
        {411}let hs_12: handshakestate = handshakestatesetcs(hs_11,cs2_4) in
        {412}in(pub, message_d: bitstring);
        {413}let v_136: bitstring = catch-fail(handshakestateunpack(hs_12)) in
        {414}let v_137: bool = (not-caught-fail(v_136) && success?(1-proj-9-tuple(v_136))) in
        {415}let initiator_4: bool = (if v_137 then 9-proj-9-tuple(v_136) else caught-fail) in
        {416}let psk_4: key = (if v_137 then 8-proj-9-tuple(v_136) else caught-fail) in
        {417}let re_5: key = (if v_137 then 7-proj-9-tuple(v_136) else caught-fail) in
        {418}let rm_5: key = (if v_137 then 6-proj-9-tuple(v_136) else caught-fail) in
        {419}let rs_5: key = (if v_137 then 5-proj-9-tuple(v_136) else caught-fail) in
        {420}let e_7: keypair = (if v_137 then 4-proj-9-tuple(v_136) else caught-fail) in
        {421}let m_4: keypair = (if v_137 then 3-proj-9-tuple(v_136) else caught-fail) in
        {422}let s_4: keypair = (if v_137 then 2-proj-9-tuple(v_136) else caught-fail) in
        {423}let ss_20: symmetricstate = (if v_137 then 1-proj-9-tuple(v_136) else caught-fail) in
        {424}let v_138: bitstring = (if v_137 then catch-fail(deconcat3(message_d)) else caught-fail) in
        {425}let v_139: bool = (not-caught-fail(v_138) && success?(1-proj-3-tuple(v_138))) in
        {426}let ciphertext_7: bitstring = (if v_139 then 3-proj-3-tuple(v_138) else caught-fail) in
        {427}let ns_3: bitstring = (if v_139 then 2-proj-3-tuple(v_138) else caught-fail) in
        {428}let ne_6: bitstring = (if v_139 then 1-proj-3-tuple(v_138) else caught-fail) in
        {430}let v_140: bitstring = (if v_139 then catch-fail(symmetricstateunpack(ss_20)) else caught-fail) in
        {431}let v_141: bool = (not-caught-fail(v_140) && success?(1-proj-3-tuple(v_140))) in
        {432}let h_18: bitstring = (if v_141 then 3-proj-3-tuple(v_140) else caught-fail) in
        {433}let ck_21: key = (if v_141 then 2-proj-3-tuple(v_140) else caught-fail) in
        {434}let cs_18: cipherstate = (if v_141 then 1-proj-3-tuple(v_140) else caught-fail) in
        {435}let v_142: bitstring = (if v_141 then catch-fail(cipherstateunpack(cs_18)) else caught-fail) in
        {436}let v_143: bool = (not-caught-fail(v_142) && success?(1-proj-2-tuple(v_142))) in
        {437}let n_10: nonce = (if v_143 then 2-proj-2-tuple(v_142) else caught-fail) in
        {438}let k_11: key = (if v_143 then 1-proj-2-tuple(v_142) else caught-fail) in
        {439}let d_3: aead = (if v_143 then catch-fail(decrypt(k_11,n_10,h_18,ciphertext_7)) else caught-fail) in
        {440}let v_144: bool = not-caught-fail(d_3) in
        {441}let v_145: bitstring = (if v_144 then catch-fail(aeadunpack(d_3)) else caught-fail) in
        {442}let v_146: bool = (not-caught-fail(v_145) && success?(1-proj-3-tuple(v_145))) in
        {443}let plaintext_7: bitstring = (if v_146 then 3-proj-3-tuple(v_145) else caught-fail) in
        {444}let adi_3: bitstring = (if v_146 then 2-proj-3-tuple(v_145) else caught-fail) in
        {445}let valid_7: bool = (if v_146 then 1-proj-3-tuple(v_145) else caught-fail) in
        {447}let v_147: bitstring = (if v_146 then catch-fail(cipherstateunpack(cs_18)) else caught-fail) in
        {448}let v_148: bool = (not-caught-fail(v_147) && success?(1-proj-2-tuple(v_147))) in
        {449}let o_5: nonce = (if v_148 then 2-proj-2-tuple(v_147) else caught-fail) in
        {450}let k_12: key = (if v_148 then 1-proj-2-tuple(v_147) else caught-fail) in
        {446}let n_11: nonce = (if v_146 then increment_nonce(n_10) else caught-fail) in
        {451}let csi_10: cipherstate = (if v_146 then catch-fail((if v_148 then cipherstatepack(k_12,n_11) else fail-any)) else caught-fail) in
        {452}let v_149: bool = not-caught-fail(csi_10) in
        {453}let v_150: bitstring = (if v_141 then catch-fail((if v_143 then (if v_144 then (if v_146 then (if v_149 then (csi_10,plaintext_7,valid_7) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {454}let v_151: bool = (not-caught-fail(v_150) && success?(1-proj-3-tuple(v_150))) in
        {455}let valid_8: bool = (if v_151 then 3-proj-3-tuple(v_150) else caught-fail) in
        {456}let plaintext_8: bitstring = (if v_151 then 2-proj-3-tuple(v_150) else caught-fail) in
        {457}let csi_11: cipherstate = (if v_151 then 1-proj-3-tuple(v_150) else caught-fail) in
        {458}let ss_21: symmetricstate = (if v_151 then symmetricstatepack(csi_11,ck_21,h_18) else caught-fail) in
        {459}let v_152: bitstring = (if v_151 then catch-fail(symmetricstateunpack(ss_21)) else caught-fail) in
        {460}let v_153: bool = (not-caught-fail(v_152) && success?(1-proj-3-tuple(v_152))) in
        {461}let h_19: bitstring = (if v_153 then 3-proj-3-tuple(v_152) else caught-fail) in
        {462}let ck_22: key = (if v_153 then 2-proj-3-tuple(v_152) else caught-fail) in
        {463}let cs_19: cipherstate = (if v_153 then 1-proj-3-tuple(v_152) else caught-fail) in
        {464}let ssi_6: symmetricstate = (if v_151 then catch-fail((if v_153 then symmetricstatepack(cs_19,ck_22,hash(h_19,ciphertext_7)) else fail-any)) else caught-fail) in
        {465}let v_154: bool = not-caught-fail(ssi_6) in
        {466}let v_155: bitstring = (if v_139 then catch-fail((if v_141 then (if v_151 then (if v_154 then (ssi_6,plaintext_8,valid_8) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {467}let v_156: bool = (not-caught-fail(v_155) && success?(1-proj-3-tuple(v_155))) in
        {468}let valid2_2: bool = (if v_156 then 3-proj-3-tuple(v_155) else caught-fail) in
        {469}let plaintext_9: bitstring = (if v_156 then 2-proj-3-tuple(v_155) else caught-fail) in
        {470}let ss_22: symmetricstate = (if v_156 then 1-proj-3-tuple(v_155) else caught-fail) in
        {429}let valid1_2: bool = (if v_139 then true else caught-fail) in
        {471}let v_157: bool = (if v_156 then catch-fail((valid1_2 && valid2_2)) else caught-fail) in
        {472}let hs_13: handshakestate = (if v_157 then handshakestatepack(ss_22,s_4,m_4,e_7,rs_5,rm_5,re_5,psk_4,initiator_4) else caught-fail) in
        {473}let (hs_14: handshakestate,plaintext_d: bitstring,valid_9: bool) = (if v_137 then (if v_139 then (if v_156 then (if undo-catch-fail(v_157) then (hs_13,plaintext_9,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {474}event RecvMsg(me,them,stagepack_d(sid_1),plaintext_d);
        {475}event RecvEnd(valid_9)
    ) | (
        0
    )
) | (
    {479}let sid_2: sessionid = sid in
    {478}let them_1: principal = charlie in
    {477}let me_1: principal = alice in
    (
        {491}let k_13: key = empty in
        {492}let cs_20: cipherstate = cipherstatepack(k_13,minnonce) in
        {488}let protocol_name_1: bitstring = somename in
        {489}let h_20: bitstring = hash(protocol_name_1,empty) in
        {490}let ck_23: key = h_20 in
        {493}let ss_23: symmetricstate = symmetricstatepack(cs_20,ck_23,h_20) in
        {494}let v_158: bitstring = catch-fail(symmetricstateunpack(ss_23)) in
        {495}let v_159: bool = (not-caught-fail(v_158) && success?(1-proj-3-tuple(v_158))) in
        {496}let h_21: bitstring = (if v_159 then 3-proj-3-tuple(v_158) else caught-fail) in
        {497}let ck_24: key = (if v_159 then 2-proj-3-tuple(v_158) else caught-fail) in
        {498}let cs_21: cipherstate = (if v_159 then 1-proj-3-tuple(v_158) else caught-fail) in
        {486}let prologue_1: bitstring = empty in
        {499}let ss_24: symmetricstate = catch-fail((if v_159 then symmetricstatepack(cs_21,ck_24,hash(h_21,prologue_1)) else fail-any)) in
        {500}let v_160: bool = not-caught-fail(ss_24) in
        {487}let psk_5: key = empty in
        {485}let re_6: key = empty in
        {484}let rm_6: key = empty in
        {483}let rs_6: key = empty in
        {482}let e_8: keypair = keypairpack(empty,empty) in
        {481}let m_5: keypair = keypairpack(empty,empty) in
        {480}let s_5: keypair = keypairpack(empty,empty) in
        {501}let hs_15: handshakestate = (if v_160 then handshakestatepack(ss_24,s_5,m_5,e_8,rs_6,rm_6,re_6,psk_5,true) else fail-any) in
        {502}insert statestore(me_1,them_1,sid_2,statepack_a(hs_15))
    ) | (
        {573}get statestore(=me_1,=them_1,=sid_2,statepack_a(hs_16: handshakestate)) in
        {504}let v_161: bitstring = catch-fail(handshakestateunpack(hs_16)) in
        {505}let v_162: bool = (not-caught-fail(v_161) && success?(1-proj-9-tuple(v_161))) in
        {506}let initiator_5: bool = (if v_162 then 9-proj-9-tuple(v_161) else caught-fail) in
        {507}let psk_6: key = (if v_162 then 8-proj-9-tuple(v_161) else caught-fail) in
        {508}let re_7: key = (if v_162 then 7-proj-9-tuple(v_161) else caught-fail) in
        {509}let rm_7: key = (if v_162 then 6-proj-9-tuple(v_161) else caught-fail) in
        {510}let rs_7: key = (if v_162 then 5-proj-9-tuple(v_161) else caught-fail) in
        {511}let e_9: keypair = (if v_162 then 4-proj-9-tuple(v_161) else caught-fail) in
        {512}let m_6: keypair = (if v_162 then 3-proj-9-tuple(v_161) else caught-fail) in
        {513}let s_6: keypair = (if v_162 then 2-proj-9-tuple(v_161) else caught-fail) in
        {514}let ss_25: symmetricstate = (if v_162 then 1-proj-9-tuple(v_161) else caught-fail) in
        {515}let v_163: bitstring = (if v_162 then catch-fail((empty,empty,empty)) else caught-fail) in
        {516}let v_164: bool = (not-caught-fail(v_163) && success?(1-proj-3-tuple(v_163))) in
        {517}let ciphertext_8: bitstring = (if v_164 then 3-proj-3-tuple(v_163) else caught-fail) in
        {518}let ns_4: bitstring = (if v_164 then 2-proj-3-tuple(v_163) else caught-fail) in
        {519}let ne_7: bitstring = (if v_164 then 1-proj-3-tuple(v_163) else caught-fail) in
        {520}let basis_3: key = (if v_164 then key_e(me_1,them_1,sid_2) else caught-fail) in
        {521}let public_key_3: key = (if v_164 then catch-fail(dhexp(basis_3,validkey(g))) else caught-fail) in
        {522}let v_165: bool = not-caught-fail(public_key_3) in
        {523}let e_10: keypair = (if v_164 then catch-fail((if v_165 then keypairpack(validkey(public_key_3),basis_3) else fail-any)) else caught-fail) in
        {524}let v_166: bool = not-caught-fail(e_10) in
        {525}let ne_8: bitstring = (if v_166 then catch-fail(getpublickey(e_10)) else caught-fail) in
        {526}let v_167: bool = not-caught-fail(ne_8) in
        {527}let v_168: bitstring = (if v_167 then catch-fail(symmetricstateunpack(ss_25)) else caught-fail) in
        {528}let v_169: bool = (not-caught-fail(v_168) && success?(1-proj-3-tuple(v_168))) in
        {529}let h_22: bitstring = (if v_169 then 3-proj-3-tuple(v_168) else caught-fail) in
        {530}let ck_25: key = (if v_169 then 2-proj-3-tuple(v_168) else caught-fail) in
        {531}let cs_22: cipherstate = (if v_169 then 1-proj-3-tuple(v_168) else caught-fail) in
        {532}let ss_26: symmetricstate = (if v_167 then catch-fail((if v_169 then symmetricstatepack(cs_22,ck_25,hash(h_22,ne_8)) else fail-any)) else caught-fail) in
        {533}let v_170: bool = not-caught-fail(ss_26) in
        {534}let v_171: bitstring = (if v_170 then catch-fail(symmetricstateunpack(ss_26)) else caught-fail) in
        {535}let v_172: bool = (not-caught-fail(v_171) && success?(1-proj-3-tuple(v_171))) in
        {536}let h_23: bitstring = (if v_172 then 3-proj-3-tuple(v_171) else caught-fail) in
        {537}let ck_26: key = (if v_172 then 2-proj-3-tuple(v_171) else caught-fail) in
        {538}let cs_23: cipherstate = (if v_172 then 1-proj-3-tuple(v_171) else caught-fail) in
        {539}let v_173: bitstring = (if v_172 then catch-fail(cipherstateunpack(cs_23)) else caught-fail) in
        {540}let v_174: bool = (not-caught-fail(v_173) && success?(1-proj-2-tuple(v_173))) in
        {541}let n_12: nonce = (if v_174 then 2-proj-2-tuple(v_173) else caught-fail) in
        {542}let k_14: key = (if v_174 then 1-proj-2-tuple(v_173) else caught-fail) in
        {545}let v_175: bitstring = (if v_174 then catch-fail(cipherstateunpack(cs_23)) else caught-fail) in
        {546}let v_176: bool = (not-caught-fail(v_175) && success?(1-proj-2-tuple(v_175))) in
        {547}let o_6: nonce = (if v_176 then 2-proj-2-tuple(v_175) else caught-fail) in
        {548}let k_15: key = (if v_176 then 1-proj-2-tuple(v_175) else caught-fail) in
        {544}let n_13: nonce = (if v_174 then increment_nonce(n_12) else caught-fail) in
        {549}let csi_12: cipherstate = (if v_174 then catch-fail((if v_176 then cipherstatepack(k_15,n_13) else fail-any)) else caught-fail) in
        {550}let v_177: bool = not-caught-fail(csi_12) in
        {503}let payload_2: bitstring = msg_a(me_1,them_1,sid_2) in
        {543}let e_11: bitstring = (if v_174 then encrypt(k_14,n_12,h_23,payload_2) else caught-fail) in
        {551}let v_178: bitstring = (if v_172 then catch-fail((if v_174 then (if v_177 then (csi_12,e_11) else fail-any) else fail-any)) else caught-fail) in
        {552}let v_179: bool = (not-caught-fail(v_178) && success?(1-proj-2-tuple(v_178))) in
        {553}let ciphertext_9: bitstring = (if v_179 then 2-proj-2-tuple(v_178) else caught-fail) in
        {554}let csi_13: cipherstate = (if v_179 then 1-proj-2-tuple(v_178) else caught-fail) in
        {555}let ss_27: symmetricstate = (if v_179 then symmetricstatepack(csi_13,ck_26,h_23) else caught-fail) in
        {556}let v_180: bitstring = (if v_179 then catch-fail(symmetricstateunpack(ss_27)) else caught-fail) in
        {557}let v_181: bool = (not-caught-fail(v_180) && success?(1-proj-3-tuple(v_180))) in
        {558}let h_24: bitstring = (if v_181 then 3-proj-3-tuple(v_180) else caught-fail) in
        {559}let ck_27: key = (if v_181 then 2-proj-3-tuple(v_180) else caught-fail) in
        {560}let cs_24: cipherstate = (if v_181 then 1-proj-3-tuple(v_180) else caught-fail) in
        {561}let ssi_7: symmetricstate = (if v_179 then catch-fail((if v_181 then symmetricstatepack(cs_24,ck_27,hash(h_24,ciphertext_9)) else fail-any)) else caught-fail) in
        {562}let v_182: bool = not-caught-fail(ssi_7) in
        {563}let v_183: bitstring = (if v_170 then catch-fail((if v_172 then (if v_179 then (if v_182 then (ssi_7,ciphertext_9) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {564}let v_184: bool = (not-caught-fail(v_183) && success?(1-proj-2-tuple(v_183))) in
        {565}let ciphertext_10: bitstring = (if v_184 then 2-proj-2-tuple(v_183) else caught-fail) in
        {566}let ss_28: symmetricstate = (if v_184 then 1-proj-2-tuple(v_183) else caught-fail) in
        {568}let message_buffer_2: bitstring = (if v_184 then concat3(ne_8,ns_4,ciphertext_10) else caught-fail) in
        {567}let hs_17: handshakestate = (if v_184 then handshakestatepack(ss_28,s_6,m_6,e_10,rs_7,rm_7,re_7,psk_6,initiator_5) else caught-fail) in
        {569}let (hs_18: handshakestate,message_a_1: bitstring) = (if v_162 then (if v_164 then (if v_166 then (if v_167 then (if v_170 then (if v_184 then (hs_17,message_buffer_2) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {570}event SendMsg(me_1,them_1,stagepack_a(sid_2),msg_a(me_1,them_1,sid_2));
        {571}insert statestore(me_1,them_1,sid_2,statepack_b(hs_18));
        {572}out(pub, message_a_1)
    ) | (
        {822}get statestore(=me_1,=them_1,=sid_2,statepack_b(hs_19: handshakestate)) in
        {574}in(pub, message_b_1: bitstring);
        {575}let v_185: bitstring = catch-fail(handshakestateunpack(hs_19)) in
        {576}let v_186: bool = (not-caught-fail(v_185) && success?(1-proj-9-tuple(v_185))) in
        {577}let initiator_6: bool = (if v_186 then 9-proj-9-tuple(v_185) else caught-fail) in
        {578}let psk_7: key = (if v_186 then 8-proj-9-tuple(v_185) else caught-fail) in
        {579}let re_8: key = (if v_186 then 7-proj-9-tuple(v_185) else caught-fail) in
        {580}let rm_8: key = (if v_186 then 6-proj-9-tuple(v_185) else caught-fail) in
        {581}let rs_8: key = (if v_186 then 5-proj-9-tuple(v_185) else caught-fail) in
        {582}let e_12: keypair = (if v_186 then 4-proj-9-tuple(v_185) else caught-fail) in
        {583}let m_7: keypair = (if v_186 then 3-proj-9-tuple(v_185) else caught-fail) in
        {584}let s_7: keypair = (if v_186 then 2-proj-9-tuple(v_185) else caught-fail) in
        {585}let ss_29: symmetricstate = (if v_186 then 1-proj-9-tuple(v_185) else caught-fail) in
        {586}let v_187: bitstring = (if v_186 then catch-fail(deconcat4(message_b_1)) else caught-fail) in
        {587}let v_188: bool = (not-caught-fail(v_187) && success?(1-proj-4-tuple(v_187))) in
        {588}let ciphertext_11: bitstring = (if v_188 then 4-proj-4-tuple(v_187) else caught-fail) in
        {589}let nm_2: bitstring = (if v_188 then 3-proj-4-tuple(v_187) else caught-fail) in
        {590}let ns_5: bitstring = (if v_188 then 2-proj-4-tuple(v_187) else caught-fail) in
        {591}let ne_9: bitstring = (if v_188 then 1-proj-4-tuple(v_187) else caught-fail) in
        {595}let v_189: bitstring = (if v_188 then catch-fail(symmetricstateunpack(ss_29)) else caught-fail) in
        {596}let v_190: bool = (not-caught-fail(v_189) && success?(1-proj-3-tuple(v_189))) in
        {597}let h_25: bitstring = (if v_190 then 3-proj-3-tuple(v_189) else caught-fail) in
        {598}let ck_28: key = (if v_190 then 2-proj-3-tuple(v_189) else caught-fail) in
        {599}let cs_25: cipherstate = (if v_190 then 1-proj-3-tuple(v_189) else caught-fail) in
        {594}let re_9: key = (if v_188 then ne_9 else caught-fail) in
        {600}let ss_30: symmetricstate = (if v_188 then catch-fail((if v_190 then symmetricstatepack(cs_25,ck_28,hash(h_25,re_9)) else fail-any)) else caught-fail) in
        {601}let v_191: bool = not-caught-fail(ss_30) in
        {602}let v_192: bitstring = (if v_191 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {603}let v_193: bool = (not-caught-fail(v_192) && success?(1-proj-2-tuple(v_192))) in
        {604}let my_private_key_3: key = (if v_193 then 2-proj-2-tuple(v_192) else caught-fail) in
        {605}let my_public_key_3: key = (if v_193 then 1-proj-2-tuple(v_192) else caught-fail) in
        {606}let input_key_material_4: key = (if v_191 then catch-fail((if v_193 then dhexp(my_private_key_3,re_9) else fail-any)) else caught-fail) in
        {607}let v_194: bool = not-caught-fail(input_key_material_4) in
        {608}let v_195: bitstring = (if v_194 then catch-fail(symmetricstateunpack(ss_30)) else caught-fail) in
        {609}let v_196: bool = (not-caught-fail(v_195) && success?(1-proj-3-tuple(v_195))) in
        {610}let h_26: bitstring = (if v_196 then 3-proj-3-tuple(v_195) else caught-fail) in
        {611}let ck_29: key = (if v_196 then 2-proj-3-tuple(v_195) else caught-fail) in
        {612}let cs_26: cipherstate = (if v_196 then 1-proj-3-tuple(v_195) else caught-fail) in
        {615}let output3_4: key = (if v_196 then hmac_hash3(ck_29,input_key_material_4) else caught-fail) in
        {614}let output2_4: key = (if v_196 then hmac_hash2(ck_29,input_key_material_4) else caught-fail) in
        {613}let output1_4: key = (if v_196 then hmac_hash1(ck_29,input_key_material_4) else caught-fail) in
        {616}let v_197: bitstring = (if v_196 then catch-fail((output1_4,output2_4,output3_4)) else caught-fail) in
        {617}let v_198: bool = (not-caught-fail(v_197) && success?(1-proj-3-tuple(v_197))) in
        {618}let output_2: key = (if v_198 then 3-proj-3-tuple(v_197) else caught-fail) in
        {619}let temp_k_3: key = (if v_198 then 2-proj-3-tuple(v_197) else caught-fail) in
        {620}let ck_30: key = (if v_198 then 1-proj-3-tuple(v_197) else caught-fail) in
        {621}let ss_31: symmetricstate = (if v_191 then catch-fail((if v_194 then (if v_196 then (if v_198 then symmetricstatepack(cipherstatepack(temp_k_3,minnonce),ck_30,h_26) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {622}let v_199: bool = not-caught-fail(ss_31) in
        {623}let v_200: bitstring = (if v_199 then catch-fail(symmetricstateunpack(ss_31)) else caught-fail) in
        {624}let v_201: bool = (not-caught-fail(v_200) && success?(1-proj-3-tuple(v_200))) in
        {625}let h_27: bitstring = (if v_201 then 3-proj-3-tuple(v_200) else caught-fail) in
        {626}let ck_31: key = (if v_201 then 2-proj-3-tuple(v_200) else caught-fail) in
        {627}let cs_27: cipherstate = (if v_201 then 1-proj-3-tuple(v_200) else caught-fail) in
        {628}let v_202: bitstring = (if v_201 then catch-fail(cipherstateunpack(cs_27)) else caught-fail) in
        {629}let v_203: bool = (not-caught-fail(v_202) && success?(1-proj-2-tuple(v_202))) in
        {630}let n_14: nonce = (if v_203 then 2-proj-2-tuple(v_202) else caught-fail) in
        {631}let k_16: key = (if v_203 then 1-proj-2-tuple(v_202) else caught-fail) in
        {632}let d_4: aead = (if v_203 then catch-fail(decrypt(k_16,n_14,h_27,ns_5)) else caught-fail) in
        {633}let v_204: bool = not-caught-fail(d_4) in
        {634}let v_205: bitstring = (if v_204 then catch-fail(aeadunpack(d_4)) else caught-fail) in
        {635}let v_206: bool = (not-caught-fail(v_205) && success?(1-proj-3-tuple(v_205))) in
        {636}let plaintext_10: bitstring = (if v_206 then 3-proj-3-tuple(v_205) else caught-fail) in
        {637}let adi_4: bitstring = (if v_206 then 2-proj-3-tuple(v_205) else caught-fail) in
        {638}let valid_10: bool = (if v_206 then 1-proj-3-tuple(v_205) else caught-fail) in
        {640}let v_207: bitstring = (if v_206 then catch-fail(cipherstateunpack(cs_27)) else caught-fail) in
        {641}let v_208: bool = (not-caught-fail(v_207) && success?(1-proj-2-tuple(v_207))) in
        {642}let o_7: nonce = (if v_208 then 2-proj-2-tuple(v_207) else caught-fail) in
        {643}let k_17: key = (if v_208 then 1-proj-2-tuple(v_207) else caught-fail) in
        {639}let n_15: nonce = (if v_206 then increment_nonce(n_14) else caught-fail) in
        {644}let csi_14: cipherstate = (if v_206 then catch-fail((if v_208 then cipherstatepack(k_17,n_15) else fail-any)) else caught-fail) in
        {645}let v_209: bool = not-caught-fail(csi_14) in
        {646}let v_210: bitstring = (if v_201 then catch-fail((if v_203 then (if v_204 then (if v_206 then (if v_209 then (csi_14,plaintext_10,valid_10) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {647}let v_211: bool = (not-caught-fail(v_210) && success?(1-proj-3-tuple(v_210))) in
        {648}let valid_11: bool = (if v_211 then 3-proj-3-tuple(v_210) else caught-fail) in
        {649}let plaintext_11: bitstring = (if v_211 then 2-proj-3-tuple(v_210) else caught-fail) in
        {650}let csi_15: cipherstate = (if v_211 then 1-proj-3-tuple(v_210) else caught-fail) in
        {651}let ss_32: symmetricstate = (if v_211 then symmetricstatepack(csi_15,ck_31,h_27) else caught-fail) in
        {652}let v_212: bitstring = (if v_211 then catch-fail(symmetricstateunpack(ss_32)) else caught-fail) in
        {653}let v_213: bool = (not-caught-fail(v_212) && success?(1-proj-3-tuple(v_212))) in
        {654}let h_28: bitstring = (if v_213 then 3-proj-3-tuple(v_212) else caught-fail) in
        {655}let ck_32: key = (if v_213 then 2-proj-3-tuple(v_212) else caught-fail) in
        {656}let cs_28: cipherstate = (if v_213 then 1-proj-3-tuple(v_212) else caught-fail) in
        {657}let ssi_8: symmetricstate = (if v_211 then catch-fail((if v_213 then symmetricstatepack(cs_28,ck_32,hash(h_28,ns_5)) else fail-any)) else caught-fail) in
        {658}let v_214: bool = not-caught-fail(ssi_8) in
        {659}let v_215: bitstring = (if v_199 then catch-fail((if v_201 then (if v_211 then (if v_214 then (ssi_8,plaintext_11,valid_11) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {660}let v_216: bool = (not-caught-fail(v_215) && success?(1-proj-3-tuple(v_215))) in
        {661}let valid1_4: bool = (if v_216 then 3-proj-3-tuple(v_215) else caught-fail) in
        {662}let ne_10: bitstring = (if v_216 then 2-proj-3-tuple(v_215) else caught-fail) in
        {663}let ss_33: symmetricstate = (if v_216 then 1-proj-3-tuple(v_215) else caught-fail) in
        {665}let v_217: bitstring = (if v_216 then catch-fail(symmetricstateunpack(ss_33)) else caught-fail) in
        {666}let v_218: bool = (not-caught-fail(v_217) && success?(1-proj-3-tuple(v_217))) in
        {667}let h_29: bitstring = (if v_218 then 3-proj-3-tuple(v_217) else caught-fail) in
        {668}let ck_33: key = (if v_218 then 2-proj-3-tuple(v_217) else caught-fail) in
        {669}let cs_29: cipherstate = (if v_218 then 1-proj-3-tuple(v_217) else caught-fail) in
        {670}let v_219: bitstring = (if v_218 then catch-fail(cipherstateunpack(cs_29)) else caught-fail) in
        {671}let v_220: bool = (not-caught-fail(v_219) && success?(1-proj-2-tuple(v_219))) in
        {672}let n_16: nonce = (if v_220 then 2-proj-2-tuple(v_219) else caught-fail) in
        {673}let k_18: key = (if v_220 then 1-proj-2-tuple(v_219) else caught-fail) in
        {674}let d_5: aead = (if v_220 then catch-fail(decrypt(k_18,n_16,h_29,nm_2)) else caught-fail) in
        {675}let v_221: bool = not-caught-fail(d_5) in
        {676}let v_222: bitstring = (if v_221 then catch-fail(aeadunpack(d_5)) else caught-fail) in
        {677}let v_223: bool = (not-caught-fail(v_222) && success?(1-proj-3-tuple(v_222))) in
        {678}let plaintext_12: bitstring = (if v_223 then 3-proj-3-tuple(v_222) else caught-fail) in
        {679}let adi_5: bitstring = (if v_223 then 2-proj-3-tuple(v_222) else caught-fail) in
        {680}let valid_12: bool = (if v_223 then 1-proj-3-tuple(v_222) else caught-fail) in
        {682}let v_224: bitstring = (if v_223 then catch-fail(cipherstateunpack(cs_29)) else caught-fail) in
        {683}let v_225: bool = (not-caught-fail(v_224) && success?(1-proj-2-tuple(v_224))) in
        {684}let o_8: nonce = (if v_225 then 2-proj-2-tuple(v_224) else caught-fail) in
        {685}let k_19: key = (if v_225 then 1-proj-2-tuple(v_224) else caught-fail) in
        {681}let n_17: nonce = (if v_223 then increment_nonce(n_16) else caught-fail) in
        {686}let csi_16: cipherstate = (if v_223 then catch-fail((if v_225 then cipherstatepack(k_19,n_17) else fail-any)) else caught-fail) in
        {687}let v_226: bool = not-caught-fail(csi_16) in
        {688}let v_227: bitstring = (if v_218 then catch-fail((if v_220 then (if v_221 then (if v_223 then (if v_226 then (csi_16,plaintext_12,valid_12) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {689}let v_228: bool = (not-caught-fail(v_227) && success?(1-proj-3-tuple(v_227))) in
        {690}let valid_13: bool = (if v_228 then 3-proj-3-tuple(v_227) else caught-fail) in
        {691}let plaintext_13: bitstring = (if v_228 then 2-proj-3-tuple(v_227) else caught-fail) in
        {692}let csi_17: cipherstate = (if v_228 then 1-proj-3-tuple(v_227) else caught-fail) in
        {693}let ss_34: symmetricstate = (if v_228 then symmetricstatepack(csi_17,ck_33,h_29) else caught-fail) in
        {694}let v_229: bitstring = (if v_228 then catch-fail(symmetricstateunpack(ss_34)) else caught-fail) in
        {695}let v_230: bool = (not-caught-fail(v_229) && success?(1-proj-3-tuple(v_229))) in
        {696}let h_30: bitstring = (if v_230 then 3-proj-3-tuple(v_229) else caught-fail) in
        {697}let ck_34: key = (if v_230 then 2-proj-3-tuple(v_229) else caught-fail) in
        {698}let cs_30: cipherstate = (if v_230 then 1-proj-3-tuple(v_229) else caught-fail) in
        {699}let ssi_9: symmetricstate = (if v_228 then catch-fail((if v_230 then symmetricstatepack(cs_30,ck_34,hash(h_30,nm_2)) else fail-any)) else caught-fail) in
        {700}let v_231: bool = not-caught-fail(ssi_9) in
        {701}let v_232: bitstring = (if v_216 then catch-fail((if v_218 then (if v_228 then (if v_231 then (ssi_9,plaintext_13,valid_13) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {702}let v_233: bool = (not-caught-fail(v_232) && success?(1-proj-3-tuple(v_232))) in
        {703}let valid2_4: bool = (if v_233 then 3-proj-3-tuple(v_232) else caught-fail) in
        {704}let ne_11: bitstring = (if v_233 then 2-proj-3-tuple(v_232) else caught-fail) in
        {705}let ss_35: symmetricstate = (if v_233 then 1-proj-3-tuple(v_232) else caught-fail) in
        {707}let v_234: bitstring = (if v_233 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {708}let v_235: bool = (not-caught-fail(v_234) && success?(1-proj-2-tuple(v_234))) in
        {709}let my_private_key_4: key = (if v_235 then 2-proj-2-tuple(v_234) else caught-fail) in
        {710}let my_public_key_4: key = (if v_235 then 1-proj-2-tuple(v_234) else caught-fail) in
        {664}let rs_9: key = (if v_216 then ne_10 else caught-fail) in
        {711}let input_key_material_5: key = (if v_233 then catch-fail((if v_235 then dhexp(my_private_key_4,rs_9) else fail-any)) else caught-fail) in
        {712}let v_236: bool = not-caught-fail(input_key_material_5) in
        {713}let v_237: bitstring = (if v_236 then catch-fail(symmetricstateunpack(ss_35)) else caught-fail) in
        {714}let v_238: bool = (not-caught-fail(v_237) && success?(1-proj-3-tuple(v_237))) in
        {715}let h_31: bitstring = (if v_238 then 3-proj-3-tuple(v_237) else caught-fail) in
        {716}let ck_35: key = (if v_238 then 2-proj-3-tuple(v_237) else caught-fail) in
        {717}let cs_31: cipherstate = (if v_238 then 1-proj-3-tuple(v_237) else caught-fail) in
        {720}let output3_5: key = (if v_238 then hmac_hash3(ck_35,input_key_material_5) else caught-fail) in
        {719}let output2_5: key = (if v_238 then hmac_hash2(ck_35,input_key_material_5) else caught-fail) in
        {718}let output1_5: key = (if v_238 then hmac_hash1(ck_35,input_key_material_5) else caught-fail) in
        {721}let v_239: bitstring = (if v_238 then catch-fail((output1_5,output2_5,output3_5)) else caught-fail) in
        {722}let v_240: bool = (not-caught-fail(v_239) && success?(1-proj-3-tuple(v_239))) in
        {723}let output_4: key = (if v_240 then 3-proj-3-tuple(v_239) else caught-fail) in
        {724}let temp_k_4: key = (if v_240 then 2-proj-3-tuple(v_239) else caught-fail) in
        {725}let ck_36: key = (if v_240 then 1-proj-3-tuple(v_239) else caught-fail) in
        {726}let ss_36: symmetricstate = (if v_233 then catch-fail((if v_236 then (if v_238 then (if v_240 then symmetricstatepack(cipherstatepack(temp_k_4,minnonce),ck_36,h_31) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {727}let v_241: bool = not-caught-fail(ss_36) in
        {728}let v_242: bitstring = (if v_241 then catch-fail(keypairunpack(e_12)) else caught-fail) in
        {729}let v_243: bool = (not-caught-fail(v_242) && success?(1-proj-2-tuple(v_242))) in
        {730}let my_private_key_5: key = (if v_243 then 2-proj-2-tuple(v_242) else caught-fail) in
        {731}let my_public_key_5: key = (if v_243 then 1-proj-2-tuple(v_242) else caught-fail) in
        {706}let rm_9: key = (if v_233 then ne_11 else caught-fail) in
        {732}let input_key_material_6: key = (if v_241 then catch-fail((if v_243 then dhexp(my_private_key_5,rm_9) else fail-any)) else caught-fail) in
        {733}let v_244: bool = not-caught-fail(input_key_material_6) in
        {734}let v_245: bitstring = (if v_244 then catch-fail(symmetricstateunpack(ss_36)) else caught-fail) in
        {735}let v_246: bool = (not-caught-fail(v_245) && success?(1-proj-3-tuple(v_245))) in
        {736}let h_32: bitstring = (if v_246 then 3-proj-3-tuple(v_245) else caught-fail) in
        {737}let ck_37: key = (if v_246 then 2-proj-3-tuple(v_245) else caught-fail) in
        {738}let cs_32: cipherstate = (if v_246 then 1-proj-3-tuple(v_245) else caught-fail) in
        {741}let output3_6: key = (if v_246 then hmac_hash3(ck_37,input_key_material_6) else caught-fail) in
        {740}let output2_6: key = (if v_246 then hmac_hash2(ck_37,input_key_material_6) else caught-fail) in
        {739}let output1_6: key = (if v_246 then hmac_hash1(ck_37,input_key_material_6) else caught-fail) in
        {742}let v_247: bitstring = (if v_246 then catch-fail((output1_6,output2_6,output3_6)) else caught-fail) in
        {743}let v_248: bool = (not-caught-fail(v_247) && success?(1-proj-3-tuple(v_247))) in
        {744}let output_5: key = (if v_248 then 3-proj-3-tuple(v_247) else caught-fail) in
        {745}let temp_k_5: key = (if v_248 then 2-proj-3-tuple(v_247) else caught-fail) in
        {746}let ck_38: key = (if v_248 then 1-proj-3-tuple(v_247) else caught-fail) in
        {747}let ss_37: symmetricstate = (if v_241 then catch-fail((if v_244 then (if v_246 then (if v_248 then symmetricstatepack(cipherstatepack(temp_k_5,minnonce),ck_38,h_32) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {748}let v_249: bool = not-caught-fail(ss_37) in
        {749}let v_250: bitstring = (if v_249 then catch-fail(symmetricstateunpack(ss_37)) else caught-fail) in
        {750}let v_251: bool = (not-caught-fail(v_250) && success?(1-proj-3-tuple(v_250))) in
        {751}let h_33: bitstring = (if v_251 then 3-proj-3-tuple(v_250) else caught-fail) in
        {752}let ck_39: key = (if v_251 then 2-proj-3-tuple(v_250) else caught-fail) in
        {753}let cs_33: cipherstate = (if v_251 then 1-proj-3-tuple(v_250) else caught-fail) in
        {754}let v_252: bitstring = (if v_251 then catch-fail(cipherstateunpack(cs_33)) else caught-fail) in
        {755}let v_253: bool = (not-caught-fail(v_252) && success?(1-proj-2-tuple(v_252))) in
        {756}let n_18: nonce = (if v_253 then 2-proj-2-tuple(v_252) else caught-fail) in
        {757}let k_20: key = (if v_253 then 1-proj-2-tuple(v_252) else caught-fail) in
        {758}let d_6: aead = (if v_253 then catch-fail(decrypt(k_20,n_18,h_33,ciphertext_11)) else caught-fail) in
        {759}let v_254: bool = not-caught-fail(d_6) in
        {760}let v_255: bitstring = (if v_254 then catch-fail(aeadunpack(d_6)) else caught-fail) in
        {761}let v_256: bool = (not-caught-fail(v_255) && success?(1-proj-3-tuple(v_255))) in
        {762}let plaintext_14: bitstring = (if v_256 then 3-proj-3-tuple(v_255) else caught-fail) in
        {763}let adi_6: bitstring = (if v_256 then 2-proj-3-tuple(v_255) else caught-fail) in
        {764}let valid_14: bool = (if v_256 then 1-proj-3-tuple(v_255) else caught-fail) in
        {766}let v_257: bitstring = (if v_256 then catch-fail(cipherstateunpack(cs_33)) else caught-fail) in
        {767}let v_258: bool = (not-caught-fail(v_257) && success?(1-proj-2-tuple(v_257))) in
        {768}let o_9: nonce = (if v_258 then 2-proj-2-tuple(v_257) else caught-fail) in
        {769}let k_21: key = (if v_258 then 1-proj-2-tuple(v_257) else caught-fail) in
        {765}let n_19: nonce = (if v_256 then increment_nonce(n_18) else caught-fail) in
        {770}let csi_18: cipherstate = (if v_256 then catch-fail((if v_258 then cipherstatepack(k_21,n_19) else fail-any)) else caught-fail) in
        {771}let v_259: bool = not-caught-fail(csi_18) in
        {772}let v_260: bitstring = (if v_251 then catch-fail((if v_253 then (if v_254 then (if v_256 then (if v_259 then (csi_18,plaintext_14,valid_14) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {773}let v_261: bool = (not-caught-fail(v_260) && success?(1-proj-3-tuple(v_260))) in
        {774}let valid_15: bool = (if v_261 then 3-proj-3-tuple(v_260) else caught-fail) in
        {775}let plaintext_15: bitstring = (if v_261 then 2-proj-3-tuple(v_260) else caught-fail) in
        {776}let csi_19: cipherstate = (if v_261 then 1-proj-3-tuple(v_260) else caught-fail) in
        {777}let ss_38: symmetricstate = (if v_261 then symmetricstatepack(csi_19,ck_39,h_33) else caught-fail) in
        {778}let v_262: bitstring = (if v_261 then catch-fail(symmetricstateunpack(ss_38)) else caught-fail) in
        {779}let v_263: bool = (not-caught-fail(v_262) && success?(1-proj-3-tuple(v_262))) in
        {780}let h_34: bitstring = (if v_263 then 3-proj-3-tuple(v_262) else caught-fail) in
        {781}let ck_40: key = (if v_263 then 2-proj-3-tuple(v_262) else caught-fail) in
        {782}let cs_34: cipherstate = (if v_263 then 1-proj-3-tuple(v_262) else caught-fail) in
        {783}let ssi_10: symmetricstate = (if v_261 then catch-fail((if v_263 then symmetricstatepack(cs_34,ck_40,hash(h_34,ciphertext_11)) else fail-any)) else caught-fail) in
        {784}let v_264: bool = not-caught-fail(ssi_10) in
        {785}let v_265: bitstring = (if v_249 then catch-fail((if v_251 then (if v_261 then (if v_264 then (ssi_10,plaintext_15,valid_15) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {786}let v_266: bool = (not-caught-fail(v_265) && success?(1-proj-3-tuple(v_265))) in
        {787}let valid3_1: bool = (if v_266 then 3-proj-3-tuple(v_265) else caught-fail) in
        {788}let plaintext_16: bitstring = (if v_266 then 2-proj-3-tuple(v_265) else caught-fail) in
        {789}let ss_39: symmetricstate = (if v_266 then 1-proj-3-tuple(v_265) else caught-fail) in
        {793}let basis_5: key = (if v_266 then key_m(them_1) else caught-fail) in
        {794}let public_key_5: key = (if v_266 then catch-fail(dhexp(basis_5,validkey(g))) else caught-fail) in
        {795}let v_268: bool = not-caught-fail(public_key_5) in
        {790}let basis_4: key = (if v_266 then key_s(them_1) else caught-fail) in
        {791}let public_key_4: key = (if v_266 then catch-fail(dhexp(basis_4,validkey(g))) else caught-fail) in
        {792}let v_267: bool = not-caught-fail(public_key_4) in
        {796}let v_269: bool = (if v_266 then catch-fail(((valid1_4 && (valid2_4 && valid3_1)) && ((rs_9 = getpublickey((if v_267 then keypairpack(validkey(public_key_4),basis_4) else fail-any))) && (rm_9 = getpublickey((if v_268 then keypairpack(validkey(public_key_5),basis_5) else fail-any)))))) else caught-fail) in
        {798}let v_270: bitstring = (if v_269 then catch-fail(symmetricstateunpack(ss_39)) else caught-fail) in
        {799}let v_271: bool = (not-caught-fail(v_270) && success?(1-proj-3-tuple(v_270))) in
        {800}let h_35: bitstring = (if v_271 then 3-proj-3-tuple(v_270) else caught-fail) in
        {801}let ck_41: key = (if v_271 then 2-proj-3-tuple(v_270) else caught-fail) in
        {802}let cs_35: cipherstate = (if v_271 then 1-proj-3-tuple(v_270) else caught-fail) in
        {803}let input_key_material_7: key = (if v_271 then zero else caught-fail) in
        {806}let output3_7: key = (if v_271 then hmac_hash3(ck_41,input_key_material_7) else caught-fail) in
        {805}let output2_7: key = (if v_271 then hmac_hash2(ck_41,input_key_material_7) else caught-fail) in
        {804}let output1_7: key = (if v_271 then hmac_hash1(ck_41,input_key_material_7) else caught-fail) in
        {807}let v_272: bitstring = (if v_271 then catch-fail((output1_7,output2_7,output3_7)) else caught-fail) in
        {808}let v_273: bool = (not-caught-fail(v_272) && success?(1-proj-3-tuple(v_272))) in
        {809}let temp_k3_1: key = (if v_273 then 3-proj-3-tuple(v_272) else caught-fail) in
        {810}let temp_k2_1: key = (if v_273 then 2-proj-3-tuple(v_272) else caught-fail) in
        {811}let temp_k1_1: key = (if v_273 then 1-proj-3-tuple(v_272) else caught-fail) in
        {813}let cs2_5: cipherstate = (if v_273 then cipherstatepack(temp_k2_1,minnonce) else caught-fail) in
        {812}let cs1_5: cipherstate = (if v_273 then cipherstatepack(temp_k1_1,minnonce) else caught-fail) in
        {814}let v_274: bitstring = (if v_269 then catch-fail((if v_271 then (if v_273 then (ss_39,cs1_5,cs2_5) else fail-any) else fail-any)) else caught-fail) in
        {815}let v_275: bool = (not-caught-fail(v_274) && success?(1-proj-3-tuple(v_274))) in
        {816}let cs2_6: cipherstate = (if v_275 then 3-proj-3-tuple(v_274) else caught-fail) in
        {817}let cs1_6: cipherstate = (if v_275 then 2-proj-3-tuple(v_274) else caught-fail) in
        {818}let ssi_11: symmetricstate = (if v_275 then 1-proj-3-tuple(v_274) else caught-fail) in
        {797}let hs_20: handshakestate = (if v_269 then handshakestatepack(ss_39,s_7,m_7,e_12,rs_9,rm_9,re_9,psk_7,initiator_6) else caught-fail) in
        {819}let (hs_21: handshakestate,plaintext_b_1: bitstring,valid_16: bool,cs1_7: cipherstate,cs2_7: cipherstate) = (if v_186 then (if v_188 then (if v_191 then (if v_199 then (if v_216 then (if v_233 then (if v_241 then (if v_249 then (if v_266 then (if undo-catch-fail(v_269) then (if v_275 then (hs_20,plaintext_16,true,cs1_6,cs2_6) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {820}event RecvMsg(me_1,them_1,stagepack_b(sid_2),plaintext_b_1);
        {821}insert statestore(me_1,them_1,sid_2,statepack_c(hs_21,cs1_7,cs2_7))
    ) | (
        {823}!
        {882}get statestore(=me_1,=them_1,=sid_2,statepack_c(hs_22: handshakestate,cs1_8: cipherstate,cs2_8: cipherstate)) in
        {824}let hs_23: handshakestate = handshakestatesetcs(hs_22,cs1_8) in
        {826}let v_276: bitstring = catch-fail(handshakestateunpack(hs_23)) in
        {827}let v_277: bool = (not-caught-fail(v_276) && success?(1-proj-9-tuple(v_276))) in
        {828}let initiator_7: bool = (if v_277 then 9-proj-9-tuple(v_276) else caught-fail) in
        {829}let psk_8: key = (if v_277 then 8-proj-9-tuple(v_276) else caught-fail) in
        {830}let re_10: key = (if v_277 then 7-proj-9-tuple(v_276) else caught-fail) in
        {831}let rm_10: key = (if v_277 then 6-proj-9-tuple(v_276) else caught-fail) in
        {832}let rs_10: key = (if v_277 then 5-proj-9-tuple(v_276) else caught-fail) in
        {833}let e_13: keypair = (if v_277 then 4-proj-9-tuple(v_276) else caught-fail) in
        {834}let m_8: keypair = (if v_277 then 3-proj-9-tuple(v_276) else caught-fail) in
        {835}let s_8: keypair = (if v_277 then 2-proj-9-tuple(v_276) else caught-fail) in
        {836}let ss_40: symmetricstate = (if v_277 then 1-proj-9-tuple(v_276) else caught-fail) in
        {837}let v_278: bitstring = (if v_277 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {838}let v_279: bool = (not-caught-fail(v_278) && success?(1-proj-4-tuple(v_278))) in
        {839}let ciphertext_12: bitstring = (if v_279 then 4-proj-4-tuple(v_278) else caught-fail) in
        {840}let nm_3: bitstring = (if v_279 then 3-proj-4-tuple(v_278) else caught-fail) in
        {841}let ns_6: bitstring = (if v_279 then 2-proj-4-tuple(v_278) else caught-fail) in
        {842}let ne_12: bitstring = (if v_279 then 1-proj-4-tuple(v_278) else caught-fail) in
        {843}let v_280: bitstring = (if v_279 then catch-fail(symmetricstateunpack(ss_40)) else caught-fail) in
        {844}let v_281: bool = (not-caught-fail(v_280) && success?(1-proj-3-tuple(v_280))) in
        {845}let h_36: bitstring = (if v_281 then 3-proj-3-tuple(v_280) else caught-fail) in
        {846}let ck_42: key = (if v_281 then 2-proj-3-tuple(v_280) else caught-fail) in
        {847}let cs_36: cipherstate = (if v_281 then 1-proj-3-tuple(v_280) else caught-fail) in
        {848}let v_282: bitstring = (if v_281 then catch-fail(cipherstateunpack(cs_36)) else caught-fail) in
        {849}let v_283: bool = (not-caught-fail(v_282) && success?(1-proj-2-tuple(v_282))) in
        {850}let n_20: nonce = (if v_283 then 2-proj-2-tuple(v_282) else caught-fail) in
        {851}let k_22: key = (if v_283 then 1-proj-2-tuple(v_282) else caught-fail) in
        {854}let v_284: bitstring = (if v_283 then catch-fail(cipherstateunpack(cs_36)) else caught-fail) in
        {855}let v_285: bool = (not-caught-fail(v_284) && success?(1-proj-2-tuple(v_284))) in
        {856}let o_10: nonce = (if v_285 then 2-proj-2-tuple(v_284) else caught-fail) in
        {857}let k_23: key = (if v_285 then 1-proj-2-tuple(v_284) else caught-fail) in
        {853}let n_21: nonce = (if v_283 then increment_nonce(n_20) else caught-fail) in
        {858}let csi_20: cipherstate = (if v_283 then catch-fail((if v_285 then cipherstatepack(k_23,n_21) else fail-any)) else caught-fail) in
        {859}let v_286: bool = not-caught-fail(csi_20) in
        {825}let payload_3: bitstring = msg_c(me_1,them_1,sid_2) in
        {852}let e_14: bitstring = (if v_283 then encrypt(k_22,n_20,h_36,payload_3) else caught-fail) in
        {860}let v_287: bitstring = (if v_281 then catch-fail((if v_283 then (if v_286 then (csi_20,e_14) else fail-any) else fail-any)) else caught-fail) in
        {861}let v_288: bool = (not-caught-fail(v_287) && success?(1-proj-2-tuple(v_287))) in
        {862}let ciphertext_13: bitstring = (if v_288 then 2-proj-2-tuple(v_287) else caught-fail) in
        {863}let csi_21: cipherstate = (if v_288 then 1-proj-2-tuple(v_287) else caught-fail) in
        {864}let ss_41: symmetricstate = (if v_288 then symmetricstatepack(csi_21,ck_42,h_36) else caught-fail) in
        {865}let v_289: bitstring = (if v_288 then catch-fail(symmetricstateunpack(ss_41)) else caught-fail) in
        {866}let v_290: bool = (not-caught-fail(v_289) && success?(1-proj-3-tuple(v_289))) in
        {867}let h_37: bitstring = (if v_290 then 3-proj-3-tuple(v_289) else caught-fail) in
        {868}let ck_43: key = (if v_290 then 2-proj-3-tuple(v_289) else caught-fail) in
        {869}let cs_37: cipherstate = (if v_290 then 1-proj-3-tuple(v_289) else caught-fail) in
        {870}let ssi_12: symmetricstate = (if v_288 then catch-fail((if v_290 then symmetricstatepack(cs_37,ck_43,hash(h_37,ciphertext_13)) else fail-any)) else caught-fail) in
        {871}let v_291: bool = not-caught-fail(ssi_12) in
        {872}let v_292: bitstring = (if v_279 then catch-fail((if v_281 then (if v_288 then (if v_291 then (ssi_12,ciphertext_13) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {873}let v_293: bool = (not-caught-fail(v_292) && success?(1-proj-2-tuple(v_292))) in
        {874}let ciphertext_14: bitstring = (if v_293 then 2-proj-2-tuple(v_292) else caught-fail) in
        {875}let ss_42: symmetricstate = (if v_293 then 1-proj-2-tuple(v_292) else caught-fail) in
        {877}let message_buffer_3: bitstring = (if v_293 then concat3(ne_12,ns_6,ciphertext_14) else caught-fail) in
        {876}let hs_24: handshakestate = (if v_293 then handshakestatepack(ss_42,s_8,m_8,e_13,rs_10,rm_10,re_10,psk_8,initiator_7) else caught-fail) in
        {878}let (hs_25: handshakestate,message_c_1: bitstring) = (if v_277 then (if v_279 then (if v_293 then (hs_24,message_buffer_3) else fail-any) else fail-any) else fail-any) in
        {879}event SendMsg(me_1,them_1,stagepack_c(sid_2),msg_c(me_1,them_1,sid_2));
        {880}insert statestore(me_1,them_1,sid_2,statepack_d(hs_25,handshakestategetcs(hs_25),cs2_8));
        {881}out(pub, message_c_1)
    ) | (
        {883}!
        {949}get statestore(=me_1,=them_1,=sid_2,statepack_d(hs_26: handshakestate,cs1_9: cipherstate,cs2_9: cipherstate)) in
        {884}let hs_27: handshakestate = handshakestatesetcs(hs_26,cs2_9) in
        {885}in(pub, message_d_1: bitstring);
        {886}let v_294: bitstring = catch-fail(handshakestateunpack(hs_27)) in
        {887}let v_295: bool = (not-caught-fail(v_294) && success?(1-proj-9-tuple(v_294))) in
        {888}let initiator_8: bool = (if v_295 then 9-proj-9-tuple(v_294) else caught-fail) in
        {889}let psk_9: key = (if v_295 then 8-proj-9-tuple(v_294) else caught-fail) in
        {890}let re_11: key = (if v_295 then 7-proj-9-tuple(v_294) else caught-fail) in
        {891}let rm_11: key = (if v_295 then 6-proj-9-tuple(v_294) else caught-fail) in
        {892}let rs_11: key = (if v_295 then 5-proj-9-tuple(v_294) else caught-fail) in
        {893}let e_15: keypair = (if v_295 then 4-proj-9-tuple(v_294) else caught-fail) in
        {894}let m_9: keypair = (if v_295 then 3-proj-9-tuple(v_294) else caught-fail) in
        {895}let s_9: keypair = (if v_295 then 2-proj-9-tuple(v_294) else caught-fail) in
        {896}let ss_43: symmetricstate = (if v_295 then 1-proj-9-tuple(v_294) else caught-fail) in
        {897}let v_296: bitstring = (if v_295 then catch-fail(deconcat3(message_d_1)) else caught-fail) in
        {898}let v_297: bool = (not-caught-fail(v_296) && success?(1-proj-3-tuple(v_296))) in
        {899}let ciphertext_15: bitstring = (if v_297 then 3-proj-3-tuple(v_296) else caught-fail) in
        {900}let ns_7: bitstring = (if v_297 then 2-proj-3-tuple(v_296) else caught-fail) in
        {901}let ne_13: bitstring = (if v_297 then 1-proj-3-tuple(v_296) else caught-fail) in
        {903}let v_298: bitstring = (if v_297 then catch-fail(symmetricstateunpack(ss_43)) else caught-fail) in
        {904}let v_299: bool = (not-caught-fail(v_298) && success?(1-proj-3-tuple(v_298))) in
        {905}let h_38: bitstring = (if v_299 then 3-proj-3-tuple(v_298) else caught-fail) in
        {906}let ck_44: key = (if v_299 then 2-proj-3-tuple(v_298) else caught-fail) in
        {907}let cs_38: cipherstate = (if v_299 then 1-proj-3-tuple(v_298) else caught-fail) in
        {908}let v_300: bitstring = (if v_299 then catch-fail(cipherstateunpack(cs_38)) else caught-fail) in
        {909}let v_301: bool = (not-caught-fail(v_300) && success?(1-proj-2-tuple(v_300))) in
        {910}let n_22: nonce = (if v_301 then 2-proj-2-tuple(v_300) else caught-fail) in
        {911}let k_24: key = (if v_301 then 1-proj-2-tuple(v_300) else caught-fail) in
        {912}let d_7: aead = (if v_301 then catch-fail(decrypt(k_24,n_22,h_38,ciphertext_15)) else caught-fail) in
        {913}let v_302: bool = not-caught-fail(d_7) in
        {914}let v_303: bitstring = (if v_302 then catch-fail(aeadunpack(d_7)) else caught-fail) in
        {915}let v_304: bool = (not-caught-fail(v_303) && success?(1-proj-3-tuple(v_303))) in
        {916}let plaintext_17: bitstring = (if v_304 then 3-proj-3-tuple(v_303) else caught-fail) in
        {917}let adi_7: bitstring = (if v_304 then 2-proj-3-tuple(v_303) else caught-fail) in
        {918}let valid_17: bool = (if v_304 then 1-proj-3-tuple(v_303) else caught-fail) in
        {920}let v_305: bitstring = (if v_304 then catch-fail(cipherstateunpack(cs_38)) else caught-fail) in
        {921}let v_306: bool = (not-caught-fail(v_305) && success?(1-proj-2-tuple(v_305))) in
        {922}let o_11: nonce = (if v_306 then 2-proj-2-tuple(v_305) else caught-fail) in
        {923}let k_25: key = (if v_306 then 1-proj-2-tuple(v_305) else caught-fail) in
        {919}let n_23: nonce = (if v_304 then increment_nonce(n_22) else caught-fail) in
        {924}let csi_22: cipherstate = (if v_304 then catch-fail((if v_306 then cipherstatepack(k_25,n_23) else fail-any)) else caught-fail) in
        {925}let v_307: bool = not-caught-fail(csi_22) in
        {926}let v_308: bitstring = (if v_299 then catch-fail((if v_301 then (if v_302 then (if v_304 then (if v_307 then (csi_22,plaintext_17,valid_17) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {927}let v_309: bool = (not-caught-fail(v_308) && success?(1-proj-3-tuple(v_308))) in
        {928}let valid_18: bool = (if v_309 then 3-proj-3-tuple(v_308) else caught-fail) in
        {929}let plaintext_18: bitstring = (if v_309 then 2-proj-3-tuple(v_308) else caught-fail) in
        {930}let csi_23: cipherstate = (if v_309 then 1-proj-3-tuple(v_308) else caught-fail) in
        {931}let ss_44: symmetricstate = (if v_309 then symmetricstatepack(csi_23,ck_44,h_38) else caught-fail) in
        {932}let v_310: bitstring = (if v_309 then catch-fail(symmetricstateunpack(ss_44)) else caught-fail) in
        {933}let v_311: bool = (not-caught-fail(v_310) && success?(1-proj-3-tuple(v_310))) in
        {934}let h_39: bitstring = (if v_311 then 3-proj-3-tuple(v_310) else caught-fail) in
        {935}let ck_45: key = (if v_311 then 2-proj-3-tuple(v_310) else caught-fail) in
        {936}let cs_39: cipherstate = (if v_311 then 1-proj-3-tuple(v_310) else caught-fail) in
        {937}let ssi_13: symmetricstate = (if v_309 then catch-fail((if v_311 then symmetricstatepack(cs_39,ck_45,hash(h_39,ciphertext_15)) else fail-any)) else caught-fail) in
        {938}let v_312: bool = not-caught-fail(ssi_13) in
        {939}let v_313: bitstring = (if v_297 then catch-fail((if v_299 then (if v_309 then (if v_312 then (ssi_13,plaintext_18,valid_18) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {940}let v_314: bool = (not-caught-fail(v_313) && success?(1-proj-3-tuple(v_313))) in
        {941}let valid2_5: bool = (if v_314 then 3-proj-3-tuple(v_313) else caught-fail) in
        {942}let plaintext_19: bitstring = (if v_314 then 2-proj-3-tuple(v_313) else caught-fail) in
        {943}let ss_45: symmetricstate = (if v_314 then 1-proj-3-tuple(v_313) else caught-fail) in
        {902}let valid1_5: bool = (if v_297 then true else caught-fail) in
        {944}let v_315: bool = (if v_314 then catch-fail((valid1_5 && valid2_5)) else caught-fail) in
        {945}let hs_28: handshakestate = (if v_315 then handshakestatepack(ss_45,s_9,m_9,e_15,rs_11,rm_11,re_11,psk_9,initiator_8) else caught-fail) in
        {946}let (hs_29: handshakestate,plaintext_d_1: bitstring,valid_19: bool) = (if v_295 then (if v_297 then (if v_314 then (if undo-catch-fail(v_315) then (hs_28,plaintext_19,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {947}event RecvMsg(me_1,them_1,stagepack_d(sid_2),plaintext_d_1);
        {948}event RecvEnd(valid_19)
    ) | (
        0
    )
) | (
    {954}let m_10: keypair = keypairpack(empty,empty) in
    {953}let s_10: keypair = keypairpack(empty,empty) in
    {955}out(pub, (getpublickey(s_10),getpublickey(m_10)));
    {952}let sid_3: sessionid = sid in
    {951}let them_2: principal = alice in
    {950}let me_2: principal = bob in
    (
        {965}let k_26: key = empty in
        {966}let cs_40: cipherstate = cipherstatepack(k_26,minnonce) in
        {962}let protocol_name_2: bitstring = somename in
        {963}let h_40: bitstring = hash(protocol_name_2,empty) in
        {964}let ck_46: key = h_40 in
        {967}let ss_46: symmetricstate = symmetricstatepack(cs_40,ck_46,h_40) in
        {968}let v_316: bitstring = catch-fail(symmetricstateunpack(ss_46)) in
        {969}let v_317: bool = (not-caught-fail(v_316) && success?(1-proj-3-tuple(v_316))) in
        {970}let h_41: bitstring = (if v_317 then 3-proj-3-tuple(v_316) else caught-fail) in
        {971}let ck_47: key = (if v_317 then 2-proj-3-tuple(v_316) else caught-fail) in
        {972}let cs_41: cipherstate = (if v_317 then 1-proj-3-tuple(v_316) else caught-fail) in
        {960}let prologue_2: bitstring = empty in
        {973}let ss_47: symmetricstate = catch-fail((if v_317 then symmetricstatepack(cs_41,ck_47,hash(h_41,prologue_2)) else fail-any)) in
        {974}let v_318: bool = not-caught-fail(ss_47) in
        {961}let psk_10: key = empty in
        {959}let re_12: key = empty in
        {958}let rm_12: key = empty in
        {957}let rs_12: key = empty in
        {956}let e_16: keypair = keypairpack(empty,empty) in
        {975}let hs_30: handshakestate = (if v_318 then handshakestatepack(ss_47,s_10,m_10,e_16,rs_12,rm_12,re_12,psk_10,false) else fail-any) in
        {976}insert statestore(me_2,them_2,sid_3,statepack_a(hs_30))
    ) | (
        {1049}get statestore(=me_2,=them_2,=sid_3,statepack_a(hs_31: handshakestate)) in
        {977}in(pub, message_a_2: bitstring);
        {978}let v_319: bitstring = catch-fail(handshakestateunpack(hs_31)) in
        {979}let v_320: bool = (not-caught-fail(v_319) && success?(1-proj-9-tuple(v_319))) in
        {980}let initiator_9: bool = (if v_320 then 9-proj-9-tuple(v_319) else caught-fail) in
        {981}let psk_11: key = (if v_320 then 8-proj-9-tuple(v_319) else caught-fail) in
        {982}let re_13: key = (if v_320 then 7-proj-9-tuple(v_319) else caught-fail) in
        {983}let rm_13: key = (if v_320 then 6-proj-9-tuple(v_319) else caught-fail) in
        {984}let rs_13: key = (if v_320 then 5-proj-9-tuple(v_319) else caught-fail) in
        {985}let e_17: keypair = (if v_320 then 4-proj-9-tuple(v_319) else caught-fail) in
        {986}let m_11: keypair = (if v_320 then 3-proj-9-tuple(v_319) else caught-fail) in
        {987}let s_11: keypair = (if v_320 then 2-proj-9-tuple(v_319) else caught-fail) in
        {988}let ss_48: symmetricstate = (if v_320 then 1-proj-9-tuple(v_319) else caught-fail) in
        {989}let v_321: bitstring = (if v_320 then catch-fail(deconcat3(message_a_2)) else caught-fail) in
        {990}let v_322: bool = (not-caught-fail(v_321) && success?(1-proj-3-tuple(v_321))) in
        {991}let ciphertext_16: bitstring = (if v_322 then 3-proj-3-tuple(v_321) else caught-fail) in
        {992}let ns_8: bitstring = (if v_322 then 2-proj-3-tuple(v_321) else caught-fail) in
        {993}let ne_14: bitstring = (if v_322 then 1-proj-3-tuple(v_321) else caught-fail) in
        {996}let v_323: bitstring = (if v_322 then catch-fail(symmetricstateunpack(ss_48)) else caught-fail) in
        {997}let v_324: bool = (not-caught-fail(v_323) && success?(1-proj-3-tuple(v_323))) in
        {998}let h_42: bitstring = (if v_324 then 3-proj-3-tuple(v_323) else caught-fail) in
        {999}let ck_48: key = (if v_324 then 2-proj-3-tuple(v_323) else caught-fail) in
        {1000}let cs_42: cipherstate = (if v_324 then 1-proj-3-tuple(v_323) else caught-fail) in
        {995}let re_14: key = (if v_322 then ne_14 else caught-fail) in
        {1001}let ss_49: symmetricstate = (if v_322 then catch-fail((if v_324 then symmetricstatepack(cs_42,ck_48,hash(h_42,re_14)) else fail-any)) else caught-fail) in
        {1002}let v_325: bool = not-caught-fail(ss_49) in
        {1003}let v_326: bitstring = (if v_325 then catch-fail(symmetricstateunpack(ss_49)) else caught-fail) in
        {1004}let v_327: bool = (not-caught-fail(v_326) && success?(1-proj-3-tuple(v_326))) in
        {1005}let h_43: bitstring = (if v_327 then 3-proj-3-tuple(v_326) else caught-fail) in
        {1006}let ck_49: key = (if v_327 then 2-proj-3-tuple(v_326) else caught-fail) in
        {1007}let cs_43: cipherstate = (if v_327 then 1-proj-3-tuple(v_326) else caught-fail) in
        {1008}let v_328: bitstring = (if v_327 then catch-fail(cipherstateunpack(cs_43)) else caught-fail) in
        {1009}let v_329: bool = (not-caught-fail(v_328) && success?(1-proj-2-tuple(v_328))) in
        {1010}let n_24: nonce = (if v_329 then 2-proj-2-tuple(v_328) else caught-fail) in
        {1011}let k_27: key = (if v_329 then 1-proj-2-tuple(v_328) else caught-fail) in
        {1012}let d_8: aead = (if v_329 then catch-fail(decrypt(k_27,n_24,h_43,ciphertext_16)) else caught-fail) in
        {1013}let v_330: bool = not-caught-fail(d_8) in
        {1014}let v_331: bitstring = (if v_330 then catch-fail(aeadunpack(d_8)) else caught-fail) in
        {1015}let v_332: bool = (not-caught-fail(v_331) && success?(1-proj-3-tuple(v_331))) in
        {1016}let plaintext_20: bitstring = (if v_332 then 3-proj-3-tuple(v_331) else caught-fail) in
        {1017}let adi_8: bitstring = (if v_332 then 2-proj-3-tuple(v_331) else caught-fail) in
        {1018}let valid_20: bool = (if v_332 then 1-proj-3-tuple(v_331) else caught-fail) in
        {1020}let v_333: bitstring = (if v_332 then catch-fail(cipherstateunpack(cs_43)) else caught-fail) in
        {1021}let v_334: bool = (not-caught-fail(v_333) && success?(1-proj-2-tuple(v_333))) in
        {1022}let o_12: nonce = (if v_334 then 2-proj-2-tuple(v_333) else caught-fail) in
        {1023}let k_28: key = (if v_334 then 1-proj-2-tuple(v_333) else caught-fail) in
        {1019}let n_25: nonce = (if v_332 then increment_nonce(n_24) else caught-fail) in
        {1024}let csi_24: cipherstate = (if v_332 then catch-fail((if v_334 then cipherstatepack(k_28,n_25) else fail-any)) else caught-fail) in
        {1025}let v_335: bool = not-caught-fail(csi_24) in
        {1026}let v_336: bitstring = (if v_327 then catch-fail((if v_329 then (if v_330 then (if v_332 then (if v_335 then (csi_24,plaintext_20,valid_20) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1027}let v_337: bool = (not-caught-fail(v_336) && success?(1-proj-3-tuple(v_336))) in
        {1028}let valid_21: bool = (if v_337 then 3-proj-3-tuple(v_336) else caught-fail) in
        {1029}let plaintext_21: bitstring = (if v_337 then 2-proj-3-tuple(v_336) else caught-fail) in
        {1030}let csi_25: cipherstate = (if v_337 then 1-proj-3-tuple(v_336) else caught-fail) in
        {1031}let ss_50: symmetricstate = (if v_337 then symmetricstatepack(csi_25,ck_49,h_43) else caught-fail) in
        {1032}let v_338: bitstring = (if v_337 then catch-fail(symmetricstateunpack(ss_50)) else caught-fail) in
        {1033}let v_339: bool = (not-caught-fail(v_338) && success?(1-proj-3-tuple(v_338))) in
        {1034}let h_44: bitstring = (if v_339 then 3-proj-3-tuple(v_338) else caught-fail) in
        {1035}let ck_50: key = (if v_339 then 2-proj-3-tuple(v_338) else caught-fail) in
        {1036}let cs_44: cipherstate = (if v_339 then 1-proj-3-tuple(v_338) else caught-fail) in
        {1037}let ssi_14: symmetricstate = (if v_337 then catch-fail((if v_339 then symmetricstatepack(cs_44,ck_50,hash(h_44,ciphertext_16)) else fail-any)) else caught-fail) in
        {1038}let v_340: bool = not-caught-fail(ssi_14) in
        {1039}let v_341: bitstring = (if v_325 then catch-fail((if v_327 then (if v_337 then (if v_340 then (ssi_14,plaintext_21,valid_21) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1040}let v_342: bool = (not-caught-fail(v_341) && success?(1-proj-3-tuple(v_341))) in
        {1041}let valid2_6: bool = (if v_342 then 3-proj-3-tuple(v_341) else caught-fail) in
        {1042}let plaintext_22: bitstring = (if v_342 then 2-proj-3-tuple(v_341) else caught-fail) in
        {1043}let ss_51: symmetricstate = (if v_342 then 1-proj-3-tuple(v_341) else caught-fail) in
        {994}let valid1_6: bool = (if v_322 then true else caught-fail) in
        {1044}let v_343: bool = (if v_342 then catch-fail((valid1_6 && valid2_6)) else caught-fail) in
        {1045}let hs_32: handshakestate = (if v_343 then handshakestatepack(ss_51,s_11,m_11,e_17,rs_13,rm_13,re_14,psk_11,initiator_9) else caught-fail) in
        {1046}let (hs_33: handshakestate,plaintext_a: bitstring,valid_22: bool) = (if v_320 then (if v_322 then (if v_325 then (if v_342 then (if undo-catch-fail(v_343) then (hs_32,plaintext_22,true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1047}event RecvMsg(me_2,them_2,stagepack_a(sid_3),plaintext_a);
        {1048}insert statestore(me_2,them_2,sid_3,statepack_b(hs_33))
    ) | (
        {1285}get statestore(=me_2,=them_2,=sid_3,statepack_b(hs_34: handshakestate)) in
        {1051}let v_344: bitstring = catch-fail(handshakestateunpack(hs_34)) in
        {1052}let v_345: bool = (not-caught-fail(v_344) && success?(1-proj-9-tuple(v_344))) in
        {1053}let initiator_10: bool = (if v_345 then 9-proj-9-tuple(v_344) else caught-fail) in
        {1054}let psk_12: key = (if v_345 then 8-proj-9-tuple(v_344) else caught-fail) in
        {1055}let re_15: key = (if v_345 then 7-proj-9-tuple(v_344) else caught-fail) in
        {1056}let rm_14: key = (if v_345 then 6-proj-9-tuple(v_344) else caught-fail) in
        {1057}let rs_14: key = (if v_345 then 5-proj-9-tuple(v_344) else caught-fail) in
        {1058}let e_18: keypair = (if v_345 then 4-proj-9-tuple(v_344) else caught-fail) in
        {1059}let m_12: keypair = (if v_345 then 3-proj-9-tuple(v_344) else caught-fail) in
        {1060}let s_12: keypair = (if v_345 then 2-proj-9-tuple(v_344) else caught-fail) in
        {1061}let ss_52: symmetricstate = (if v_345 then 1-proj-9-tuple(v_344) else caught-fail) in
        {1062}let v_346: bitstring = (if v_345 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {1063}let v_347: bool = (not-caught-fail(v_346) && success?(1-proj-4-tuple(v_346))) in
        {1064}let ciphertext_17: bitstring = (if v_347 then 4-proj-4-tuple(v_346) else caught-fail) in
        {1065}let nm_4: bitstring = (if v_347 then 3-proj-4-tuple(v_346) else caught-fail) in
        {1066}let ns_9: bitstring = (if v_347 then 2-proj-4-tuple(v_346) else caught-fail) in
        {1067}let ne_15: bitstring = (if v_347 then 1-proj-4-tuple(v_346) else caught-fail) in
        {1068}let basis_6: key = (if v_347 then key_e(me_2,them_2,sid_3) else caught-fail) in
        {1069}let public_key_6: key = (if v_347 then catch-fail(dhexp(basis_6,validkey(g))) else caught-fail) in
        {1070}let v_348: bool = not-caught-fail(public_key_6) in
        {1071}let e_19: keypair = (if v_347 then catch-fail((if v_348 then keypairpack(validkey(public_key_6),basis_6) else fail-any)) else caught-fail) in
        {1072}let v_349: bool = not-caught-fail(e_19) in
        {1073}let ne_16: bitstring = (if v_349 then catch-fail(getpublickey(e_19)) else caught-fail) in
        {1074}let v_350: bool = not-caught-fail(ne_16) in
        {1075}let v_351: bitstring = (if v_350 then catch-fail(symmetricstateunpack(ss_52)) else caught-fail) in
        {1076}let v_352: bool = (not-caught-fail(v_351) && success?(1-proj-3-tuple(v_351))) in
        {1077}let h_45: bitstring = (if v_352 then 3-proj-3-tuple(v_351) else caught-fail) in
        {1078}let ck_51: key = (if v_352 then 2-proj-3-tuple(v_351) else caught-fail) in
        {1079}let cs_45: cipherstate = (if v_352 then 1-proj-3-tuple(v_351) else caught-fail) in
        {1080}let ss_53: symmetricstate = (if v_350 then catch-fail((if v_352 then symmetricstatepack(cs_45,ck_51,hash(h_45,ne_16)) else fail-any)) else caught-fail) in
        {1081}let v_353: bool = not-caught-fail(ss_53) in
        {1082}let v_354: bitstring = (if v_353 then catch-fail(keypairunpack(e_19)) else caught-fail) in
        {1083}let v_355: bool = (not-caught-fail(v_354) && success?(1-proj-2-tuple(v_354))) in
        {1084}let my_private_key_6: key = (if v_355 then 2-proj-2-tuple(v_354) else caught-fail) in
        {1085}let my_public_key_6: key = (if v_355 then 1-proj-2-tuple(v_354) else caught-fail) in
        {1086}let input_key_material_8: key = (if v_353 then catch-fail((if v_355 then dhexp(my_private_key_6,re_15) else fail-any)) else caught-fail) in
        {1087}let v_356: bool = not-caught-fail(input_key_material_8) in
        {1088}let v_357: bitstring = (if v_356 then catch-fail(symmetricstateunpack(ss_53)) else caught-fail) in
        {1089}let v_358: bool = (not-caught-fail(v_357) && success?(1-proj-3-tuple(v_357))) in
        {1090}let h_46: bitstring = (if v_358 then 3-proj-3-tuple(v_357) else caught-fail) in
        {1091}let ck_52: key = (if v_358 then 2-proj-3-tuple(v_357) else caught-fail) in
        {1092}let cs_46: cipherstate = (if v_358 then 1-proj-3-tuple(v_357) else caught-fail) in
        {1095}let output3_8: key = (if v_358 then hmac_hash3(ck_52,input_key_material_8) else caught-fail) in
        {1094}let output2_8: key = (if v_358 then hmac_hash2(ck_52,input_key_material_8) else caught-fail) in
        {1093}let output1_8: key = (if v_358 then hmac_hash1(ck_52,input_key_material_8) else caught-fail) in
        {1096}let v_359: bitstring = (if v_358 then catch-fail((output1_8,output2_8,output3_8)) else caught-fail) in
        {1097}let v_360: bool = (not-caught-fail(v_359) && success?(1-proj-3-tuple(v_359))) in
        {1098}let output_6: key = (if v_360 then 3-proj-3-tuple(v_359) else caught-fail) in
        {1099}let temp_k_6: key = (if v_360 then 2-proj-3-tuple(v_359) else caught-fail) in
        {1100}let ck_53: key = (if v_360 then 1-proj-3-tuple(v_359) else caught-fail) in
        {1101}let ss_54: symmetricstate = (if v_353 then catch-fail((if v_356 then (if v_358 then (if v_360 then symmetricstatepack(cipherstatepack(temp_k_6,minnonce),ck_53,h_46) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1102}let v_361: bool = not-caught-fail(ss_54) in
        {1103}let basis_7: key = (if v_361 then key_s(me_2) else caught-fail) in
        {1104}let public_key_7: key = (if v_361 then catch-fail(dhexp(basis_7,validkey(g))) else caught-fail) in
        {1105}let v_362: bool = not-caught-fail(public_key_7) in
        {1106}let s_13: keypair = (if v_361 then catch-fail((if v_362 then keypairpack(validkey(public_key_7),basis_7) else fail-any)) else caught-fail) in
        {1107}let v_363: bool = not-caught-fail(s_13) in
        {1108}let plaintext_23: bitstring = (if v_363 then catch-fail(getpublickey(s_13)) else caught-fail) in
        {1109}let v_364: bool = not-caught-fail(plaintext_23) in
        {1110}let v_365: bitstring = (if v_364 then catch-fail(symmetricstateunpack(ss_54)) else caught-fail) in
        {1111}let v_366: bool = (not-caught-fail(v_365) && success?(1-proj-3-tuple(v_365))) in
        {1112}let h_47: bitstring = (if v_366 then 3-proj-3-tuple(v_365) else caught-fail) in
        {1113}let ck_54: key = (if v_366 then 2-proj-3-tuple(v_365) else caught-fail) in
        {1114}let cs_47: cipherstate = (if v_366 then 1-proj-3-tuple(v_365) else caught-fail) in
        {1115}let v_367: bitstring = (if v_366 then catch-fail(cipherstateunpack(cs_47)) else caught-fail) in
        {1116}let v_368: bool = (not-caught-fail(v_367) && success?(1-proj-2-tuple(v_367))) in
        {1117}let n_26: nonce = (if v_368 then 2-proj-2-tuple(v_367) else caught-fail) in
        {1118}let k_29: key = (if v_368 then 1-proj-2-tuple(v_367) else caught-fail) in
        {1121}let v_369: bitstring = (if v_368 then catch-fail(cipherstateunpack(cs_47)) else caught-fail) in
        {1122}let v_370: bool = (not-caught-fail(v_369) && success?(1-proj-2-tuple(v_369))) in
        {1123}let o_13: nonce = (if v_370 then 2-proj-2-tuple(v_369) else caught-fail) in
        {1124}let k_30: key = (if v_370 then 1-proj-2-tuple(v_369) else caught-fail) in
        {1120}let n_27: nonce = (if v_368 then increment_nonce(n_26) else caught-fail) in
        {1125}let csi_26: cipherstate = (if v_368 then catch-fail((if v_370 then cipherstatepack(k_30,n_27) else fail-any)) else caught-fail) in
        {1126}let v_371: bool = not-caught-fail(csi_26) in
        {1119}let e_20: bitstring = (if v_368 then encrypt(k_29,n_26,h_47,plaintext_23) else caught-fail) in
        {1127}let v_372: bitstring = (if v_366 then catch-fail((if v_368 then (if v_371 then (csi_26,e_20) else fail-any) else fail-any)) else caught-fail) in
        {1128}let v_373: bool = (not-caught-fail(v_372) && success?(1-proj-2-tuple(v_372))) in
        {1129}let ciphertext_18: bitstring = (if v_373 then 2-proj-2-tuple(v_372) else caught-fail) in
        {1130}let csi_27: cipherstate = (if v_373 then 1-proj-2-tuple(v_372) else caught-fail) in
        {1131}let ss_55: symmetricstate = (if v_373 then symmetricstatepack(csi_27,ck_54,h_47) else caught-fail) in
        {1132}let v_374: bitstring = (if v_373 then catch-fail(symmetricstateunpack(ss_55)) else caught-fail) in
        {1133}let v_375: bool = (not-caught-fail(v_374) && success?(1-proj-3-tuple(v_374))) in
        {1134}let h_48: bitstring = (if v_375 then 3-proj-3-tuple(v_374) else caught-fail) in
        {1135}let ck_55: key = (if v_375 then 2-proj-3-tuple(v_374) else caught-fail) in
        {1136}let cs_48: cipherstate = (if v_375 then 1-proj-3-tuple(v_374) else caught-fail) in
        {1137}let ssi_15: symmetricstate = (if v_373 then catch-fail((if v_375 then symmetricstatepack(cs_48,ck_55,hash(h_48,ciphertext_18)) else fail-any)) else caught-fail) in
        {1138}let v_376: bool = not-caught-fail(ssi_15) in
        {1139}let v_377: bitstring = (if v_363 then catch-fail((if v_364 then (if v_366 then (if v_373 then (if v_376 then (ssi_15,ciphertext_18) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1140}let v_378: bool = (not-caught-fail(v_377) && success?(1-proj-2-tuple(v_377))) in
        {1141}let ns_10: bitstring = (if v_378 then 2-proj-2-tuple(v_377) else caught-fail) in
        {1142}let ss_56: symmetricstate = (if v_378 then 1-proj-2-tuple(v_377) else caught-fail) in
        {1143}let basis_8: key = (if v_378 then key_m(me_2) else caught-fail) in
        {1144}let public_key_8: key = (if v_378 then catch-fail(dhexp(basis_8,validkey(g))) else caught-fail) in
        {1145}let v_379: bool = not-caught-fail(public_key_8) in
        {1146}let m_13: keypair = (if v_378 then catch-fail((if v_379 then keypairpack(validkey(public_key_8),basis_8) else fail-any)) else caught-fail) in
        {1147}let v_380: bool = not-caught-fail(m_13) in
        {1148}let plaintext_24: bitstring = (if v_380 then catch-fail(getpublickey(m_13)) else caught-fail) in
        {1149}let v_381: bool = not-caught-fail(plaintext_24) in
        {1150}let v_382: bitstring = (if v_381 then catch-fail(symmetricstateunpack(ss_56)) else caught-fail) in
        {1151}let v_383: bool = (not-caught-fail(v_382) && success?(1-proj-3-tuple(v_382))) in
        {1152}let h_49: bitstring = (if v_383 then 3-proj-3-tuple(v_382) else caught-fail) in
        {1153}let ck_56: key = (if v_383 then 2-proj-3-tuple(v_382) else caught-fail) in
        {1154}let cs_49: cipherstate = (if v_383 then 1-proj-3-tuple(v_382) else caught-fail) in
        {1155}let v_384: bitstring = (if v_383 then catch-fail(cipherstateunpack(cs_49)) else caught-fail) in
        {1156}let v_385: bool = (not-caught-fail(v_384) && success?(1-proj-2-tuple(v_384))) in
        {1157}let n_28: nonce = (if v_385 then 2-proj-2-tuple(v_384) else caught-fail) in
        {1158}let k_31: key = (if v_385 then 1-proj-2-tuple(v_384) else caught-fail) in
        {1161}let v_386: bitstring = (if v_385 then catch-fail(cipherstateunpack(cs_49)) else caught-fail) in
        {1162}let v_387: bool = (not-caught-fail(v_386) && success?(1-proj-2-tuple(v_386))) in
        {1163}let o_14: nonce = (if v_387 then 2-proj-2-tuple(v_386) else caught-fail) in
        {1164}let k_32: key = (if v_387 then 1-proj-2-tuple(v_386) else caught-fail) in
        {1160}let n_29: nonce = (if v_385 then increment_nonce(n_28) else caught-fail) in
        {1165}let csi_28: cipherstate = (if v_385 then catch-fail((if v_387 then cipherstatepack(k_32,n_29) else fail-any)) else caught-fail) in
        {1166}let v_388: bool = not-caught-fail(csi_28) in
        {1159}let e_21: bitstring = (if v_385 then encrypt(k_31,n_28,h_49,plaintext_24) else caught-fail) in
        {1167}let v_389: bitstring = (if v_383 then catch-fail((if v_385 then (if v_388 then (csi_28,e_21) else fail-any) else fail-any)) else caught-fail) in
        {1168}let v_390: bool = (not-caught-fail(v_389) && success?(1-proj-2-tuple(v_389))) in
        {1169}let ciphertext_19: bitstring = (if v_390 then 2-proj-2-tuple(v_389) else caught-fail) in
        {1170}let csi_29: cipherstate = (if v_390 then 1-proj-2-tuple(v_389) else caught-fail) in
        {1171}let ss_57: symmetricstate = (if v_390 then symmetricstatepack(csi_29,ck_56,h_49) else caught-fail) in
        {1172}let v_391: bitstring = (if v_390 then catch-fail(symmetricstateunpack(ss_57)) else caught-fail) in
        {1173}let v_392: bool = (not-caught-fail(v_391) && success?(1-proj-3-tuple(v_391))) in
        {1174}let h_50: bitstring = (if v_392 then 3-proj-3-tuple(v_391) else caught-fail) in
        {1175}let ck_57: key = (if v_392 then 2-proj-3-tuple(v_391) else caught-fail) in
        {1176}let cs_50: cipherstate = (if v_392 then 1-proj-3-tuple(v_391) else caught-fail) in
        {1177}let ssi_16: symmetricstate = (if v_390 then catch-fail((if v_392 then symmetricstatepack(cs_50,ck_57,hash(h_50,ciphertext_19)) else fail-any)) else caught-fail) in
        {1178}let v_393: bool = not-caught-fail(ssi_16) in
        {1179}let v_394: bitstring = (if v_380 then catch-fail((if v_381 then (if v_383 then (if v_390 then (if v_393 then (ssi_16,ciphertext_19) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1180}let v_395: bool = (not-caught-fail(v_394) && success?(1-proj-2-tuple(v_394))) in
        {1181}let nm_5: bitstring = (if v_395 then 2-proj-2-tuple(v_394) else caught-fail) in
        {1182}let ss_58: symmetricstate = (if v_395 then 1-proj-2-tuple(v_394) else caught-fail) in
        {1183}let v_396: bitstring = (if v_395 then catch-fail(keypairunpack(s_13)) else caught-fail) in
        {1184}let v_397: bool = (not-caught-fail(v_396) && success?(1-proj-2-tuple(v_396))) in
        {1185}let my_private_key_7: key = (if v_397 then 2-proj-2-tuple(v_396) else caught-fail) in
        {1186}let my_public_key_7: key = (if v_397 then 1-proj-2-tuple(v_396) else caught-fail) in
        {1187}let input_key_material_9: key = (if v_395 then catch-fail((if v_397 then dhexp(my_private_key_7,re_15) else fail-any)) else caught-fail) in
        {1188}let v_398: bool = not-caught-fail(input_key_material_9) in
        {1189}let v_399: bitstring = (if v_398 then catch-fail(symmetricstateunpack(ss_58)) else caught-fail) in
        {1190}let v_400: bool = (not-caught-fail(v_399) && success?(1-proj-3-tuple(v_399))) in
        {1191}let h_51: bitstring = (if v_400 then 3-proj-3-tuple(v_399) else caught-fail) in
        {1192}let ck_58: key = (if v_400 then 2-proj-3-tuple(v_399) else caught-fail) in
        {1193}let cs_51: cipherstate = (if v_400 then 1-proj-3-tuple(v_399) else caught-fail) in
        {1196}let output3_9: key = (if v_400 then hmac_hash3(ck_58,input_key_material_9) else caught-fail) in
        {1195}let output2_9: key = (if v_400 then hmac_hash2(ck_58,input_key_material_9) else caught-fail) in
        {1194}let output1_9: key = (if v_400 then hmac_hash1(ck_58,input_key_material_9) else caught-fail) in
        {1197}let v_401: bitstring = (if v_400 then catch-fail((output1_9,output2_9,output3_9)) else caught-fail) in
        {1198}let v_402: bool = (not-caught-fail(v_401) && success?(1-proj-3-tuple(v_401))) in
        {1199}let output_7: key = (if v_402 then 3-proj-3-tuple(v_401) else caught-fail) in
        {1200}let temp_k_7: key = (if v_402 then 2-proj-3-tuple(v_401) else caught-fail) in
        {1201}let ck_59: key = (if v_402 then 1-proj-3-tuple(v_401) else caught-fail) in
        {1202}let ss_59: symmetricstate = (if v_395 then catch-fail((if v_398 then (if v_400 then (if v_402 then symmetricstatepack(cipherstatepack(temp_k_7,minnonce),ck_59,h_51) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1203}let v_403: bool = not-caught-fail(ss_59) in
        {1204}let v_404: bitstring = (if v_403 then catch-fail(keypairunpack(m_13)) else caught-fail) in
        {1205}let v_405: bool = (not-caught-fail(v_404) && success?(1-proj-2-tuple(v_404))) in
        {1206}let my_private_key_8: key = (if v_405 then 2-proj-2-tuple(v_404) else caught-fail) in
        {1207}let my_public_key_8: key = (if v_405 then 1-proj-2-tuple(v_404) else caught-fail) in
        {1208}let input_key_material_10: key = (if v_403 then catch-fail((if v_405 then dhexp(my_private_key_8,re_15) else fail-any)) else caught-fail) in
        {1209}let v_406: bool = not-caught-fail(input_key_material_10) in
        {1210}let v_407: bitstring = (if v_406 then catch-fail(symmetricstateunpack(ss_59)) else caught-fail) in
        {1211}let v_408: bool = (not-caught-fail(v_407) && success?(1-proj-3-tuple(v_407))) in
        {1212}let h_52: bitstring = (if v_408 then 3-proj-3-tuple(v_407) else caught-fail) in
        {1213}let ck_60: key = (if v_408 then 2-proj-3-tuple(v_407) else caught-fail) in
        {1214}let cs_52: cipherstate = (if v_408 then 1-proj-3-tuple(v_407) else caught-fail) in
        {1217}let output3_10: key = (if v_408 then hmac_hash3(ck_60,input_key_material_10) else caught-fail) in
        {1216}let output2_10: key = (if v_408 then hmac_hash2(ck_60,input_key_material_10) else caught-fail) in
        {1215}let output1_10: key = (if v_408 then hmac_hash1(ck_60,input_key_material_10) else caught-fail) in
        {1218}let v_409: bitstring = (if v_408 then catch-fail((output1_10,output2_10,output3_10)) else caught-fail) in
        {1219}let v_410: bool = (not-caught-fail(v_409) && success?(1-proj-3-tuple(v_409))) in
        {1220}let output_8: key = (if v_410 then 3-proj-3-tuple(v_409) else caught-fail) in
        {1221}let temp_k_8: key = (if v_410 then 2-proj-3-tuple(v_409) else caught-fail) in
        {1222}let ck_61: key = (if v_410 then 1-proj-3-tuple(v_409) else caught-fail) in
        {1223}let ss_60: symmetricstate = (if v_403 then catch-fail((if v_406 then (if v_408 then (if v_410 then symmetricstatepack(cipherstatepack(temp_k_8,minnonce),ck_61,h_52) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1224}let v_411: bool = not-caught-fail(ss_60) in
        {1225}let v_412: bitstring = (if v_411 then catch-fail(symmetricstateunpack(ss_60)) else caught-fail) in
        {1226}let v_413: bool = (not-caught-fail(v_412) && success?(1-proj-3-tuple(v_412))) in
        {1227}let h_53: bitstring = (if v_413 then 3-proj-3-tuple(v_412) else caught-fail) in
        {1228}let ck_62: key = (if v_413 then 2-proj-3-tuple(v_412) else caught-fail) in
        {1229}let cs_53: cipherstate = (if v_413 then 1-proj-3-tuple(v_412) else caught-fail) in
        {1230}let v_414: bitstring = (if v_413 then catch-fail(cipherstateunpack(cs_53)) else caught-fail) in
        {1231}let v_415: bool = (not-caught-fail(v_414) && success?(1-proj-2-tuple(v_414))) in
        {1232}let n_30: nonce = (if v_415 then 2-proj-2-tuple(v_414) else caught-fail) in
        {1233}let k_33: key = (if v_415 then 1-proj-2-tuple(v_414) else caught-fail) in
        {1236}let v_416: bitstring = (if v_415 then catch-fail(cipherstateunpack(cs_53)) else caught-fail) in
        {1237}let v_417: bool = (not-caught-fail(v_416) && success?(1-proj-2-tuple(v_416))) in
        {1238}let o_15: nonce = (if v_417 then 2-proj-2-tuple(v_416) else caught-fail) in
        {1239}let k_34: key = (if v_417 then 1-proj-2-tuple(v_416) else caught-fail) in
        {1235}let n_31: nonce = (if v_415 then increment_nonce(n_30) else caught-fail) in
        {1240}let csi_30: cipherstate = (if v_415 then catch-fail((if v_417 then cipherstatepack(k_34,n_31) else fail-any)) else caught-fail) in
        {1241}let v_418: bool = not-caught-fail(csi_30) in
        {1050}let payload_4: bitstring = msg_b(me_2,them_2,sid_3) in
        {1234}let e_22: bitstring = (if v_415 then encrypt(k_33,n_30,h_53,payload_4) else caught-fail) in
        {1242}let v_419: bitstring = (if v_413 then catch-fail((if v_415 then (if v_418 then (csi_30,e_22) else fail-any) else fail-any)) else caught-fail) in
        {1243}let v_420: bool = (not-caught-fail(v_419) && success?(1-proj-2-tuple(v_419))) in
        {1244}let ciphertext_20: bitstring = (if v_420 then 2-proj-2-tuple(v_419) else caught-fail) in
        {1245}let csi_31: cipherstate = (if v_420 then 1-proj-2-tuple(v_419) else caught-fail) in
        {1246}let ss_61: symmetricstate = (if v_420 then symmetricstatepack(csi_31,ck_62,h_53) else caught-fail) in
        {1247}let v_421: bitstring = (if v_420 then catch-fail(symmetricstateunpack(ss_61)) else caught-fail) in
        {1248}let v_422: bool = (not-caught-fail(v_421) && success?(1-proj-3-tuple(v_421))) in
        {1249}let h_54: bitstring = (if v_422 then 3-proj-3-tuple(v_421) else caught-fail) in
        {1250}let ck_63: key = (if v_422 then 2-proj-3-tuple(v_421) else caught-fail) in
        {1251}let cs_54: cipherstate = (if v_422 then 1-proj-3-tuple(v_421) else caught-fail) in
        {1252}let ssi_17: symmetricstate = (if v_420 then catch-fail((if v_422 then symmetricstatepack(cs_54,ck_63,hash(h_54,ciphertext_20)) else fail-any)) else caught-fail) in
        {1253}let v_423: bool = not-caught-fail(ssi_17) in
        {1254}let v_424: bitstring = (if v_411 then catch-fail((if v_413 then (if v_420 then (if v_423 then (ssi_17,ciphertext_20) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1255}let v_425: bool = (not-caught-fail(v_424) && success?(1-proj-2-tuple(v_424))) in
        {1256}let ciphertext_21: bitstring = (if v_425 then 2-proj-2-tuple(v_424) else caught-fail) in
        {1257}let ss_62: symmetricstate = (if v_425 then 1-proj-2-tuple(v_424) else caught-fail) in
        {1260}let v_426: bitstring = (if v_425 then catch-fail(symmetricstateunpack(ss_62)) else caught-fail) in
        {1261}let v_427: bool = (not-caught-fail(v_426) && success?(1-proj-3-tuple(v_426))) in
        {1262}let h_55: bitstring = (if v_427 then 3-proj-3-tuple(v_426) else caught-fail) in
        {1263}let ck_64: key = (if v_427 then 2-proj-3-tuple(v_426) else caught-fail) in
        {1264}let cs_55: cipherstate = (if v_427 then 1-proj-3-tuple(v_426) else caught-fail) in
        {1265}let input_key_material_11: key = (if v_427 then zero else caught-fail) in
        {1268}let output3_11: key = (if v_427 then hmac_hash3(ck_64,input_key_material_11) else caught-fail) in
        {1267}let output2_11: key = (if v_427 then hmac_hash2(ck_64,input_key_material_11) else caught-fail) in
        {1266}let output1_11: key = (if v_427 then hmac_hash1(ck_64,input_key_material_11) else caught-fail) in
        {1269}let v_428: bitstring = (if v_427 then catch-fail((output1_11,output2_11,output3_11)) else caught-fail) in
        {1270}let v_429: bool = (not-caught-fail(v_428) && success?(1-proj-3-tuple(v_428))) in
        {1271}let temp_k3_2: key = (if v_429 then 3-proj-3-tuple(v_428) else caught-fail) in
        {1272}let temp_k2_2: key = (if v_429 then 2-proj-3-tuple(v_428) else caught-fail) in
        {1273}let temp_k1_2: key = (if v_429 then 1-proj-3-tuple(v_428) else caught-fail) in
        {1275}let cs2_10: cipherstate = (if v_429 then cipherstatepack(temp_k2_2,minnonce) else caught-fail) in
        {1274}let cs1_10: cipherstate = (if v_429 then cipherstatepack(temp_k1_2,minnonce) else caught-fail) in
        {1276}let v_430: bitstring = (if v_425 then catch-fail((if v_427 then (if v_429 then (ss_62,cs1_10,cs2_10) else fail-any) else fail-any)) else caught-fail) in
        {1277}let v_431: bool = (not-caught-fail(v_430) && success?(1-proj-3-tuple(v_430))) in
        {1278}let cs2_11: cipherstate = (if v_431 then 3-proj-3-tuple(v_430) else caught-fail) in
        {1279}let cs1_11: cipherstate = (if v_431 then 2-proj-3-tuple(v_430) else caught-fail) in
        {1280}let ssi_18: symmetricstate = (if v_431 then 1-proj-3-tuple(v_430) else caught-fail) in
        {1259}let message_buffer_4: bitstring = (if v_425 then concat4(ne_16,ns_10,nm_5,ciphertext_21) else caught-fail) in
        {1258}let hs_35: handshakestate = (if v_425 then handshakestatepack(ss_62,s_13,m_13,e_19,rs_14,rm_14,re_15,psk_12,initiator_10) else caught-fail) in
        {1281}let (hs_36: handshakestate,message_b_2: bitstring,cs1_12: cipherstate,cs2_12: cipherstate) = (if v_345 then (if v_347 then (if v_349 then (if v_350 then (if v_353 then (if v_361 then (if v_363 then (if v_378 then (if v_380 then (if v_395 then (if v_403 then (if v_411 then (if v_425 then (if v_431 then (hs_35,message_buffer_4,cs1_11,cs2_11) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1282}event SendMsg(me_2,them_2,stagepack_b(sid_3),msg_b(me_2,them_2,sid_3));
        {1283}insert statestore(me_2,them_2,sid_3,statepack_c(hs_36,cs1_12,cs2_12));
        {1284}out(pub, message_b_2)
    ) | (
        {1286}!
        {1352}get statestore(=me_2,=them_2,=sid_3,statepack_c(hs_37: handshakestate,cs1_13: cipherstate,cs2_13: cipherstate)) in
        {1287}let hs_38: handshakestate = handshakestatesetcs(hs_37,cs1_13) in
        {1288}in(pub, message_c_2: bitstring);
        {1289}let v_432: bitstring = catch-fail(handshakestateunpack(hs_38)) in
        {1290}let v_433: bool = (not-caught-fail(v_432) && success?(1-proj-9-tuple(v_432))) in
        {1291}let initiator_11: bool = (if v_433 then 9-proj-9-tuple(v_432) else caught-fail) in
        {1292}let psk_13: key = (if v_433 then 8-proj-9-tuple(v_432) else caught-fail) in
        {1293}let re_16: key = (if v_433 then 7-proj-9-tuple(v_432) else caught-fail) in
        {1294}let rm_15: key = (if v_433 then 6-proj-9-tuple(v_432) else caught-fail) in
        {1295}let rs_15: key = (if v_433 then 5-proj-9-tuple(v_432) else caught-fail) in
        {1296}let e_23: keypair = (if v_433 then 4-proj-9-tuple(v_432) else caught-fail) in
        {1297}let m_14: keypair = (if v_433 then 3-proj-9-tuple(v_432) else caught-fail) in
        {1298}let s_14: keypair = (if v_433 then 2-proj-9-tuple(v_432) else caught-fail) in
        {1299}let ss_63: symmetricstate = (if v_433 then 1-proj-9-tuple(v_432) else caught-fail) in
        {1300}let v_434: bitstring = (if v_433 then catch-fail(deconcat3(message_c_2)) else caught-fail) in
        {1301}let v_435: bool = (not-caught-fail(v_434) && success?(1-proj-3-tuple(v_434))) in
        {1302}let ciphertext_22: bitstring = (if v_435 then 3-proj-3-tuple(v_434) else caught-fail) in
        {1303}let ns_11: bitstring = (if v_435 then 2-proj-3-tuple(v_434) else caught-fail) in
        {1304}let ne_17: bitstring = (if v_435 then 1-proj-3-tuple(v_434) else caught-fail) in
        {1306}let v_436: bitstring = (if v_435 then catch-fail(symmetricstateunpack(ss_63)) else caught-fail) in
        {1307}let v_437: bool = (not-caught-fail(v_436) && success?(1-proj-3-tuple(v_436))) in
        {1308}let h_56: bitstring = (if v_437 then 3-proj-3-tuple(v_436) else caught-fail) in
        {1309}let ck_65: key = (if v_437 then 2-proj-3-tuple(v_436) else caught-fail) in
        {1310}let cs_56: cipherstate = (if v_437 then 1-proj-3-tuple(v_436) else caught-fail) in
        {1311}let v_438: bitstring = (if v_437 then catch-fail(cipherstateunpack(cs_56)) else caught-fail) in
        {1312}let v_439: bool = (not-caught-fail(v_438) && success?(1-proj-2-tuple(v_438))) in
        {1313}let n_32: nonce = (if v_439 then 2-proj-2-tuple(v_438) else caught-fail) in
        {1314}let k_35: key = (if v_439 then 1-proj-2-tuple(v_438) else caught-fail) in
        {1315}let d_9: aead = (if v_439 then catch-fail(decrypt(k_35,n_32,h_56,ciphertext_22)) else caught-fail) in
        {1316}let v_440: bool = not-caught-fail(d_9) in
        {1317}let v_441: bitstring = (if v_440 then catch-fail(aeadunpack(d_9)) else caught-fail) in
        {1318}let v_442: bool = (not-caught-fail(v_441) && success?(1-proj-3-tuple(v_441))) in
        {1319}let plaintext_25: bitstring = (if v_442 then 3-proj-3-tuple(v_441) else caught-fail) in
        {1320}let adi_9: bitstring = (if v_442 then 2-proj-3-tuple(v_441) else caught-fail) in
        {1321}let valid_23: bool = (if v_442 then 1-proj-3-tuple(v_441) else caught-fail) in
        {1323}let v_443: bitstring = (if v_442 then catch-fail(cipherstateunpack(cs_56)) else caught-fail) in
        {1324}let v_444: bool = (not-caught-fail(v_443) && success?(1-proj-2-tuple(v_443))) in
        {1325}let o_16: nonce = (if v_444 then 2-proj-2-tuple(v_443) else caught-fail) in
        {1326}let k_36: key = (if v_444 then 1-proj-2-tuple(v_443) else caught-fail) in
        {1322}let n_33: nonce = (if v_442 then increment_nonce(n_32) else caught-fail) in
        {1327}let csi_32: cipherstate = (if v_442 then catch-fail((if v_444 then cipherstatepack(k_36,n_33) else fail-any)) else caught-fail) in
        {1328}let v_445: bool = not-caught-fail(csi_32) in
        {1329}let v_446: bitstring = (if v_437 then catch-fail((if v_439 then (if v_440 then (if v_442 then (if v_445 then (csi_32,plaintext_25,valid_23) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1330}let v_447: bool = (not-caught-fail(v_446) && success?(1-proj-3-tuple(v_446))) in
        {1331}let valid_24: bool = (if v_447 then 3-proj-3-tuple(v_446) else caught-fail) in
        {1332}let plaintext_26: bitstring = (if v_447 then 2-proj-3-tuple(v_446) else caught-fail) in
        {1333}let csi_33: cipherstate = (if v_447 then 1-proj-3-tuple(v_446) else caught-fail) in
        {1334}let ss_64: symmetricstate = (if v_447 then symmetricstatepack(csi_33,ck_65,h_56) else caught-fail) in
        {1335}let v_448: bitstring = (if v_447 then catch-fail(symmetricstateunpack(ss_64)) else caught-fail) in
        {1336}let v_449: bool = (not-caught-fail(v_448) && success?(1-proj-3-tuple(v_448))) in
        {1337}let h_57: bitstring = (if v_449 then 3-proj-3-tuple(v_448) else caught-fail) in
        {1338}let ck_66: key = (if v_449 then 2-proj-3-tuple(v_448) else caught-fail) in
        {1339}let cs_57: cipherstate = (if v_449 then 1-proj-3-tuple(v_448) else caught-fail) in
        {1340}let ssi_19: symmetricstate = (if v_447 then catch-fail((if v_449 then symmetricstatepack(cs_57,ck_66,hash(h_57,ciphertext_22)) else fail-any)) else caught-fail) in
        {1341}let v_450: bool = not-caught-fail(ssi_19) in
        {1342}let v_451: bitstring = (if v_435 then catch-fail((if v_437 then (if v_447 then (if v_450 then (ssi_19,plaintext_26,valid_24) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1343}let v_452: bool = (not-caught-fail(v_451) && success?(1-proj-3-tuple(v_451))) in
        {1344}let valid2_7: bool = (if v_452 then 3-proj-3-tuple(v_451) else caught-fail) in
        {1345}let plaintext_27: bitstring = (if v_452 then 2-proj-3-tuple(v_451) else caught-fail) in
        {1346}let ss_65: symmetricstate = (if v_452 then 1-proj-3-tuple(v_451) else caught-fail) in
        {1305}let valid1_7: bool = (if v_435 then true else caught-fail) in
        {1347}let v_453: bool = (if v_452 then catch-fail((valid1_7 && valid2_7)) else caught-fail) in
        {1348}let hs_39: handshakestate = (if v_453 then handshakestatepack(ss_65,s_14,m_14,e_23,rs_15,rm_15,re_16,psk_13,initiator_11) else caught-fail) in
        {1349}let (hs_40: handshakestate,plaintext_c: bitstring,valid_25: bool) = (if v_433 then (if v_435 then (if v_452 then (if undo-catch-fail(v_453) then (hs_39,plaintext_27,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1350}event RecvMsg(me_2,them_2,stagepack_c(sid_3),plaintext_c);
        {1351}insert statestore(me_2,them_2,sid_3,statepack_d(hs_40,handshakestategetcs(hs_40),cs2_13))
    ) | (
        {1353}!
        {1410}get statestore(=me_2,=them_2,=sid_3,statepack_d(hs_41: handshakestate,cs1_14: cipherstate,cs2_14: cipherstate)) in
        {1354}let hs_42: handshakestate = handshakestatesetcs(hs_41,cs2_14) in
        {1356}let v_454: bitstring = catch-fail(handshakestateunpack(hs_42)) in
        {1357}let v_455: bool = (not-caught-fail(v_454) && success?(1-proj-9-tuple(v_454))) in
        {1358}let initiator_12: bool = (if v_455 then 9-proj-9-tuple(v_454) else caught-fail) in
        {1359}let psk_14: key = (if v_455 then 8-proj-9-tuple(v_454) else caught-fail) in
        {1360}let re_17: key = (if v_455 then 7-proj-9-tuple(v_454) else caught-fail) in
        {1361}let rm_16: key = (if v_455 then 6-proj-9-tuple(v_454) else caught-fail) in
        {1362}let rs_16: key = (if v_455 then 5-proj-9-tuple(v_454) else caught-fail) in
        {1363}let e_24: keypair = (if v_455 then 4-proj-9-tuple(v_454) else caught-fail) in
        {1364}let m_15: keypair = (if v_455 then 3-proj-9-tuple(v_454) else caught-fail) in
        {1365}let s_15: keypair = (if v_455 then 2-proj-9-tuple(v_454) else caught-fail) in
        {1366}let ss_66: symmetricstate = (if v_455 then 1-proj-9-tuple(v_454) else caught-fail) in
        {1367}let v_456: bitstring = (if v_455 then catch-fail((empty,empty,empty)) else caught-fail) in
        {1368}let v_457: bool = (not-caught-fail(v_456) && success?(1-proj-3-tuple(v_456))) in
        {1369}let ciphertext_23: bitstring = (if v_457 then 3-proj-3-tuple(v_456) else caught-fail) in
        {1370}let ns_12: bitstring = (if v_457 then 2-proj-3-tuple(v_456) else caught-fail) in
        {1371}let ne_18: bitstring = (if v_457 then 1-proj-3-tuple(v_456) else caught-fail) in
        {1372}let v_458: bitstring = (if v_457 then catch-fail(symmetricstateunpack(ss_66)) else caught-fail) in
        {1373}let v_459: bool = (not-caught-fail(v_458) && success?(1-proj-3-tuple(v_458))) in
        {1374}let h_58: bitstring = (if v_459 then 3-proj-3-tuple(v_458) else caught-fail) in
        {1375}let ck_67: key = (if v_459 then 2-proj-3-tuple(v_458) else caught-fail) in
        {1376}let cs_58: cipherstate = (if v_459 then 1-proj-3-tuple(v_458) else caught-fail) in
        {1377}let v_460: bitstring = (if v_459 then catch-fail(cipherstateunpack(cs_58)) else caught-fail) in
        {1378}let v_461: bool = (not-caught-fail(v_460) && success?(1-proj-2-tuple(v_460))) in
        {1379}let n_34: nonce = (if v_461 then 2-proj-2-tuple(v_460) else caught-fail) in
        {1380}let k_37: key = (if v_461 then 1-proj-2-tuple(v_460) else caught-fail) in
        {1383}let v_462: bitstring = (if v_461 then catch-fail(cipherstateunpack(cs_58)) else caught-fail) in
        {1384}let v_463: bool = (not-caught-fail(v_462) && success?(1-proj-2-tuple(v_462))) in
        {1385}let o_17: nonce = (if v_463 then 2-proj-2-tuple(v_462) else caught-fail) in
        {1386}let k_38: key = (if v_463 then 1-proj-2-tuple(v_462) else caught-fail) in
        {1382}let n_35: nonce = (if v_461 then increment_nonce(n_34) else caught-fail) in
        {1387}let csi_34: cipherstate = (if v_461 then catch-fail((if v_463 then cipherstatepack(k_38,n_35) else fail-any)) else caught-fail) in
        {1388}let v_464: bool = not-caught-fail(csi_34) in
        {1355}let payload_5: bitstring = msg_d(me_2,them_2,sid_3) in
        {1381}let e_25: bitstring = (if v_461 then encrypt(k_37,n_34,h_58,payload_5) else caught-fail) in
        {1389}let v_465: bitstring = (if v_459 then catch-fail((if v_461 then (if v_464 then (csi_34,e_25) else fail-any) else fail-any)) else caught-fail) in
        {1390}let v_466: bool = (not-caught-fail(v_465) && success?(1-proj-2-tuple(v_465))) in
        {1391}let ciphertext_24: bitstring = (if v_466 then 2-proj-2-tuple(v_465) else caught-fail) in
        {1392}let csi_35: cipherstate = (if v_466 then 1-proj-2-tuple(v_465) else caught-fail) in
        {1393}let ss_67: symmetricstate = (if v_466 then symmetricstatepack(csi_35,ck_67,h_58) else caught-fail) in
        {1394}let v_467: bitstring = (if v_466 then catch-fail(symmetricstateunpack(ss_67)) else caught-fail) in
        {1395}let v_468: bool = (not-caught-fail(v_467) && success?(1-proj-3-tuple(v_467))) in
        {1396}let h_59: bitstring = (if v_468 then 3-proj-3-tuple(v_467) else caught-fail) in
        {1397}let ck_68: key = (if v_468 then 2-proj-3-tuple(v_467) else caught-fail) in
        {1398}let cs_59: cipherstate = (if v_468 then 1-proj-3-tuple(v_467) else caught-fail) in
        {1399}let ssi_20: symmetricstate = (if v_466 then catch-fail((if v_468 then symmetricstatepack(cs_59,ck_68,hash(h_59,ciphertext_24)) else fail-any)) else caught-fail) in
        {1400}let v_469: bool = not-caught-fail(ssi_20) in
        {1401}let v_470: bitstring = (if v_457 then catch-fail((if v_459 then (if v_466 then (if v_469 then (ssi_20,ciphertext_24) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1402}let v_471: bool = (not-caught-fail(v_470) && success?(1-proj-2-tuple(v_470))) in
        {1403}let ciphertext_25: bitstring = (if v_471 then 2-proj-2-tuple(v_470) else caught-fail) in
        {1404}let ss_68: symmetricstate = (if v_471 then 1-proj-2-tuple(v_470) else caught-fail) in
        {1406}let message_buffer_5: bitstring = (if v_471 then concat3(ne_18,ns_12,ciphertext_25) else caught-fail) in
        {1405}let hs_43: handshakestate = (if v_471 then handshakestatepack(ss_68,s_15,m_15,e_24,rs_16,rm_16,re_17,psk_14,initiator_12) else caught-fail) in
        {1407}let (hs_44: handshakestate,message_d_2: bitstring) = (if v_455 then (if v_457 then (if v_471 then (hs_43,message_buffer_5) else fail-any) else fail-any) else fail-any) in
        {1408}event SendMsg(me_2,them_2,stagepack_d(sid_3),msg_d(me_2,them_2,sid_3));
        {1409}out(pub, message_d_2)
    ) | (
        {1411}event LeakS(phase0,me_2);
        {1412}event LeakM(phase0,me_2);
        {1413}out(pub, (key_s(me_2),key_m(me_2)))
    ) | (
        {1414}phase 1;
        {1415}event LeakS(phase1,me_2);
        {1416}event LeakM(phase1,me_2);
        {1417}out(pub, (key_s(me_2),key_m(me_2)))
    )
) | (
    {1422}let m_16: keypair = keypairpack(empty,empty) in
    {1421}let s_16: keypair = keypairpack(empty,empty) in
    {1423}out(pub, (getpublickey(s_16),getpublickey(m_16)));
    {1420}let sid_4: sessionid = sid in
    {1419}let them_3: principal = charlie in
    {1418}let me_3: principal = bob in
    (
        {1433}let k_39: key = empty in
        {1434}let cs_60: cipherstate = cipherstatepack(k_39,minnonce) in
        {1430}let protocol_name_3: bitstring = somename in
        {1431}let h_60: bitstring = hash(protocol_name_3,empty) in
        {1432}let ck_69: key = h_60 in
        {1435}let ss_69: symmetricstate = symmetricstatepack(cs_60,ck_69,h_60) in
        {1436}let v_472: bitstring = catch-fail(symmetricstateunpack(ss_69)) in
        {1437}let v_473: bool = (not-caught-fail(v_472) && success?(1-proj-3-tuple(v_472))) in
        {1438}let h_61: bitstring = (if v_473 then 3-proj-3-tuple(v_472) else caught-fail) in
        {1439}let ck_70: key = (if v_473 then 2-proj-3-tuple(v_472) else caught-fail) in
        {1440}let cs_61: cipherstate = (if v_473 then 1-proj-3-tuple(v_472) else caught-fail) in
        {1428}let prologue_3: bitstring = empty in
        {1441}let ss_70: symmetricstate = catch-fail((if v_473 then symmetricstatepack(cs_61,ck_70,hash(h_61,prologue_3)) else fail-any)) in
        {1442}let v_474: bool = not-caught-fail(ss_70) in
        {1429}let psk_15: key = empty in
        {1427}let re_18: key = empty in
        {1426}let rm_17: key = empty in
        {1425}let rs_17: key = empty in
        {1424}let e_26: keypair = keypairpack(empty,empty) in
        {1443}let hs_45: handshakestate = (if v_474 then handshakestatepack(ss_70,s_16,m_16,e_26,rs_17,rm_17,re_18,psk_15,false) else fail-any) in
        {1444}insert statestore(me_3,them_3,sid_4,statepack_a(hs_45))
    ) | (
        {1517}get statestore(=me_3,=them_3,=sid_4,statepack_a(hs_46: handshakestate)) in
        {1445}in(pub, message_a_3: bitstring);
        {1446}let v_475: bitstring = catch-fail(handshakestateunpack(hs_46)) in
        {1447}let v_476: bool = (not-caught-fail(v_475) && success?(1-proj-9-tuple(v_475))) in
        {1448}let initiator_13: bool = (if v_476 then 9-proj-9-tuple(v_475) else caught-fail) in
        {1449}let psk_16: key = (if v_476 then 8-proj-9-tuple(v_475) else caught-fail) in
        {1450}let re_19: key = (if v_476 then 7-proj-9-tuple(v_475) else caught-fail) in
        {1451}let rm_18: key = (if v_476 then 6-proj-9-tuple(v_475) else caught-fail) in
        {1452}let rs_18: key = (if v_476 then 5-proj-9-tuple(v_475) else caught-fail) in
        {1453}let e_27: keypair = (if v_476 then 4-proj-9-tuple(v_475) else caught-fail) in
        {1454}let m_17: keypair = (if v_476 then 3-proj-9-tuple(v_475) else caught-fail) in
        {1455}let s_17: keypair = (if v_476 then 2-proj-9-tuple(v_475) else caught-fail) in
        {1456}let ss_71: symmetricstate = (if v_476 then 1-proj-9-tuple(v_475) else caught-fail) in
        {1457}let v_477: bitstring = (if v_476 then catch-fail(deconcat3(message_a_3)) else caught-fail) in
        {1458}let v_478: bool = (not-caught-fail(v_477) && success?(1-proj-3-tuple(v_477))) in
        {1459}let ciphertext_26: bitstring = (if v_478 then 3-proj-3-tuple(v_477) else caught-fail) in
        {1460}let ns_13: bitstring = (if v_478 then 2-proj-3-tuple(v_477) else caught-fail) in
        {1461}let ne_19: bitstring = (if v_478 then 1-proj-3-tuple(v_477) else caught-fail) in
        {1464}let v_479: bitstring = (if v_478 then catch-fail(symmetricstateunpack(ss_71)) else caught-fail) in
        {1465}let v_480: bool = (not-caught-fail(v_479) && success?(1-proj-3-tuple(v_479))) in
        {1466}let h_62: bitstring = (if v_480 then 3-proj-3-tuple(v_479) else caught-fail) in
        {1467}let ck_71: key = (if v_480 then 2-proj-3-tuple(v_479) else caught-fail) in
        {1468}let cs_62: cipherstate = (if v_480 then 1-proj-3-tuple(v_479) else caught-fail) in
        {1463}let re_20: key = (if v_478 then ne_19 else caught-fail) in
        {1469}let ss_72: symmetricstate = (if v_478 then catch-fail((if v_480 then symmetricstatepack(cs_62,ck_71,hash(h_62,re_20)) else fail-any)) else caught-fail) in
        {1470}let v_481: bool = not-caught-fail(ss_72) in
        {1471}let v_482: bitstring = (if v_481 then catch-fail(symmetricstateunpack(ss_72)) else caught-fail) in
        {1472}let v_483: bool = (not-caught-fail(v_482) && success?(1-proj-3-tuple(v_482))) in
        {1473}let h_63: bitstring = (if v_483 then 3-proj-3-tuple(v_482) else caught-fail) in
        {1474}let ck_72: key = (if v_483 then 2-proj-3-tuple(v_482) else caught-fail) in
        {1475}let cs_63: cipherstate = (if v_483 then 1-proj-3-tuple(v_482) else caught-fail) in
        {1476}let v_484: bitstring = (if v_483 then catch-fail(cipherstateunpack(cs_63)) else caught-fail) in
        {1477}let v_485: bool = (not-caught-fail(v_484) && success?(1-proj-2-tuple(v_484))) in
        {1478}let n_36: nonce = (if v_485 then 2-proj-2-tuple(v_484) else caught-fail) in
        {1479}let k_40: key = (if v_485 then 1-proj-2-tuple(v_484) else caught-fail) in
        {1480}let d_10: aead = (if v_485 then catch-fail(decrypt(k_40,n_36,h_63,ciphertext_26)) else caught-fail) in
        {1481}let v_486: bool = not-caught-fail(d_10) in
        {1482}let v_487: bitstring = (if v_486 then catch-fail(aeadunpack(d_10)) else caught-fail) in
        {1483}let v_488: bool = (not-caught-fail(v_487) && success?(1-proj-3-tuple(v_487))) in
        {1484}let plaintext_28: bitstring = (if v_488 then 3-proj-3-tuple(v_487) else caught-fail) in
        {1485}let adi_10: bitstring = (if v_488 then 2-proj-3-tuple(v_487) else caught-fail) in
        {1486}let valid_26: bool = (if v_488 then 1-proj-3-tuple(v_487) else caught-fail) in
        {1488}let v_489: bitstring = (if v_488 then catch-fail(cipherstateunpack(cs_63)) else caught-fail) in
        {1489}let v_490: bool = (not-caught-fail(v_489) && success?(1-proj-2-tuple(v_489))) in
        {1490}let o_18: nonce = (if v_490 then 2-proj-2-tuple(v_489) else caught-fail) in
        {1491}let k_41: key = (if v_490 then 1-proj-2-tuple(v_489) else caught-fail) in
        {1487}let n_37: nonce = (if v_488 then increment_nonce(n_36) else caught-fail) in
        {1492}let csi_36: cipherstate = (if v_488 then catch-fail((if v_490 then cipherstatepack(k_41,n_37) else fail-any)) else caught-fail) in
        {1493}let v_491: bool = not-caught-fail(csi_36) in
        {1494}let v_492: bitstring = (if v_483 then catch-fail((if v_485 then (if v_486 then (if v_488 then (if v_491 then (csi_36,plaintext_28,valid_26) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1495}let v_493: bool = (not-caught-fail(v_492) && success?(1-proj-3-tuple(v_492))) in
        {1496}let valid_27: bool = (if v_493 then 3-proj-3-tuple(v_492) else caught-fail) in
        {1497}let plaintext_29: bitstring = (if v_493 then 2-proj-3-tuple(v_492) else caught-fail) in
        {1498}let csi_37: cipherstate = (if v_493 then 1-proj-3-tuple(v_492) else caught-fail) in
        {1499}let ss_73: symmetricstate = (if v_493 then symmetricstatepack(csi_37,ck_72,h_63) else caught-fail) in
        {1500}let v_494: bitstring = (if v_493 then catch-fail(symmetricstateunpack(ss_73)) else caught-fail) in
        {1501}let v_495: bool = (not-caught-fail(v_494) && success?(1-proj-3-tuple(v_494))) in
        {1502}let h_64: bitstring = (if v_495 then 3-proj-3-tuple(v_494) else caught-fail) in
        {1503}let ck_73: key = (if v_495 then 2-proj-3-tuple(v_494) else caught-fail) in
        {1504}let cs_64: cipherstate = (if v_495 then 1-proj-3-tuple(v_494) else caught-fail) in
        {1505}let ssi_21: symmetricstate = (if v_493 then catch-fail((if v_495 then symmetricstatepack(cs_64,ck_73,hash(h_64,ciphertext_26)) else fail-any)) else caught-fail) in
        {1506}let v_496: bool = not-caught-fail(ssi_21) in
        {1507}let v_497: bitstring = (if v_481 then catch-fail((if v_483 then (if v_493 then (if v_496 then (ssi_21,plaintext_29,valid_27) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1508}let v_498: bool = (not-caught-fail(v_497) && success?(1-proj-3-tuple(v_497))) in
        {1509}let valid2_8: bool = (if v_498 then 3-proj-3-tuple(v_497) else caught-fail) in
        {1510}let plaintext_30: bitstring = (if v_498 then 2-proj-3-tuple(v_497) else caught-fail) in
        {1511}let ss_74: symmetricstate = (if v_498 then 1-proj-3-tuple(v_497) else caught-fail) in
        {1462}let valid1_8: bool = (if v_478 then true else caught-fail) in
        {1512}let v_499: bool = (if v_498 then catch-fail((valid1_8 && valid2_8)) else caught-fail) in
        {1513}let hs_47: handshakestate = (if v_499 then handshakestatepack(ss_74,s_17,m_17,e_27,rs_18,rm_18,re_20,psk_16,initiator_13) else caught-fail) in
        {1514}let (hs_48: handshakestate,plaintext_a_1: bitstring,valid_28: bool) = (if v_476 then (if v_478 then (if v_481 then (if v_498 then (if undo-catch-fail(v_499) then (hs_47,plaintext_30,true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1515}event RecvMsg(me_3,them_3,stagepack_a(sid_4),plaintext_a_1);
        {1516}insert statestore(me_3,them_3,sid_4,statepack_b(hs_48))
    ) | (
        {1753}get statestore(=me_3,=them_3,=sid_4,statepack_b(hs_49: handshakestate)) in
        {1519}let v_500: bitstring = catch-fail(handshakestateunpack(hs_49)) in
        {1520}let v_501: bool = (not-caught-fail(v_500) && success?(1-proj-9-tuple(v_500))) in
        {1521}let initiator_14: bool = (if v_501 then 9-proj-9-tuple(v_500) else caught-fail) in
        {1522}let psk_17: key = (if v_501 then 8-proj-9-tuple(v_500) else caught-fail) in
        {1523}let re_21: key = (if v_501 then 7-proj-9-tuple(v_500) else caught-fail) in
        {1524}let rm_19: key = (if v_501 then 6-proj-9-tuple(v_500) else caught-fail) in
        {1525}let rs_19: key = (if v_501 then 5-proj-9-tuple(v_500) else caught-fail) in
        {1526}let e_28: keypair = (if v_501 then 4-proj-9-tuple(v_500) else caught-fail) in
        {1527}let m_18: keypair = (if v_501 then 3-proj-9-tuple(v_500) else caught-fail) in
        {1528}let s_18: keypair = (if v_501 then 2-proj-9-tuple(v_500) else caught-fail) in
        {1529}let ss_75: symmetricstate = (if v_501 then 1-proj-9-tuple(v_500) else caught-fail) in
        {1530}let v_502: bitstring = (if v_501 then catch-fail((empty,empty,empty,empty)) else caught-fail) in
        {1531}let v_503: bool = (not-caught-fail(v_502) && success?(1-proj-4-tuple(v_502))) in
        {1532}let ciphertext_27: bitstring = (if v_503 then 4-proj-4-tuple(v_502) else caught-fail) in
        {1533}let nm_6: bitstring = (if v_503 then 3-proj-4-tuple(v_502) else caught-fail) in
        {1534}let ns_14: bitstring = (if v_503 then 2-proj-4-tuple(v_502) else caught-fail) in
        {1535}let ne_20: bitstring = (if v_503 then 1-proj-4-tuple(v_502) else caught-fail) in
        {1536}let basis_9: key = (if v_503 then key_e(me_3,them_3,sid_4) else caught-fail) in
        {1537}let public_key_9: key = (if v_503 then catch-fail(dhexp(basis_9,validkey(g))) else caught-fail) in
        {1538}let v_504: bool = not-caught-fail(public_key_9) in
        {1539}let e_29: keypair = (if v_503 then catch-fail((if v_504 then keypairpack(validkey(public_key_9),basis_9) else fail-any)) else caught-fail) in
        {1540}let v_505: bool = not-caught-fail(e_29) in
        {1541}let ne_21: bitstring = (if v_505 then catch-fail(getpublickey(e_29)) else caught-fail) in
        {1542}let v_506: bool = not-caught-fail(ne_21) in
        {1543}let v_507: bitstring = (if v_506 then catch-fail(symmetricstateunpack(ss_75)) else caught-fail) in
        {1544}let v_508: bool = (not-caught-fail(v_507) && success?(1-proj-3-tuple(v_507))) in
        {1545}let h_65: bitstring = (if v_508 then 3-proj-3-tuple(v_507) else caught-fail) in
        {1546}let ck_74: key = (if v_508 then 2-proj-3-tuple(v_507) else caught-fail) in
        {1547}let cs_65: cipherstate = (if v_508 then 1-proj-3-tuple(v_507) else caught-fail) in
        {1548}let ss_76: symmetricstate = (if v_506 then catch-fail((if v_508 then symmetricstatepack(cs_65,ck_74,hash(h_65,ne_21)) else fail-any)) else caught-fail) in
        {1549}let v_509: bool = not-caught-fail(ss_76) in
        {1550}let v_510: bitstring = (if v_509 then catch-fail(keypairunpack(e_29)) else caught-fail) in
        {1551}let v_511: bool = (not-caught-fail(v_510) && success?(1-proj-2-tuple(v_510))) in
        {1552}let my_private_key_9: key = (if v_511 then 2-proj-2-tuple(v_510) else caught-fail) in
        {1553}let my_public_key_9: key = (if v_511 then 1-proj-2-tuple(v_510) else caught-fail) in
        {1554}let input_key_material_12: key = (if v_509 then catch-fail((if v_511 then dhexp(my_private_key_9,re_21) else fail-any)) else caught-fail) in
        {1555}let v_512: bool = not-caught-fail(input_key_material_12) in
        {1556}let v_513: bitstring = (if v_512 then catch-fail(symmetricstateunpack(ss_76)) else caught-fail) in
        {1557}let v_514: bool = (not-caught-fail(v_513) && success?(1-proj-3-tuple(v_513))) in
        {1558}let h_66: bitstring = (if v_514 then 3-proj-3-tuple(v_513) else caught-fail) in
        {1559}let ck_75: key = (if v_514 then 2-proj-3-tuple(v_513) else caught-fail) in
        {1560}let cs_66: cipherstate = (if v_514 then 1-proj-3-tuple(v_513) else caught-fail) in
        {1563}let output3_12: key = (if v_514 then hmac_hash3(ck_75,input_key_material_12) else caught-fail) in
        {1562}let output2_12: key = (if v_514 then hmac_hash2(ck_75,input_key_material_12) else caught-fail) in
        {1561}let output1_12: key = (if v_514 then hmac_hash1(ck_75,input_key_material_12) else caught-fail) in
        {1564}let v_515: bitstring = (if v_514 then catch-fail((output1_12,output2_12,output3_12)) else caught-fail) in
        {1565}let v_516: bool = (not-caught-fail(v_515) && success?(1-proj-3-tuple(v_515))) in
        {1566}let output_9: key = (if v_516 then 3-proj-3-tuple(v_515) else caught-fail) in
        {1567}let temp_k_9: key = (if v_516 then 2-proj-3-tuple(v_515) else caught-fail) in
        {1568}let ck_76: key = (if v_516 then 1-proj-3-tuple(v_515) else caught-fail) in
        {1569}let ss_77: symmetricstate = (if v_509 then catch-fail((if v_512 then (if v_514 then (if v_516 then symmetricstatepack(cipherstatepack(temp_k_9,minnonce),ck_76,h_66) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1570}let v_517: bool = not-caught-fail(ss_77) in
        {1571}let basis_10: key = (if v_517 then key_s(me_3) else caught-fail) in
        {1572}let public_key_10: key = (if v_517 then catch-fail(dhexp(basis_10,validkey(g))) else caught-fail) in
        {1573}let v_518: bool = not-caught-fail(public_key_10) in
        {1574}let s_19: keypair = (if v_517 then catch-fail((if v_518 then keypairpack(validkey(public_key_10),basis_10) else fail-any)) else caught-fail) in
        {1575}let v_519: bool = not-caught-fail(s_19) in
        {1576}let plaintext_31: bitstring = (if v_519 then catch-fail(getpublickey(s_19)) else caught-fail) in
        {1577}let v_520: bool = not-caught-fail(plaintext_31) in
        {1578}let v_521: bitstring = (if v_520 then catch-fail(symmetricstateunpack(ss_77)) else caught-fail) in
        {1579}let v_522: bool = (not-caught-fail(v_521) && success?(1-proj-3-tuple(v_521))) in
        {1580}let h_67: bitstring = (if v_522 then 3-proj-3-tuple(v_521) else caught-fail) in
        {1581}let ck_77: key = (if v_522 then 2-proj-3-tuple(v_521) else caught-fail) in
        {1582}let cs_67: cipherstate = (if v_522 then 1-proj-3-tuple(v_521) else caught-fail) in
        {1583}let v_523: bitstring = (if v_522 then catch-fail(cipherstateunpack(cs_67)) else caught-fail) in
        {1584}let v_524: bool = (not-caught-fail(v_523) && success?(1-proj-2-tuple(v_523))) in
        {1585}let n_38: nonce = (if v_524 then 2-proj-2-tuple(v_523) else caught-fail) in
        {1586}let k_42: key = (if v_524 then 1-proj-2-tuple(v_523) else caught-fail) in
        {1589}let v_525: bitstring = (if v_524 then catch-fail(cipherstateunpack(cs_67)) else caught-fail) in
        {1590}let v_526: bool = (not-caught-fail(v_525) && success?(1-proj-2-tuple(v_525))) in
        {1591}let o_19: nonce = (if v_526 then 2-proj-2-tuple(v_525) else caught-fail) in
        {1592}let k_43: key = (if v_526 then 1-proj-2-tuple(v_525) else caught-fail) in
        {1588}let n_39: nonce = (if v_524 then increment_nonce(n_38) else caught-fail) in
        {1593}let csi_38: cipherstate = (if v_524 then catch-fail((if v_526 then cipherstatepack(k_43,n_39) else fail-any)) else caught-fail) in
        {1594}let v_527: bool = not-caught-fail(csi_38) in
        {1587}let e_30: bitstring = (if v_524 then encrypt(k_42,n_38,h_67,plaintext_31) else caught-fail) in
        {1595}let v_528: bitstring = (if v_522 then catch-fail((if v_524 then (if v_527 then (csi_38,e_30) else fail-any) else fail-any)) else caught-fail) in
        {1596}let v_529: bool = (not-caught-fail(v_528) && success?(1-proj-2-tuple(v_528))) in
        {1597}let ciphertext_28: bitstring = (if v_529 then 2-proj-2-tuple(v_528) else caught-fail) in
        {1598}let csi_39: cipherstate = (if v_529 then 1-proj-2-tuple(v_528) else caught-fail) in
        {1599}let ss_78: symmetricstate = (if v_529 then symmetricstatepack(csi_39,ck_77,h_67) else caught-fail) in
        {1600}let v_530: bitstring = (if v_529 then catch-fail(symmetricstateunpack(ss_78)) else caught-fail) in
        {1601}let v_531: bool = (not-caught-fail(v_530) && success?(1-proj-3-tuple(v_530))) in
        {1602}let h_68: bitstring = (if v_531 then 3-proj-3-tuple(v_530) else caught-fail) in
        {1603}let ck_78: key = (if v_531 then 2-proj-3-tuple(v_530) else caught-fail) in
        {1604}let cs_68: cipherstate = (if v_531 then 1-proj-3-tuple(v_530) else caught-fail) in
        {1605}let ssi_22: symmetricstate = (if v_529 then catch-fail((if v_531 then symmetricstatepack(cs_68,ck_78,hash(h_68,ciphertext_28)) else fail-any)) else caught-fail) in
        {1606}let v_532: bool = not-caught-fail(ssi_22) in
        {1607}let v_533: bitstring = (if v_519 then catch-fail((if v_520 then (if v_522 then (if v_529 then (if v_532 then (ssi_22,ciphertext_28) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1608}let v_534: bool = (not-caught-fail(v_533) && success?(1-proj-2-tuple(v_533))) in
        {1609}let ns_15: bitstring = (if v_534 then 2-proj-2-tuple(v_533) else caught-fail) in
        {1610}let ss_79: symmetricstate = (if v_534 then 1-proj-2-tuple(v_533) else caught-fail) in
        {1611}let basis_11: key = (if v_534 then key_m(me_3) else caught-fail) in
        {1612}let public_key_11: key = (if v_534 then catch-fail(dhexp(basis_11,validkey(g))) else caught-fail) in
        {1613}let v_535: bool = not-caught-fail(public_key_11) in
        {1614}let m_19: keypair = (if v_534 then catch-fail((if v_535 then keypairpack(validkey(public_key_11),basis_11) else fail-any)) else caught-fail) in
        {1615}let v_536: bool = not-caught-fail(m_19) in
        {1616}let plaintext_32: bitstring = (if v_536 then catch-fail(getpublickey(m_19)) else caught-fail) in
        {1617}let v_537: bool = not-caught-fail(plaintext_32) in
        {1618}let v_538: bitstring = (if v_537 then catch-fail(symmetricstateunpack(ss_79)) else caught-fail) in
        {1619}let v_539: bool = (not-caught-fail(v_538) && success?(1-proj-3-tuple(v_538))) in
        {1620}let h_69: bitstring = (if v_539 then 3-proj-3-tuple(v_538) else caught-fail) in
        {1621}let ck_79: key = (if v_539 then 2-proj-3-tuple(v_538) else caught-fail) in
        {1622}let cs_69: cipherstate = (if v_539 then 1-proj-3-tuple(v_538) else caught-fail) in
        {1623}let v_540: bitstring = (if v_539 then catch-fail(cipherstateunpack(cs_69)) else caught-fail) in
        {1624}let v_541: bool = (not-caught-fail(v_540) && success?(1-proj-2-tuple(v_540))) in
        {1625}let n_40: nonce = (if v_541 then 2-proj-2-tuple(v_540) else caught-fail) in
        {1626}let k_44: key = (if v_541 then 1-proj-2-tuple(v_540) else caught-fail) in
        {1629}let v_542: bitstring = (if v_541 then catch-fail(cipherstateunpack(cs_69)) else caught-fail) in
        {1630}let v_543: bool = (not-caught-fail(v_542) && success?(1-proj-2-tuple(v_542))) in
        {1631}let o_20: nonce = (if v_543 then 2-proj-2-tuple(v_542) else caught-fail) in
        {1632}let k_45: key = (if v_543 then 1-proj-2-tuple(v_542) else caught-fail) in
        {1628}let n_41: nonce = (if v_541 then increment_nonce(n_40) else caught-fail) in
        {1633}let csi_40: cipherstate = (if v_541 then catch-fail((if v_543 then cipherstatepack(k_45,n_41) else fail-any)) else caught-fail) in
        {1634}let v_544: bool = not-caught-fail(csi_40) in
        {1627}let e_31: bitstring = (if v_541 then encrypt(k_44,n_40,h_69,plaintext_32) else caught-fail) in
        {1635}let v_545: bitstring = (if v_539 then catch-fail((if v_541 then (if v_544 then (csi_40,e_31) else fail-any) else fail-any)) else caught-fail) in
        {1636}let v_546: bool = (not-caught-fail(v_545) && success?(1-proj-2-tuple(v_545))) in
        {1637}let ciphertext_29: bitstring = (if v_546 then 2-proj-2-tuple(v_545) else caught-fail) in
        {1638}let csi_41: cipherstate = (if v_546 then 1-proj-2-tuple(v_545) else caught-fail) in
        {1639}let ss_80: symmetricstate = (if v_546 then symmetricstatepack(csi_41,ck_79,h_69) else caught-fail) in
        {1640}let v_547: bitstring = (if v_546 then catch-fail(symmetricstateunpack(ss_80)) else caught-fail) in
        {1641}let v_548: bool = (not-caught-fail(v_547) && success?(1-proj-3-tuple(v_547))) in
        {1642}let h_70: bitstring = (if v_548 then 3-proj-3-tuple(v_547) else caught-fail) in
        {1643}let ck_80: key = (if v_548 then 2-proj-3-tuple(v_547) else caught-fail) in
        {1644}let cs_70: cipherstate = (if v_548 then 1-proj-3-tuple(v_547) else caught-fail) in
        {1645}let ssi_23: symmetricstate = (if v_546 then catch-fail((if v_548 then symmetricstatepack(cs_70,ck_80,hash(h_70,ciphertext_29)) else fail-any)) else caught-fail) in
        {1646}let v_549: bool = not-caught-fail(ssi_23) in
        {1647}let v_550: bitstring = (if v_536 then catch-fail((if v_537 then (if v_539 then (if v_546 then (if v_549 then (ssi_23,ciphertext_29) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1648}let v_551: bool = (not-caught-fail(v_550) && success?(1-proj-2-tuple(v_550))) in
        {1649}let nm_7: bitstring = (if v_551 then 2-proj-2-tuple(v_550) else caught-fail) in
        {1650}let ss_81: symmetricstate = (if v_551 then 1-proj-2-tuple(v_550) else caught-fail) in
        {1651}let v_552: bitstring = (if v_551 then catch-fail(keypairunpack(s_19)) else caught-fail) in
        {1652}let v_553: bool = (not-caught-fail(v_552) && success?(1-proj-2-tuple(v_552))) in
        {1653}let my_private_key_10: key = (if v_553 then 2-proj-2-tuple(v_552) else caught-fail) in
        {1654}let my_public_key_10: key = (if v_553 then 1-proj-2-tuple(v_552) else caught-fail) in
        {1655}let input_key_material_13: key = (if v_551 then catch-fail((if v_553 then dhexp(my_private_key_10,re_21) else fail-any)) else caught-fail) in
        {1656}let v_554: bool = not-caught-fail(input_key_material_13) in
        {1657}let v_555: bitstring = (if v_554 then catch-fail(symmetricstateunpack(ss_81)) else caught-fail) in
        {1658}let v_556: bool = (not-caught-fail(v_555) && success?(1-proj-3-tuple(v_555))) in
        {1659}let h_71: bitstring = (if v_556 then 3-proj-3-tuple(v_555) else caught-fail) in
        {1660}let ck_81: key = (if v_556 then 2-proj-3-tuple(v_555) else caught-fail) in
        {1661}let cs_71: cipherstate = (if v_556 then 1-proj-3-tuple(v_555) else caught-fail) in
        {1664}let output3_13: key = (if v_556 then hmac_hash3(ck_81,input_key_material_13) else caught-fail) in
        {1663}let output2_13: key = (if v_556 then hmac_hash2(ck_81,input_key_material_13) else caught-fail) in
        {1662}let output1_13: key = (if v_556 then hmac_hash1(ck_81,input_key_material_13) else caught-fail) in
        {1665}let v_557: bitstring = (if v_556 then catch-fail((output1_13,output2_13,output3_13)) else caught-fail) in
        {1666}let v_558: bool = (not-caught-fail(v_557) && success?(1-proj-3-tuple(v_557))) in
        {1667}let output_10: key = (if v_558 then 3-proj-3-tuple(v_557) else caught-fail) in
        {1668}let temp_k_10: key = (if v_558 then 2-proj-3-tuple(v_557) else caught-fail) in
        {1669}let ck_82: key = (if v_558 then 1-proj-3-tuple(v_557) else caught-fail) in
        {1670}let ss_82: symmetricstate = (if v_551 then catch-fail((if v_554 then (if v_556 then (if v_558 then symmetricstatepack(cipherstatepack(temp_k_10,minnonce),ck_82,h_71) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1671}let v_559: bool = not-caught-fail(ss_82) in
        {1672}let v_560: bitstring = (if v_559 then catch-fail(keypairunpack(m_19)) else caught-fail) in
        {1673}let v_561: bool = (not-caught-fail(v_560) && success?(1-proj-2-tuple(v_560))) in
        {1674}let my_private_key_11: key = (if v_561 then 2-proj-2-tuple(v_560) else caught-fail) in
        {1675}let my_public_key_11: key = (if v_561 then 1-proj-2-tuple(v_560) else caught-fail) in
        {1676}let input_key_material_14: key = (if v_559 then catch-fail((if v_561 then dhexp(my_private_key_11,re_21) else fail-any)) else caught-fail) in
        {1677}let v_562: bool = not-caught-fail(input_key_material_14) in
        {1678}let v_563: bitstring = (if v_562 then catch-fail(symmetricstateunpack(ss_82)) else caught-fail) in
        {1679}let v_564: bool = (not-caught-fail(v_563) && success?(1-proj-3-tuple(v_563))) in
        {1680}let h_72: bitstring = (if v_564 then 3-proj-3-tuple(v_563) else caught-fail) in
        {1681}let ck_83: key = (if v_564 then 2-proj-3-tuple(v_563) else caught-fail) in
        {1682}let cs_72: cipherstate = (if v_564 then 1-proj-3-tuple(v_563) else caught-fail) in
        {1685}let output3_14: key = (if v_564 then hmac_hash3(ck_83,input_key_material_14) else caught-fail) in
        {1684}let output2_14: key = (if v_564 then hmac_hash2(ck_83,input_key_material_14) else caught-fail) in
        {1683}let output1_14: key = (if v_564 then hmac_hash1(ck_83,input_key_material_14) else caught-fail) in
        {1686}let v_565: bitstring = (if v_564 then catch-fail((output1_14,output2_14,output3_14)) else caught-fail) in
        {1687}let v_566: bool = (not-caught-fail(v_565) && success?(1-proj-3-tuple(v_565))) in
        {1688}let output_11: key = (if v_566 then 3-proj-3-tuple(v_565) else caught-fail) in
        {1689}let temp_k_11: key = (if v_566 then 2-proj-3-tuple(v_565) else caught-fail) in
        {1690}let ck_84: key = (if v_566 then 1-proj-3-tuple(v_565) else caught-fail) in
        {1691}let ss_83: symmetricstate = (if v_559 then catch-fail((if v_562 then (if v_564 then (if v_566 then symmetricstatepack(cipherstatepack(temp_k_11,minnonce),ck_84,h_72) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1692}let v_567: bool = not-caught-fail(ss_83) in
        {1693}let v_568: bitstring = (if v_567 then catch-fail(symmetricstateunpack(ss_83)) else caught-fail) in
        {1694}let v_569: bool = (not-caught-fail(v_568) && success?(1-proj-3-tuple(v_568))) in
        {1695}let h_73: bitstring = (if v_569 then 3-proj-3-tuple(v_568) else caught-fail) in
        {1696}let ck_85: key = (if v_569 then 2-proj-3-tuple(v_568) else caught-fail) in
        {1697}let cs_73: cipherstate = (if v_569 then 1-proj-3-tuple(v_568) else caught-fail) in
        {1698}let v_570: bitstring = (if v_569 then catch-fail(cipherstateunpack(cs_73)) else caught-fail) in
        {1699}let v_571: bool = (not-caught-fail(v_570) && success?(1-proj-2-tuple(v_570))) in
        {1700}let n_42: nonce = (if v_571 then 2-proj-2-tuple(v_570) else caught-fail) in
        {1701}let k_46: key = (if v_571 then 1-proj-2-tuple(v_570) else caught-fail) in
        {1704}let v_572: bitstring = (if v_571 then catch-fail(cipherstateunpack(cs_73)) else caught-fail) in
        {1705}let v_573: bool = (not-caught-fail(v_572) && success?(1-proj-2-tuple(v_572))) in
        {1706}let o_21: nonce = (if v_573 then 2-proj-2-tuple(v_572) else caught-fail) in
        {1707}let k_47: key = (if v_573 then 1-proj-2-tuple(v_572) else caught-fail) in
        {1703}let n_43: nonce = (if v_571 then increment_nonce(n_42) else caught-fail) in
        {1708}let csi_42: cipherstate = (if v_571 then catch-fail((if v_573 then cipherstatepack(k_47,n_43) else fail-any)) else caught-fail) in
        {1709}let v_574: bool = not-caught-fail(csi_42) in
        {1518}let payload_6: bitstring = msg_b(me_3,them_3,sid_4) in
        {1702}let e_32: bitstring = (if v_571 then encrypt(k_46,n_42,h_73,payload_6) else caught-fail) in
        {1710}let v_575: bitstring = (if v_569 then catch-fail((if v_571 then (if v_574 then (csi_42,e_32) else fail-any) else fail-any)) else caught-fail) in
        {1711}let v_576: bool = (not-caught-fail(v_575) && success?(1-proj-2-tuple(v_575))) in
        {1712}let ciphertext_30: bitstring = (if v_576 then 2-proj-2-tuple(v_575) else caught-fail) in
        {1713}let csi_43: cipherstate = (if v_576 then 1-proj-2-tuple(v_575) else caught-fail) in
        {1714}let ss_84: symmetricstate = (if v_576 then symmetricstatepack(csi_43,ck_85,h_73) else caught-fail) in
        {1715}let v_577: bitstring = (if v_576 then catch-fail(symmetricstateunpack(ss_84)) else caught-fail) in
        {1716}let v_578: bool = (not-caught-fail(v_577) && success?(1-proj-3-tuple(v_577))) in
        {1717}let h_74: bitstring = (if v_578 then 3-proj-3-tuple(v_577) else caught-fail) in
        {1718}let ck_86: key = (if v_578 then 2-proj-3-tuple(v_577) else caught-fail) in
        {1719}let cs_74: cipherstate = (if v_578 then 1-proj-3-tuple(v_577) else caught-fail) in
        {1720}let ssi_24: symmetricstate = (if v_576 then catch-fail((if v_578 then symmetricstatepack(cs_74,ck_86,hash(h_74,ciphertext_30)) else fail-any)) else caught-fail) in
        {1721}let v_579: bool = not-caught-fail(ssi_24) in
        {1722}let v_580: bitstring = (if v_567 then catch-fail((if v_569 then (if v_576 then (if v_579 then (ssi_24,ciphertext_30) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1723}let v_581: bool = (not-caught-fail(v_580) && success?(1-proj-2-tuple(v_580))) in
        {1724}let ciphertext_31: bitstring = (if v_581 then 2-proj-2-tuple(v_580) else caught-fail) in
        {1725}let ss_85: symmetricstate = (if v_581 then 1-proj-2-tuple(v_580) else caught-fail) in
        {1728}let v_582: bitstring = (if v_581 then catch-fail(symmetricstateunpack(ss_85)) else caught-fail) in
        {1729}let v_583: bool = (not-caught-fail(v_582) && success?(1-proj-3-tuple(v_582))) in
        {1730}let h_75: bitstring = (if v_583 then 3-proj-3-tuple(v_582) else caught-fail) in
        {1731}let ck_87: key = (if v_583 then 2-proj-3-tuple(v_582) else caught-fail) in
        {1732}let cs_75: cipherstate = (if v_583 then 1-proj-3-tuple(v_582) else caught-fail) in
        {1733}let input_key_material_15: key = (if v_583 then zero else caught-fail) in
        {1736}let output3_15: key = (if v_583 then hmac_hash3(ck_87,input_key_material_15) else caught-fail) in
        {1735}let output2_15: key = (if v_583 then hmac_hash2(ck_87,input_key_material_15) else caught-fail) in
        {1734}let output1_15: key = (if v_583 then hmac_hash1(ck_87,input_key_material_15) else caught-fail) in
        {1737}let v_584: bitstring = (if v_583 then catch-fail((output1_15,output2_15,output3_15)) else caught-fail) in
        {1738}let v_585: bool = (not-caught-fail(v_584) && success?(1-proj-3-tuple(v_584))) in
        {1739}let temp_k3_3: key = (if v_585 then 3-proj-3-tuple(v_584) else caught-fail) in
        {1740}let temp_k2_3: key = (if v_585 then 2-proj-3-tuple(v_584) else caught-fail) in
        {1741}let temp_k1_3: key = (if v_585 then 1-proj-3-tuple(v_584) else caught-fail) in
        {1743}let cs2_15: cipherstate = (if v_585 then cipherstatepack(temp_k2_3,minnonce) else caught-fail) in
        {1742}let cs1_15: cipherstate = (if v_585 then cipherstatepack(temp_k1_3,minnonce) else caught-fail) in
        {1744}let v_586: bitstring = (if v_581 then catch-fail((if v_583 then (if v_585 then (ss_85,cs1_15,cs2_15) else fail-any) else fail-any)) else caught-fail) in
        {1745}let v_587: bool = (not-caught-fail(v_586) && success?(1-proj-3-tuple(v_586))) in
        {1746}let cs2_16: cipherstate = (if v_587 then 3-proj-3-tuple(v_586) else caught-fail) in
        {1747}let cs1_16: cipherstate = (if v_587 then 2-proj-3-tuple(v_586) else caught-fail) in
        {1748}let ssi_25: symmetricstate = (if v_587 then 1-proj-3-tuple(v_586) else caught-fail) in
        {1727}let message_buffer_6: bitstring = (if v_581 then concat4(ne_21,ns_15,nm_7,ciphertext_31) else caught-fail) in
        {1726}let hs_50: handshakestate = (if v_581 then handshakestatepack(ss_85,s_19,m_19,e_29,rs_19,rm_19,re_21,psk_17,initiator_14) else caught-fail) in
        {1749}let (hs_51: handshakestate,message_b_3: bitstring,cs1_17: cipherstate,cs2_17: cipherstate) = (if v_501 then (if v_503 then (if v_505 then (if v_506 then (if v_509 then (if v_517 then (if v_519 then (if v_534 then (if v_536 then (if v_551 then (if v_559 then (if v_567 then (if v_581 then (if v_587 then (hs_50,message_buffer_6,cs1_16,cs2_16) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1750}event SendMsg(me_3,them_3,stagepack_b(sid_4),msg_b(me_3,them_3,sid_4));
        {1751}insert statestore(me_3,them_3,sid_4,statepack_c(hs_51,cs1_17,cs2_17));
        {1752}out(pub, message_b_3)
    ) | (
        {1754}!
        {1820}get statestore(=me_3,=them_3,=sid_4,statepack_c(hs_52: handshakestate,cs1_18: cipherstate,cs2_18: cipherstate)) in
        {1755}let hs_53: handshakestate = handshakestatesetcs(hs_52,cs1_18) in
        {1756}in(pub, message_c_3: bitstring);
        {1757}let v_588: bitstring = catch-fail(handshakestateunpack(hs_53)) in
        {1758}let v_589: bool = (not-caught-fail(v_588) && success?(1-proj-9-tuple(v_588))) in
        {1759}let initiator_15: bool = (if v_589 then 9-proj-9-tuple(v_588) else caught-fail) in
        {1760}let psk_18: key = (if v_589 then 8-proj-9-tuple(v_588) else caught-fail) in
        {1761}let re_22: key = (if v_589 then 7-proj-9-tuple(v_588) else caught-fail) in
        {1762}let rm_20: key = (if v_589 then 6-proj-9-tuple(v_588) else caught-fail) in
        {1763}let rs_20: key = (if v_589 then 5-proj-9-tuple(v_588) else caught-fail) in
        {1764}let e_33: keypair = (if v_589 then 4-proj-9-tuple(v_588) else caught-fail) in
        {1765}let m_20: keypair = (if v_589 then 3-proj-9-tuple(v_588) else caught-fail) in
        {1766}let s_20: keypair = (if v_589 then 2-proj-9-tuple(v_588) else caught-fail) in
        {1767}let ss_86: symmetricstate = (if v_589 then 1-proj-9-tuple(v_588) else caught-fail) in
        {1768}let v_590: bitstring = (if v_589 then catch-fail(deconcat3(message_c_3)) else caught-fail) in
        {1769}let v_591: bool = (not-caught-fail(v_590) && success?(1-proj-3-tuple(v_590))) in
        {1770}let ciphertext_32: bitstring = (if v_591 then 3-proj-3-tuple(v_590) else caught-fail) in
        {1771}let ns_16: bitstring = (if v_591 then 2-proj-3-tuple(v_590) else caught-fail) in
        {1772}let ne_22: bitstring = (if v_591 then 1-proj-3-tuple(v_590) else caught-fail) in
        {1774}let v_592: bitstring = (if v_591 then catch-fail(symmetricstateunpack(ss_86)) else caught-fail) in
        {1775}let v_593: bool = (not-caught-fail(v_592) && success?(1-proj-3-tuple(v_592))) in
        {1776}let h_76: bitstring = (if v_593 then 3-proj-3-tuple(v_592) else caught-fail) in
        {1777}let ck_88: key = (if v_593 then 2-proj-3-tuple(v_592) else caught-fail) in
        {1778}let cs_76: cipherstate = (if v_593 then 1-proj-3-tuple(v_592) else caught-fail) in
        {1779}let v_594: bitstring = (if v_593 then catch-fail(cipherstateunpack(cs_76)) else caught-fail) in
        {1780}let v_595: bool = (not-caught-fail(v_594) && success?(1-proj-2-tuple(v_594))) in
        {1781}let n_44: nonce = (if v_595 then 2-proj-2-tuple(v_594) else caught-fail) in
        {1782}let k_48: key = (if v_595 then 1-proj-2-tuple(v_594) else caught-fail) in
        {1783}let d_11: aead = (if v_595 then catch-fail(decrypt(k_48,n_44,h_76,ciphertext_32)) else caught-fail) in
        {1784}let v_596: bool = not-caught-fail(d_11) in
        {1785}let v_597: bitstring = (if v_596 then catch-fail(aeadunpack(d_11)) else caught-fail) in
        {1786}let v_598: bool = (not-caught-fail(v_597) && success?(1-proj-3-tuple(v_597))) in
        {1787}let plaintext_33: bitstring = (if v_598 then 3-proj-3-tuple(v_597) else caught-fail) in
        {1788}let adi_11: bitstring = (if v_598 then 2-proj-3-tuple(v_597) else caught-fail) in
        {1789}let valid_29: bool = (if v_598 then 1-proj-3-tuple(v_597) else caught-fail) in
        {1791}let v_599: bitstring = (if v_598 then catch-fail(cipherstateunpack(cs_76)) else caught-fail) in
        {1792}let v_600: bool = (not-caught-fail(v_599) && success?(1-proj-2-tuple(v_599))) in
        {1793}let o_22: nonce = (if v_600 then 2-proj-2-tuple(v_599) else caught-fail) in
        {1794}let k_49: key = (if v_600 then 1-proj-2-tuple(v_599) else caught-fail) in
        {1790}let n_45: nonce = (if v_598 then increment_nonce(n_44) else caught-fail) in
        {1795}let csi_44: cipherstate = (if v_598 then catch-fail((if v_600 then cipherstatepack(k_49,n_45) else fail-any)) else caught-fail) in
        {1796}let v_601: bool = not-caught-fail(csi_44) in
        {1797}let v_602: bitstring = (if v_593 then catch-fail((if v_595 then (if v_596 then (if v_598 then (if v_601 then (csi_44,plaintext_33,valid_29) else fail-any) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1798}let v_603: bool = (not-caught-fail(v_602) && success?(1-proj-3-tuple(v_602))) in
        {1799}let valid_30: bool = (if v_603 then 3-proj-3-tuple(v_602) else caught-fail) in
        {1800}let plaintext_34: bitstring = (if v_603 then 2-proj-3-tuple(v_602) else caught-fail) in
        {1801}let csi_45: cipherstate = (if v_603 then 1-proj-3-tuple(v_602) else caught-fail) in
        {1802}let ss_87: symmetricstate = (if v_603 then symmetricstatepack(csi_45,ck_88,h_76) else caught-fail) in
        {1803}let v_604: bitstring = (if v_603 then catch-fail(symmetricstateunpack(ss_87)) else caught-fail) in
        {1804}let v_605: bool = (not-caught-fail(v_604) && success?(1-proj-3-tuple(v_604))) in
        {1805}let h_77: bitstring = (if v_605 then 3-proj-3-tuple(v_604) else caught-fail) in
        {1806}let ck_89: key = (if v_605 then 2-proj-3-tuple(v_604) else caught-fail) in
        {1807}let cs_77: cipherstate = (if v_605 then 1-proj-3-tuple(v_604) else caught-fail) in
        {1808}let ssi_26: symmetricstate = (if v_603 then catch-fail((if v_605 then symmetricstatepack(cs_77,ck_89,hash(h_77,ciphertext_32)) else fail-any)) else caught-fail) in
        {1809}let v_606: bool = not-caught-fail(ssi_26) in
        {1810}let v_607: bitstring = (if v_591 then catch-fail((if v_593 then (if v_603 then (if v_606 then (ssi_26,plaintext_34,valid_30) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1811}let v_608: bool = (not-caught-fail(v_607) && success?(1-proj-3-tuple(v_607))) in
        {1812}let valid2_9: bool = (if v_608 then 3-proj-3-tuple(v_607) else caught-fail) in
        {1813}let plaintext_35: bitstring = (if v_608 then 2-proj-3-tuple(v_607) else caught-fail) in
        {1814}let ss_88: symmetricstate = (if v_608 then 1-proj-3-tuple(v_607) else caught-fail) in
        {1773}let valid1_9: bool = (if v_591 then true else caught-fail) in
        {1815}let v_609: bool = (if v_608 then catch-fail((valid1_9 && valid2_9)) else caught-fail) in
        {1816}let hs_54: handshakestate = (if v_609 then handshakestatepack(ss_88,s_20,m_20,e_33,rs_20,rm_20,re_22,psk_18,initiator_15) else caught-fail) in
        {1817}let (hs_55: handshakestate,plaintext_c_1: bitstring,valid_31: bool) = (if v_589 then (if v_591 then (if v_608 then (if undo-catch-fail(v_609) then (hs_54,plaintext_35,true) else fail-any) else fail-any) else fail-any) else fail-any) in
        {1818}event RecvMsg(me_3,them_3,stagepack_c(sid_4),plaintext_c_1);
        {1819}insert statestore(me_3,them_3,sid_4,statepack_d(hs_55,handshakestategetcs(hs_55),cs2_18))
    ) | (
        {1821}!
        {1878}get statestore(=me_3,=them_3,=sid_4,statepack_d(hs_56: handshakestate,cs1_19: cipherstate,cs2_19: cipherstate)) in
        {1822}let hs_57: handshakestate = handshakestatesetcs(hs_56,cs2_19) in
        {1824}let v_610: bitstring = catch-fail(handshakestateunpack(hs_57)) in
        {1825}let v_611: bool = (not-caught-fail(v_610) && success?(1-proj-9-tuple(v_610))) in
        {1826}let initiator_16: bool = (if v_611 then 9-proj-9-tuple(v_610) else caught-fail) in
        {1827}let psk_19: key = (if v_611 then 8-proj-9-tuple(v_610) else caught-fail) in
        {1828}let re_23: key = (if v_611 then 7-proj-9-tuple(v_610) else caught-fail) in
        {1829}let rm_21: key = (if v_611 then 6-proj-9-tuple(v_610) else caught-fail) in
        {1830}let rs_21: key = (if v_611 then 5-proj-9-tuple(v_610) else caught-fail) in
        {1831}let e_34: keypair = (if v_611 then 4-proj-9-tuple(v_610) else caught-fail) in
        {1832}let m_21: keypair = (if v_611 then 3-proj-9-tuple(v_610) else caught-fail) in
        {1833}let s_21: keypair = (if v_611 then 2-proj-9-tuple(v_610) else caught-fail) in
        {1834}let ss_89: symmetricstate = (if v_611 then 1-proj-9-tuple(v_610) else caught-fail) in
        {1835}let v_612: bitstring = (if v_611 then catch-fail((empty,empty,empty)) else caught-fail) in
        {1836}let v_613: bool = (not-caught-fail(v_612) && success?(1-proj-3-tuple(v_612))) in
        {1837}let ciphertext_33: bitstring = (if v_613 then 3-proj-3-tuple(v_612) else caught-fail) in
        {1838}let ns_17: bitstring = (if v_613 then 2-proj-3-tuple(v_612) else caught-fail) in
        {1839}let ne_23: bitstring = (if v_613 then 1-proj-3-tuple(v_612) else caught-fail) in
        {1840}let v_614: bitstring = (if v_613 then catch-fail(symmetricstateunpack(ss_89)) else caught-fail) in
        {1841}let v_615: bool = (not-caught-fail(v_614) && success?(1-proj-3-tuple(v_614))) in
        {1842}let h_78: bitstring = (if v_615 then 3-proj-3-tuple(v_614) else caught-fail) in
        {1843}let ck_90: key = (if v_615 then 2-proj-3-tuple(v_614) else caught-fail) in
        {1844}let cs_78: cipherstate = (if v_615 then 1-proj-3-tuple(v_614) else caught-fail) in
        {1845}let v_616: bitstring = (if v_615 then catch-fail(cipherstateunpack(cs_78)) else caught-fail) in
        {1846}let v_617: bool = (not-caught-fail(v_616) && success?(1-proj-2-tuple(v_616))) in
        {1847}let n_46: nonce = (if v_617 then 2-proj-2-tuple(v_616) else caught-fail) in
        {1848}let k_50: key = (if v_617 then 1-proj-2-tuple(v_616) else caught-fail) in
        {1851}let v_618: bitstring = (if v_617 then catch-fail(cipherstateunpack(cs_78)) else caught-fail) in
        {1852}let v_619: bool = (not-caught-fail(v_618) && success?(1-proj-2-tuple(v_618))) in
        {1853}let o_23: nonce = (if v_619 then 2-proj-2-tuple(v_618) else caught-fail) in
        {1854}let k_51: key = (if v_619 then 1-proj-2-tuple(v_618) else caught-fail) in
        {1850}let n_47: nonce = (if v_617 then increment_nonce(n_46) else caught-fail) in
        {1855}let csi_46: cipherstate = (if v_617 then catch-fail((if v_619 then cipherstatepack(k_51,n_47) else fail-any)) else caught-fail) in
        {1856}let v_620: bool = not-caught-fail(csi_46) in
        {1823}let payload_7: bitstring = msg_d(me_3,them_3,sid_4) in
        {1849}let e_35: bitstring = (if v_617 then encrypt(k_50,n_46,h_78,payload_7) else caught-fail) in
        {1857}let v_621: bitstring = (if v_615 then catch-fail((if v_617 then (if v_620 then (csi_46,e_35) else fail-any) else fail-any)) else caught-fail) in
        {1858}let v_622: bool = (not-caught-fail(v_621) && success?(1-proj-2-tuple(v_621))) in
        {1859}let ciphertext_34: bitstring = (if v_622 then 2-proj-2-tuple(v_621) else caught-fail) in
        {1860}let csi_47: cipherstate = (if v_622 then 1-proj-2-tuple(v_621) else caught-fail) in
        {1861}let ss_90: symmetricstate = (if v_622 then symmetricstatepack(csi_47,ck_90,h_78) else caught-fail) in
        {1862}let v_623: bitstring = (if v_622 then catch-fail(symmetricstateunpack(ss_90)) else caught-fail) in
        {1863}let v_624: bool = (not-caught-fail(v_623) && success?(1-proj-3-tuple(v_623))) in
        {1864}let h_79: bitstring = (if v_624 then 3-proj-3-tuple(v_623) else caught-fail) in
        {1865}let ck_91: key = (if v_624 then 2-proj-3-tuple(v_623) else caught-fail) in
        {1866}let cs_79: cipherstate = (if v_624 then 1-proj-3-tuple(v_623) else caught-fail) in
        {1867}let ssi_27: symmetricstate = (if v_622 then catch-fail((if v_624 then symmetricstatepack(cs_79,ck_91,hash(h_79,ciphertext_34)) else fail-any)) else caught-fail) in
        {1868}let v_625: bool = not-caught-fail(ssi_27) in
        {1869}let v_626: bitstring = (if v_613 then catch-fail((if v_615 then (if v_622 then (if v_625 then (ssi_27,ciphertext_34) else fail-any) else fail-any) else fail-any)) else caught-fail) in
        {1870}let v_627: bool = (not-caught-fail(v_626) && success?(1-proj-2-tuple(v_626))) in
        {1871}let ciphertext_35: bitstring = (if v_627 then 2-proj-2-tuple(v_626) else caught-fail) in
        {1872}let ss_91: symmetricstate = (if v_627 then 1-proj-2-tuple(v_626) else caught-fail) in
        {1874}let message_buffer_7: bitstring = (if v_627 then concat3(ne_23,ns_17,ciphertext_35) else caught-fail) in
        {1873}let hs_58: handshakestate = (if v_627 then handshakestatepack(ss_91,s_21,m_21,e_34,rs_21,rm_21,re_23,psk_19,initiator_16) else caught-fail) in
        {1875}let (hs_59: handshakestate,message_d_3: bitstring) = (if v_611 then (if v_613 then (if v_627 then (hs_58,message_buffer_7) else fail-any) else fail-any) else fail-any) in
        {1876}event SendMsg(me_3,them_3,stagepack_d(sid_4),msg_d(me_3,them_3,sid_4));
        {1877}out(pub, message_d_3)
    ) | (
        {1879}event LeakS(phase0,me_3);
        {1880}event LeakM(phase0,me_3);
        {1881}out(pub, (key_s(me_3),key_m(me_3)))
    ) | (
        {1882}phase 1;
        {1883}event LeakS(phase1,me_3);
        {1884}event LeakM(phase1,me_3);
        {1885}out(pub, (key_s(me_3),key_m(me_3)))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false; event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false; not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false; event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false; event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); not attacker_p1(msg_b(bob,alice,sid_b)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))); not attacker_p1(msg_b(bob,alice,sid_b)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false; event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false; not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false; event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false; event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))); not attacker_p1(msg_d(bob,alice,sid_b)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))); not attacker_p1(msg_d(bob,alice,sid_b)); not event(RecvEnd(true)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (87 with conclusion selected). Queue: 168 rules.
400 rules inserted. Base: 396 rules (111 with conclusion selected). Queue: 67 rules.
600 rules inserted. Base: 570 rules (142 with conclusion selected). Queue: 188 rules.
800 rules inserted. Base: 763 rules (239 with conclusion selected). Queue: 634 rules.
1000 rules inserted. Base: 943 rules (276 with conclusion selected). Queue: 679 rules.
1200 rules inserted. Base: 1123 rules (339 with conclusion selected). Queue: 901 rules.
1400 rules inserted. Base: 1323 rules (449 with conclusion selected). Queue: 1273 rules.
1600 rules inserted. Base: 1454 rules (449 with conclusion selected). Queue: 1283 rules.
1800 rules inserted. Base: 1625 rules (473 with conclusion selected). Queue: 1301 rules.
2000 rules inserted. Base: 1792 rules (490 with conclusion selected). Queue: 1292 rules.
2200 rules inserted. Base: 1933 rules (498 with conclusion selected). Queue: 1297 rules.
2400 rules inserted. Base: 2107 rules (518 with conclusion selected). Queue: 1294 rules.
2600 rules inserted. Base: 2285 rules (542 with conclusion selected). Queue: 1298 rules.
2800 rules inserted. Base: 2427 rules (547 with conclusion selected). Queue: 1285 rules.
3000 rules inserted. Base: 2514 rules (550 with conclusion selected). Queue: 1264 rules.
3200 rules inserted. Base: 2624 rules (554 with conclusion selected). Queue: 1282 rules.
3400 rules inserted. Base: 2704 rules (554 with conclusion selected). Queue: 1266 rules.
3600 rules inserted. Base: 2810 rules (557 with conclusion selected). Queue: 1278 rules.
3800 rules inserted. Base: 2933 rules (561 with conclusion selected). Queue: 1299 rules.
4000 rules inserted. Base: 3068 rules (561 with conclusion selected). Queue: 1300 rules.
4200 rules inserted. Base: 3125 rules (561 with conclusion selected). Queue: 1271 rules.
4400 rules inserted. Base: 3207 rules (561 with conclusion selected). Queue: 1239 rules.
4600 rules inserted. Base: 3314 rules (561 with conclusion selected). Queue: 1219 rules.
4800 rules inserted. Base: 3347 rules (561 with conclusion selected). Queue: 1150 rules.
5000 rules inserted. Base: 3428 rules (561 with conclusion selected). Queue: 1107 rules.
5200 rules inserted. Base: 3545 rules (561 with conclusion selected). Queue: 1060 rules.
5400 rules inserted. Base: 3576 rules (571 with conclusion selected). Queue: 1113 rules.
5600 rules inserted. Base: 3706 rules (571 with conclusion selected). Queue: 1125 rules.
5800 rules inserted. Base: 3782 rules (580 with conclusion selected). Queue: 1174 rules.
6000 rules inserted. Base: 3866 rules (581 with conclusion selected). Queue: 1182 rules.
6200 rules inserted. Base: 3993 rules (581 with conclusion selected). Queue: 1202 rules.
6400 rules inserted. Base: 4059 rules (605 with conclusion selected). Queue: 1242 rules.
6600 rules inserted. Base: 4106 rules (621 with conclusion selected). Queue: 1269 rules.
6800 rules inserted. Base: 4200 rules (639 with conclusion selected). Queue: 1313 rules.
7000 rules inserted. Base: 4247 rules (661 with conclusion selected). Queue: 1336 rules.
7200 rules inserted. Base: 4330 rules (661 with conclusion selected). Queue: 1375 rules.
7400 rules inserted. Base: 4453 rules (664 with conclusion selected). Queue: 1396 rules.
7600 rules inserted. Base: 4553 rules (678 with conclusion selected). Queue: 1462 rules.
7800 rules inserted. Base: 4508 rules (683 with conclusion selected). Queue: 1401 rules.
8000 rules inserted. Base: 4613 rules (692 with conclusion selected). Queue: 1446 rules.
8200 rules inserted. Base: 4602 rules (704 with conclusion selected). Queue: 1410 rules.
8400 rules inserted. Base: 4674 rules (705 with conclusion selected). Queue: 1425 rules.
8600 rules inserted. Base: 4755 rules (705 with conclusion selected). Queue: 1472 rules.
8800 rules inserted. Base: 4851 rules (719 with conclusion selected). Queue: 1520 rules.
9000 rules inserted. Base: 4691 rules (737 with conclusion selected). Queue: 1393 rules.
9200 rules inserted. Base: 4753 rules (739 with conclusion selected). Queue: 1430 rules.
9400 rules inserted. Base: 4836 rules (753 with conclusion selected). Queue: 1492 rules.
9600 rules inserted. Base: 4669 rules (769 with conclusion selected). Queue: 1363 rules.
9800 rules inserted. Base: 4733 rules (769 with conclusion selected). Queue: 1408 rules.
10000 rules inserted. Base: 4827 rules (771 with conclusion selected). Queue: 1455 rules.
10200 rules inserted. Base: 4458 rules (776 with conclusion selected). Queue: 1041 rules.
10400 rules inserted. Base: 4570 rules (778 with conclusion selected). Queue: 1065 rules.
10600 rules inserted. Base: 4198 rules (783 with conclusion selected). Queue: 651 rules.
10800 rules inserted. Base: 4344 rules (783 with conclusion selected). Queue: 668 rules.
11000 rules inserted. Base: 4469 rules (783 with conclusion selected). Queue: 694 rules.
11200 rules inserted. Base: 4580 rules (783 with conclusion selected). Queue: 645 rules.
11400 rules inserted. Base: 4673 rules (783 with conclusion selected). Queue: 576 rules.
11600 rules inserted. Base: 4473 rules (783 with conclusion selected). Queue: 575 rules.
11800 rules inserted. Base: 4564 rules (783 with conclusion selected). Queue: 578 rules.
12000 rules inserted. Base: 4417 rules (783 with conclusion selected). Queue: 678 rules.
12200 rules inserted. Base: 4529 rules (785 with conclusion selected). Queue: 688 rules.
12400 rules inserted. Base: 4641 rules (787 with conclusion selected). Queue: 698 rules.
12600 rules inserted. Base: 4729 rules (787 with conclusion selected). Queue: 828 rules.
12800 rules inserted. Base: 4765 rules (787 with conclusion selected). Queue: 849 rules.
13000 rules inserted. Base: 4859 rules (789 with conclusion selected). Queue: 872 rules.
13200 rules inserted. Base: 4929 rules (791 with conclusion selected). Queue: 881 rules.
13400 rules inserted. Base: 4939 rules (791 with conclusion selected). Queue: 887 rules.
13600 rules inserted. Base: 4975 rules (791 with conclusion selected). Queue: 901 rules.
13800 rules inserted. Base: 5056 rules (791 with conclusion selected). Queue: 922 rules.
14000 rules inserted. Base: 5134 rules (791 with conclusion selected). Queue: 940 rules.
14200 rules inserted. Base: 5187 rules (801 with conclusion selected). Queue: 910 rules.
14400 rules inserted. Base: 5303 rules (801 with conclusion selected). Queue: 857 rules.
14600 rules inserted. Base: 5358 rules (801 with conclusion selected). Queue: 906 rules.
14800 rules inserted. Base: 5420 rules (801 with conclusion selected). Queue: 952 rules.
15000 rules inserted. Base: 5551 rules (815 with conclusion selected). Queue: 959 rules.
15200 rules inserted. Base: 5633 rules (815 with conclusion selected). Queue: 911 rules.
15400 rules inserted. Base: 5709 rules (815 with conclusion selected). Queue: 920 rules.
15600 rules inserted. Base: 5811 rules (815 with conclusion selected). Queue: 939 rules.
15800 rules inserted. Base: 5886 rules (815 with conclusion selected). Queue: 976 rules.
16000 rules inserted. Base: 6030 rules (804 with conclusion selected). Queue: 933 rules.
16200 rules inserted. Base: 6136 rules (809 with conclusion selected). Queue: 844 rules.
16400 rules inserted. Base: 6182 rules (809 with conclusion selected). Queue: 856 rules.
16600 rules inserted. Base: 6262 rules (809 with conclusion selected). Queue: 876 rules.
16800 rules inserted. Base: 6324 rules (809 with conclusion selected). Queue: 879 rules.
17000 rules inserted. Base: 6367 rules (825 with conclusion selected). Queue: 1021 rules.
17200 rules inserted. Base: 6426 rules (825 with conclusion selected). Queue: 1055 rules.
17400 rules inserted. Base: 6503 rules (825 with conclusion selected). Queue: 1064 rules.
17600 rules inserted. Base: 6560 rules (825 with conclusion selected). Queue: 1100 rules.
17800 rules inserted. Base: 6640 rules (827 with conclusion selected). Queue: 1103 rules.
18000 rules inserted. Base: 6667 rules (865 with conclusion selected). Queue: 1123 rules.
18200 rules inserted. Base: 6717 rules (865 with conclusion selected). Queue: 1178 rules.
18400 rules inserted. Base: 6772 rules (865 with conclusion selected). Queue: 1204 rules.
18600 rules inserted. Base: 6823 rules (865 with conclusion selected). Queue: 1259 rules.
18800 rules inserted. Base: 6877 rules (865 with conclusion selected). Queue: 1291 rules.
19000 rules inserted. Base: 7014 rules (940 with conclusion selected). Queue: 1367 rules.
19200 rules inserted. Base: 7086 rules (977 with conclusion selected). Queue: 1426 rules.
19400 rules inserted. Base: 7119 rules (977 with conclusion selected). Queue: 1474 rules.
19600 rules inserted. Base: 7148 rules (977 with conclusion selected). Queue: 1498 rules.
19800 rules inserted. Base: 7183 rules (977 with conclusion selected). Queue: 1544 rules.
20000 rules inserted. Base: 7221 rules (977 with conclusion selected). Queue: 1591 rules.
20200 rules inserted. Base: 7250 rules (977 with conclusion selected). Queue: 1600 rules.
20400 rules inserted. Base: 7412 rules (1030 with conclusion selected). Queue: 1629 rules.
20600 rules inserted. Base: 7474 rules (1041 with conclusion selected). Queue: 1639 rules.
20800 rules inserted. Base: 7525 rules (1041 with conclusion selected). Queue: 1662 rules.
21000 rules inserted. Base: 7576 rules (1041 with conclusion selected). Queue: 1677 rules.
21200 rules inserted. Base: 7624 rules (1041 with conclusion selected). Queue: 1662 rules.
21400 rules inserted. Base: 7675 rules (1041 with conclusion selected). Queue: 1685 rules.
21600 rules inserted. Base: 7725 rules (1041 with conclusion selected). Queue: 1700 rules.
21800 rules inserted. Base: 7767 rules (1041 with conclusion selected). Queue: 1683 rules.
22000 rules inserted. Base: 7922 rules (1027 with conclusion selected). Queue: 1719 rules.
22200 rules inserted. Base: 8048 rules (1057 with conclusion selected). Queue: 1819 rules.
22400 rules inserted. Base: 8082 rules (1057 with conclusion selected). Queue: 1828 rules.
22600 rules inserted. Base: 8117 rules (1057 with conclusion selected). Queue: 1834 rules.
22800 rules inserted. Base: 8172 rules (1057 with conclusion selected). Queue: 1790 rules.
23000 rules inserted. Base: 8209 rules (1057 with conclusion selected). Queue: 1799 rules.
23200 rules inserted. Base: 8246 rules (1057 with conclusion selected). Queue: 1806 rules.
23400 rules inserted. Base: 8334 rules (1057 with conclusion selected). Queue: 1738 rules.
23600 rules inserted. Base: 8430 rules (1060 with conclusion selected). Queue: 1760 rules.
23800 rules inserted. Base: 8542 rules (1065 with conclusion selected). Queue: 1784 rules.
24000 rules inserted. Base: 8681 rules (1185 with conclusion selected). Queue: 1861 rules.
24200 rules inserted. Base: 8711 rules (1185 with conclusion selected). Queue: 1856 rules.
24400 rules inserted. Base: 8748 rules (1185 with conclusion selected). Queue: 1842 rules.
24600 rules inserted. Base: 8673 rules (1186 with conclusion selected). Queue: 1803 rules.
24800 rules inserted. Base: 8698 rules (1186 with conclusion selected). Queue: 1792 rules.
25000 rules inserted. Base: 8739 rules (1186 with conclusion selected). Queue: 1780 rules.
25200 rules inserted. Base: 8664 rules (1187 with conclusion selected). Queue: 1742 rules.
25400 rules inserted. Base: 8798 rules (1191 with conclusion selected). Queue: 1763 rules.
25600 rules inserted. Base: 8940 rules (1203 with conclusion selected). Queue: 1774 rules.
25800 rules inserted. Base: 9111 rules (1235 with conclusion selected). Queue: 1791 rules.
26000 rules inserted. Base: 9163 rules (1235 with conclusion selected). Queue: 1773 rules.
26200 rules inserted. Base: 9217 rules (1235 with conclusion selected). Queue: 1733 rules.
26400 rules inserted. Base: 9224 rules (1249 with conclusion selected). Queue: 1717 rules.
26600 rules inserted. Base: 9284 rules (1249 with conclusion selected). Queue: 1699 rules.
26800 rules inserted. Base: 9331 rules (1249 with conclusion selected). Queue: 1636 rules.
27000 rules inserted. Base: 9408 rules (1263 with conclusion selected). Queue: 1666 rules.
27200 rules inserted. Base: 9568 rules (1263 with conclusion selected). Queue: 1698 rules.
27400 rules inserted. Base: 9752 rules (1263 with conclusion selected). Queue: 1732 rules.
27600 rules inserted. Base: 9898 rules (1263 with conclusion selected). Queue: 1771 rules.
27800 rules inserted. Base: 9964 rules (1263 with conclusion selected). Queue: 1797 rules.
28000 rules inserted. Base: 9891 rules (1287 with conclusion selected). Queue: 1782 rules.
28200 rules inserted. Base: 9964 rules (1287 with conclusion selected). Queue: 1805 rules.
28400 rules inserted. Base: 9900 rules (1311 with conclusion selected). Queue: 1781 rules.
28600 rules inserted. Base: 9994 rules (1311 with conclusion selected). Queue: 1794 rules.
28800 rules inserted. Base: 10122 rules (1311 with conclusion selected). Queue: 1804 rules.
29000 rules inserted. Base: 10254 rules (1311 with conclusion selected). Queue: 1802 rules.
29200 rules inserted. Base: 10370 rules (1311 with conclusion selected). Queue: 1816 rules.
29400 rules inserted. Base: 10412 rules (1311 with conclusion selected). Queue: 1758 rules.
29600 rules inserted. Base: 10278 rules (1312 with conclusion selected). Queue: 1445 rules.
29800 rules inserted. Base: 10328 rules (1312 with conclusion selected). Queue: 1395 rules.
30000 rules inserted. Base: 10194 rules (1313 with conclusion selected). Queue: 1069 rules.
30200 rules inserted. Base: 10298 rules (1313 with conclusion selected). Queue: 1084 rules.
30400 rules inserted. Base: 10434 rules (1313 with conclusion selected). Queue: 1088 rules.
30600 rules inserted. Base: 10602 rules (1313 with conclusion selected). Queue: 1106 rules.
30800 rules inserted. Base: 10778 rules (1313 with conclusion selected). Queue: 1147 rules.
31000 rules inserted. Base: 10868 rules (1313 with conclusion selected). Queue: 996 rules.
31200 rules inserted. Base: 10988 rules (1313 with conclusion selected). Queue: 1022 rules.
31400 rules inserted. Base: 11144 rules (1313 with conclusion selected). Queue: 1040 rules.
31600 rules inserted. Base: 11308 rules (1313 with conclusion selected). Queue: 1065 rules.
31800 rules inserted. Base: 11508 rules (1313 with conclusion selected). Queue: 1093 rules.
32000 rules inserted. Base: 11615 rules (1313 with conclusion selected). Queue: 1048 rules.
32200 rules inserted. Base: 11697 rules (1313 with conclusion selected). Queue: 1096 rules.
32400 rules inserted. Base: 11823 rules (1313 with conclusion selected). Queue: 1154 rules.
32600 rules inserted. Base: 11960 rules (1313 with conclusion selected). Queue: 1210 rules.
32800 rules inserted. Base: 12131 rules (1313 with conclusion selected). Queue: 1212 rules.
33000 rules inserted. Base: 12255 rules (1313 with conclusion selected). Queue: 1202 rules.
33200 rules inserted. Base: 12346 rules (1313 with conclusion selected). Queue: 1237 rules.
33400 rules inserted. Base: 12502 rules (1313 with conclusion selected). Queue: 1263 rules.
33600 rules inserted. Base: 12644 rules (1313 with conclusion selected). Queue: 1288 rules.
33800 rules inserted. Base: 12798 rules (1313 with conclusion selected). Queue: 1312 rules.
34000 rules inserted. Base: 12998 rules (1313 with conclusion selected). Queue: 1312 rules.
34200 rules inserted. Base: 13134 rules (1313 with conclusion selected). Queue: 1330 rules.
34400 rules inserted. Base: 13218 rules (1313 with conclusion selected). Queue: 1348 rules.
34600 rules inserted. Base: 13339 rules (1313 with conclusion selected). Queue: 1371 rules.
34800 rules inserted. Base: 13474 rules (1313 with conclusion selected). Queue: 1389 rules.
35000 rules inserted. Base: 13611 rules (1313 with conclusion selected). Queue: 1411 rules.
35200 rules inserted. Base: 13750 rules (1313 with conclusion selected). Queue: 1438 rules.
35400 rules inserted. Base: 13950 rules (1313 with conclusion selected). Queue: 1463 rules.
35600 rules inserted. Base: 14015 rules (1313 with conclusion selected). Queue: 1482 rules.
35800 rules inserted. Base: 14112 rules (1313 with conclusion selected). Queue: 1488 rules.
36000 rules inserted. Base: 14236 rules (1313 with conclusion selected). Queue: 1494 rules.
36200 rules inserted. Base: 14358 rules (1313 with conclusion selected). Queue: 1501 rules.
36400 rules inserted. Base: 14480 rules (1313 with conclusion selected). Queue: 1508 rules.
36600 rules inserted. Base: 14602 rules (1313 with conclusion selected). Queue: 1558 rules.
36800 rules inserted. Base: 14802 rules (1313 with conclusion selected). Queue: 1634 rules.
37000 rules inserted. Base: 14906 rules (1313 with conclusion selected). Queue: 1667 rules.
37200 rules inserted. Base: 14921 rules (1313 with conclusion selected). Queue: 1645 rules.
37400 rules inserted. Base: 15010 rules (1313 with conclusion selected). Queue: 1627 rules.
37600 rules inserted. Base: 15100 rules (1313 with conclusion selected). Queue: 1611 rules.
37800 rules inserted. Base: 15187 rules (1313 with conclusion selected). Queue: 1592 rules.
38000 rules inserted. Base: 15260 rules (1313 with conclusion selected). Queue: 1609 rules.
38200 rules inserted. Base: 15458 rules (1313 with conclusion selected). Queue: 1646 rules.
38400 rules inserted. Base: 15658 rules (1313 with conclusion selected). Queue: 1684 rules.
38600 rules inserted. Base: 15791 rules (1313 with conclusion selected). Queue: 1715 rules.
38800 rules inserted. Base: 15843 rules (1313 with conclusion selected). Queue: 1671 rules.
39000 rules inserted. Base: 15900 rules (1313 with conclusion selected). Queue: 1615 rules.
39200 rules inserted. Base: 15956 rules (1313 with conclusion selected). Queue: 1566 rules.
39400 rules inserted. Base: 16000 rules (1313 with conclusion selected). Queue: 1518 rules.
39600 rules inserted. Base: 16105 rules (1313 with conclusion selected). Queue: 1526 rules.
39800 rules inserted. Base: 16277 rules (1313 with conclusion selected). Queue: 1528 rules.
40000 rules inserted. Base: 16451 rules (1313 with conclusion selected). Queue: 1531 rules.
40200 rules inserted. Base: 16614 rules (1313 with conclusion selected). Queue: 1526 rules.
40400 rules inserted. Base: 16632 rules (1313 with conclusion selected). Queue: 1516 rules.
40600 rules inserted. Base: 16706 rules (1313 with conclusion selected). Queue: 1419 rules.
40800 rules inserted. Base: 16790 rules (1313 with conclusion selected). Queue: 1328 rules.
41000 rules inserted. Base: 16860 rules (1313 with conclusion selected). Queue: 1286 rules.
41200 rules inserted. Base: 16995 rules (1313 with conclusion selected). Queue: 1294 rules.
41400 rules inserted. Base: 17155 rules (1313 with conclusion selected). Queue: 1295 rules.
41600 rules inserted. Base: 17314 rules (1313 with conclusion selected). Queue: 1296 rules.
41800 rules inserted. Base: 17402 rules (1313 with conclusion selected). Queue: 1298 rules.
42000 rules inserted. Base: 17447 rules (1313 with conclusion selected). Queue: 1233 rules.
42200 rules inserted. Base: 17503 rules (1313 with conclusion selected). Queue: 1133 rules.
42400 rules inserted. Base: 17619 rules (1313 with conclusion selected). Queue: 1124 rules.
42600 rules inserted. Base: 17744 rules (1313 with conclusion selected). Queue: 1100 rules.
42800 rules inserted. Base: 17869 rules (1313 with conclusion selected). Queue: 1075 rules.
43000 rules inserted. Base: 17606 rules (1313 with conclusion selected). Queue: 1052 rules.
43200 rules inserted. Base: 17629 rules (1313 with conclusion selected). Queue: 953 rules.
43400 rules inserted. Base: 17632 rules (1313 with conclusion selected). Queue: 898 rules.
43600 rules inserted. Base: 17720 rules (1313 with conclusion selected). Queue: 786 rules.
43800 rules inserted. Base: 17792 rules (1313 with conclusion selected). Queue: 683 rules.
44000 rules inserted. Base: 17861 rules (1315 with conclusion selected). Queue: 587 rules.
44200 rules inserted. Base: 17955 rules (1315 with conclusion selected). Queue: 494 rules.
44400 rules inserted. Base: 18068 rules (1315 with conclusion selected). Queue: 362 rules.
44600 rules inserted. Base: 15875 rules (1315 with conclusion selected). Queue: 183 rules.
44800 rules inserted. Base: 15159 rules (1315 with conclusion selected). Queue: 125 rules.
45000 rules inserted. Base: 9678 rules (1319 with conclusion selected). Queue: 6 rules.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22))
goal reachable: attacker(m_22) -> end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_22).

3. The attacker has some term re_24.
attacker(re_24).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know re_24.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),re_24).
attacker(hash(hash(hash(somename,empty),empty),re_24)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),re_24).
By 2, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know re_24.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
Using the function concat3 the attacker may obtain concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).
attacker(concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)) that the attacker may have by 12 may be received at input {977}.
So event RecvMsg(bob,alice,stagepack_a(sid_5),m_22) may be executed at {1047}.
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).

14. By 13, end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: attacker(m_22) -> end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_22).

3. The attacker has some term re_24.
attacker(re_24).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know re_24.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),re_24).
attacker(hash(hash(hash(somename,empty),empty),re_24)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),re_24).
By 2, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know re_24.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
Using the function concat3 the attacker may obtain concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).
attacker(concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)) that the attacker may have by 12 may be received at input {977}.
So event RecvMsg(bob,alice,stagepack_a(sid_5),m_22) may be executed at {1047}.
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).

14. By 13, end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false
goal reachable: attacker(m_22) -> end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_22).

3. The attacker has some term re_24.
attacker(re_24).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know re_24.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),re_24).
attacker(hash(hash(hash(somename,empty),empty),re_24)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),re_24).
By 2, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know re_24.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
Using the function concat3 the attacker may obtain concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).
attacker(concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)) that the attacker may have by 12 may be received at input {977}.
So event RecvMsg(bob,alice,stagepack_a(sid_5),m_22) may be executed at {1047}.
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).

14. By 13, end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: attacker(m_22) -> end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_22).

3. The attacker has some term re_24.
attacker(re_24).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know re_24.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),re_24).
attacker(hash(hash(hash(somename,empty),empty),re_24)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),re_24).
By 2, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know re_24.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
Using the function concat3 the attacker may obtain concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).
attacker(concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)) that the attacker may have by 12 may be received at input {977}.
So event RecvMsg(bob,alice,stagepack_a(sid_5),m_22) may be executed at {1047}.
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).

14. By 13, end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false
goal reachable: attacker(m_22) -> end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_22).

3. The attacker has some term re_24.
attacker(re_24).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know re_24.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),re_24).
attacker(hash(hash(hash(somename,empty),empty),re_24)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),re_24).
By 2, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know re_24.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22).
Using the function concat3 the attacker may obtain concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)).
attacker(concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(re_24,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),re_24),m_22)) that the attacker may have by 12 may be received at input {977}.
So event RecvMsg(bob,alice,stagepack_a(sid_5),m_22) may be executed at {1047}.
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).

14. By 13, end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_a(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_a(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

3. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

4. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

5. Using the function empty the attacker may obtain empty.
attacker(empty).

6. Using the function somename the attacker may obtain somename.
attacker(somename).

7. By 6, the attacker may know somename.
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

8. By 7, the attacker may know hash(somename,empty).
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

9. By 8, the attacker may know hash(hash(somename,empty),empty).
By 4, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

10. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

11. By 5, the attacker may know empty.
By 10, the attacker may know minnonce.
By 9, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 3, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

12. By 11, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_5).
attacker(msg_a(alice,bob,sid_5)).

13. By 12, the attacker may know msg_a(alice,bob,sid_5).
So the attacker may know msg_a(alice,bob,sid_5) in phase 1.
attacker_p1(msg_a(alice,bob,sid_5)).

14. By 13, attacker_p1(msg_a(alice,bob,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_5)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_a(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

3. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

4. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

5. Using the function empty the attacker may obtain empty.
attacker(empty).

6. Using the function somename the attacker may obtain somename.
attacker(somename).

7. By 6, the attacker may know somename.
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

8. By 7, the attacker may know hash(somename,empty).
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

9. By 8, the attacker may know hash(hash(somename,empty),empty).
By 4, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

10. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

11. By 5, the attacker may know empty.
By 10, the attacker may know minnonce.
By 9, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 3, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

12. By 11, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_5).
attacker(msg_a(alice,bob,sid_5)).

13. By 12, the attacker may know msg_a(alice,bob,sid_5).
So the attacker may know msg_a(alice,bob,sid_5) in phase 1.
attacker_p1(msg_a(alice,bob,sid_5)).

14. By 13, attacker_p1(msg_a(alice,bob,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_5)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_a(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

3. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

4. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

5. Using the function empty the attacker may obtain empty.
attacker(empty).

6. Using the function somename the attacker may obtain somename.
attacker(somename).

7. By 6, the attacker may know somename.
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

8. By 7, the attacker may know hash(somename,empty).
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

9. By 8, the attacker may know hash(hash(somename,empty),empty).
By 4, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

10. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

11. By 5, the attacker may know empty.
By 10, the attacker may know minnonce.
By 9, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 3, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

12. By 11, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_5).
attacker(msg_a(alice,bob,sid_5)).

13. By 12, the attacker may know msg_a(alice,bob,sid_5).
So the attacker may know msg_a(alice,bob,sid_5) in phase 1.
attacker_p1(msg_a(alice,bob,sid_5)).

14. By 13, attacker_p1(msg_a(alice,bob,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_5)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_a(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

3. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

4. By 2, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

5. Using the function empty the attacker may obtain empty.
attacker(empty).

6. Using the function somename the attacker may obtain somename.
attacker(somename).

7. By 6, the attacker may know somename.
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

8. By 7, the attacker may know hash(somename,empty).
By 5, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

9. By 8, the attacker may know hash(hash(somename,empty),empty).
By 4, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

10. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

11. By 5, the attacker may know empty.
By 10, the attacker may know minnonce.
By 9, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 3, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

12. By 11, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_5).
attacker(msg_a(alice,bob,sid_5)).

13. By 12, the attacker may know msg_a(alice,bob,sid_5).
So the attacker may know msg_a(alice,bob,sid_5) in phase 1.
attacker_p1(msg_a(alice,bob,sid_5)).

14. By 13, attacker_p1(msg_a(alice,bob,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_a(alice,bob,sid_5)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22))
goal reachable: begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && attacker(m_22) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. We assume as hypothesis that
attacker(m_22).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The event LeakS(phase0,bob) may be executed at {1411}.
The event LeakM(phase0,bob) may be executed at {1412}.
So the message (key_s(bob),key_m(bob)) may be sent to the attacker at output {1413}.
attacker((key_s(bob),key_m(bob))).

6. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 2-proj-2-tuple the attacker may obtain key_m(bob).
attacker(key_m(bob)).

7. By 6, the attacker may know key_m(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_m(bob),g).
attacker(dhexp_real(key_m(bob),g)).

8. By 7, the attacker may know dhexp_real(key_m(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_m(bob),g)).
attacker(validkey(dhexp_real(key_m(bob),g))).

9. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 1-proj-2-tuple the attacker may obtain key_s(bob).
attacker(key_s(bob)).

10. By 9, the attacker may know key_s(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

11. By 10, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

12. Using the function zero the attacker may obtain zero.
attacker(zero).

13. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

15. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 14, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

22. By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
By 12, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero)).

23. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

24. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),zero).
attacker(hmac_hash2(hash(somename,empty),zero)).

25. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 23, the attacker may know minnonce.
By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 11, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).

26. By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))))).

27. By 23, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

28. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 27, the attacker may know increment_nonce(minnonce).
By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 8, the attacker may know validkey(dhexp_real(key_m(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

29. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

30. By 6, the attacker may know key_m(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).

31. By 9, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).

32. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
By 30, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)))).

35. By 34, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
By 23, the attacker may know minnonce.
By 29, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 3, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22)).

36. By 12, the attacker may know zero.
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22).
Using the function concat4 the attacker may obtain concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22)).
attacker(concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22))).

37. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),m_22)) that the attacker may have by 36 may be received at input {101}.
So event RecvMsg(alice,bob,stagepack_b(sid_5),m_22) may be executed at {347}.
end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22)).

38. By 37, end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22)).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false
goal reachable: begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && attacker(m_22) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,alice,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && attacker(m_22) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_b(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,alice,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {1444}.
table(statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

6. The attacker has some term ns_18.
attacker(ns_18).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

8. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 6, the attacker may know ns_18.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

9. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 8 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

10. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 9 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

11. By 10, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).

12. The attacker has some term ns_19.
attacker(ns_19).

13. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 12, the attacker may know ns_19.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 13 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

15. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 14 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

16. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

19. Using the function zero the attacker may obtain zero.
attacker(zero).

20. Using the function empty the attacker may obtain empty.
attacker(empty).

21. Using the function somename the attacker may obtain somename.
attacker(somename).

22. By 21, the attacker may know somename.
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

23. By 22, the attacker may know hash(somename,empty).
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

24. By 23, the attacker may know hash(hash(somename,empty),empty).
By 19, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. By 20, the attacker may know empty.
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

27. The attacker has some term ns_20.
attacker(ns_20).

28. By 19, the attacker may know zero.
By 27, the attacker may know ns_20.
By 26, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

29. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 28 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

30. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 29 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

31. By 30, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
attacker(validkey(dhexp_real(key_e(bob,charlie,sid_6),g))).

32. By 31, the attacker may know validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
Using the function concat4 the attacker may obtain concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

33. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) that the attacker may have by 32 may be received at input {101}.
So event RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6)) may be executed at {347}.
end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).

34. By 33, end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_b(sid_6),msg_b(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {1444}.
table(statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

6. The attacker has some term ns_18.
attacker(ns_18).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

8. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 6, the attacker may know ns_18.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

9. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 8 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

10. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 9 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

11. By 10, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).

12. The attacker has some term ns_19.
attacker(ns_19).

13. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 12, the attacker may know ns_19.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 13 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

15. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 14 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

16. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

19. Using the function zero the attacker may obtain zero.
attacker(zero).

20. Using the function empty the attacker may obtain empty.
attacker(empty).

21. Using the function somename the attacker may obtain somename.
attacker(somename).

22. By 21, the attacker may know somename.
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

23. By 22, the attacker may know hash(somename,empty).
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

24. By 23, the attacker may know hash(hash(somename,empty),empty).
By 19, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. By 20, the attacker may know empty.
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

27. The attacker has some term ns_20.
attacker(ns_20).

28. By 19, the attacker may know zero.
By 27, the attacker may know ns_20.
By 26, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

29. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 28 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

30. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 29 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

31. By 30, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
attacker(validkey(dhexp_real(key_e(bob,charlie,sid_6),g))).

32. By 31, the attacker may know validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
Using the function concat4 the attacker may obtain concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

33. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) that the attacker may have by 32 may be received at input {101}.
So event RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6)) may be executed at {347}.
end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).

34. By 33, end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_b(sid_5),msg_b(bob,charlie,sid_6))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_b(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

15. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

16. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

19. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

20. The attacker has some term ns_19.
attacker(ns_19).

21. By 3, the attacker may know zero.
By 20, the attacker may know ns_19.
By 19, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

22. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 21 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

23. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 22 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

24. By 23, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

25. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

26. By 25, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 24, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

28. By 27, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

29. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

32. By 31, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 9, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 15, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

33. By 32, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_5).
attacker(msg_b(bob,alice,sid_5)).

34. By 33, the attacker may know msg_b(bob,alice,sid_5).
So the attacker may know msg_b(bob,alice,sid_5) in phase 1.
attacker_p1(msg_b(bob,alice,sid_5)).

35. By 34, attacker_p1(msg_b(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_5)).


RESULT not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_b(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

15. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

16. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

19. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

20. The attacker has some term ns_19.
attacker(ns_19).

21. By 3, the attacker may know zero.
By 20, the attacker may know ns_19.
By 19, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

22. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 21 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

23. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 22 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

24. By 23, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

25. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

26. By 25, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 24, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

28. By 27, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

29. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

32. By 31, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 9, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 15, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

33. By 32, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_5).
attacker(msg_b(bob,alice,sid_5)).

34. By 33, the attacker may know msg_b(bob,alice,sid_5).
So the attacker may know msg_b(bob,alice,sid_5) in phase 1.
attacker_p1(msg_b(bob,alice,sid_5)).

35. By 34, attacker_p1(msg_b(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_5)).


RESULT not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_b(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

15. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

16. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

19. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

20. The attacker has some term ns_19.
attacker(ns_19).

21. By 3, the attacker may know zero.
By 20, the attacker may know ns_19.
By 19, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

22. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 21 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

23. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 22 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

24. By 23, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

25. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

26. By 25, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 24, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

28. By 27, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

29. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

32. By 31, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 9, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 15, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

33. By 32, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_5).
attacker(msg_b(bob,alice,sid_5)).

34. By 33, the attacker may know msg_b(bob,alice,sid_5).
So the attacker may know msg_b(bob,alice,sid_5) in phase 1.
attacker_p1(msg_b(bob,alice,sid_5)).

35. By 34, attacker_p1(msg_b(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_5)).


RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_b(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

15. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

16. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 14, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

19. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

20. The attacker has some term ns_19.
attacker(ns_19).

21. By 3, the attacker may know zero.
By 20, the attacker may know ns_19.
By 19, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

22. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 21 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

23. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 22 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

24. By 23, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

25. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

26. By 25, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 24, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

27. By 26, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

28. By 27, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

29. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

32. By 31, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 9, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 15, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

33. By 32, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_5).
attacker(msg_b(bob,alice,sid_5)).

34. By 33, the attacker may know msg_b(bob,alice,sid_5).
So the attacker may know msg_b(bob,alice,sid_5) in phase 1.
attacker_p1(msg_b(bob,alice,sid_5)).

35. By 34, attacker_p1(msg_b(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_b(bob,alice,sid_5)).


RESULT not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22))
goal reachable: attacker(m_22) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. We assume as hypothesis that
attacker(m_22).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)) that the attacker may have by 42 may be received at input {1288}.
So event RecvMsg(bob,alice,stagepack_c(sid_5),m_22) may be executed at {1350}.
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).

44. By 43, end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: attacker(m_22) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. We assume as hypothesis that
attacker(m_22).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)) that the attacker may have by 42 may be received at input {1288}.
So event RecvMsg(bob,alice,stagepack_c(sid_5),m_22) may be executed at {1350}.
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).

44. By 43, end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false
goal reachable: attacker(m_22) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. We assume as hypothesis that
attacker(m_22).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)) that the attacker may have by 42 may be received at input {1288}.
So event RecvMsg(bob,alice,stagepack_c(sid_5),m_22) may be executed at {1350}.
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).

44. By 43, end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: attacker(m_22) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. We assume as hypothesis that
attacker(m_22).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)) that the attacker may have by 42 may be received at input {1288}.
So event RecvMsg(bob,alice,stagepack_c(sid_5),m_22) may be executed at {1350}.
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).

44. By 43, end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false
goal reachable: attacker(m_22) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. We assume as hypothesis that
attacker(m_22).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),m_22)) that the attacker may have by 42 may be received at input {1288}.
So event RecvMsg(bob,alice,stagepack_c(sid_5),m_22) may be executed at {1350}.
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).

44. By 43, end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(bob,alice,stagepack_c(sid_5),m_22)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false cannot be proved.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_c(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The attacker has some term plaintext_b_2.
attacker(plaintext_b_2).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The event LeakS(phase0,bob) may be executed at {1411}.
The event LeakM(phase0,bob) may be executed at {1412}.
So the message (key_s(bob),key_m(bob)) may be sent to the attacker at output {1413}.
attacker((key_s(bob),key_m(bob))).

6. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 2-proj-2-tuple the attacker may obtain key_m(bob).
attacker(key_m(bob)).

7. By 6, the attacker may know key_m(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_m(bob),g).
attacker(dhexp_real(key_m(bob),g)).

8. By 7, the attacker may know dhexp_real(key_m(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_m(bob),g)).
attacker(validkey(dhexp_real(key_m(bob),g))).

9. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 1-proj-2-tuple the attacker may obtain key_s(bob).
attacker(key_s(bob)).

10. By 9, the attacker may know key_s(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

11. By 10, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

12. Using the function zero the attacker may obtain zero.
attacker(zero).

13. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

15. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 14, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

22. By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
By 12, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero)).

23. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

24. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),zero).
attacker(hmac_hash2(hash(somename,empty),zero)).

25. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 23, the attacker may know minnonce.
By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 11, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).

26. By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))))).

27. By 23, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

28. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 27, the attacker may know increment_nonce(minnonce).
By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 8, the attacker may know validkey(dhexp_real(key_m(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

29. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

30. By 6, the attacker may know key_m(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).

31. By 9, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).

32. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
By 30, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)))).

35. By 34, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
By 23, the attacker may know minnonce.
By 29, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 3, the attacker may know plaintext_b_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).

36. By 12, the attacker may know zero.
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
Using the function concat4 the attacker may obtain concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
attacker(concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))).

37. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)) that the attacker may have by 36 may be received at input {101}.
So the entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {348}.
table(statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

38. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 37 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))) may be sent to the attacker at output {408}.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))).

39. By 38, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).

40. By 29, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))).

41. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
By 30, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)))).

42. By 41, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
By 12, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero)).

43. By 42, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero).
By 23, the attacker may know minnonce.
By 40, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).

44. By 43, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_c(alice,bob,sid_5).
attacker(msg_c(alice,bob,sid_5)).

45. By 44, the attacker may know msg_c(alice,bob,sid_5).
So the attacker may know msg_c(alice,bob,sid_5) in phase 1.
attacker_p1(msg_c(alice,bob,sid_5)).

46. By 45, attacker_p1(msg_c(alice,bob,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_c(alice,bob,sid_5)).


RESULT not attacker_p1(msg_c(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_c(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_c(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> attacker_p1(msg_c(alice,bob,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22))
goal reachable: attacker(m_22) && begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The attacker has some term plaintext_b_2.
attacker(plaintext_b_2).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The event LeakS(phase0,bob) may be executed at {1411}.
The event LeakM(phase0,bob) may be executed at {1412}.
So the message (key_s(bob),key_m(bob)) may be sent to the attacker at output {1413}.
attacker((key_s(bob),key_m(bob))).

6. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 2-proj-2-tuple the attacker may obtain key_m(bob).
attacker(key_m(bob)).

7. By 6, the attacker may know key_m(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_m(bob),g).
attacker(dhexp_real(key_m(bob),g)).

8. By 7, the attacker may know dhexp_real(key_m(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_m(bob),g)).
attacker(validkey(dhexp_real(key_m(bob),g))).

9. By 5, the attacker may know (key_s(bob),key_m(bob)).
Using the function 1-proj-2-tuple the attacker may obtain key_s(bob).
attacker(key_s(bob)).

10. By 9, the attacker may know key_s(bob).
By 4, the attacker may know g.
Using the function dhexp_real the attacker may obtain dhexp_real(key_s(bob),g).
attacker(dhexp_real(key_s(bob),g)).

11. By 10, the attacker may know dhexp_real(key_s(bob),g).
Using the function validkey the attacker may obtain validkey(dhexp_real(key_s(bob),g)).
attacker(validkey(dhexp_real(key_s(bob),g))).

12. Using the function zero the attacker may obtain zero.
attacker(zero).

13. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

15. By 13, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g)))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))).
By 14, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

22. By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
By 12, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero)).

23. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

24. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),zero).
attacker(hmac_hash2(hash(somename,empty),zero)).

25. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 23, the attacker may know minnonce.
By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 11, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).

26. By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero).
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))))).

27. By 23, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

28. By 24, the attacker may know hmac_hash2(hash(somename,empty),zero).
By 27, the attacker may know increment_nonce(minnonce).
By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 8, the attacker may know validkey(dhexp_real(key_m(bob),g)).
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

29. By 26, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

30. By 6, the attacker may know key_m(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).

31. By 9, the attacker may know key_s(bob).
By 15, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
Using the function dhexp the attacker may obtain dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
attacker(dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).

32. By 18, the attacker may know hash(somename,empty).
By 12, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 31, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
By 30, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)))).

35. By 34, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
By 23, the attacker may know minnonce.
By 29, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 3, the attacker may know plaintext_b_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).

36. By 12, the attacker may know zero.
By 25, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))).
By 28, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
Using the function concat4 the attacker may obtain concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
attacker(concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))).

37. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(zero,encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)) that the attacker may have by 36 may be received at input {101}.
So the entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {348}.
table(statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

38. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 37 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {407}.
table(statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

39. We assume as hypothesis that
attacker(m_22).

40. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 37 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))) may be sent to the attacker at output {408}.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))).

41. By 40, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).

42. By 29, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)).
By 41, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))).

44. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))).
By 30, the attacker may know dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g)))).

45. By 44, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))).
By 12, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero)).

46. By 45, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero).
By 23, the attacker may know minnonce.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))).
By 39, the attacker may know m_22.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22)).

47. The attacker has some term ns_18.
attacker(ns_18).

48. The attacker has some term ne_24.
attacker(ne_24).

49. By 48, the attacker may know ne_24.
By 47, the attacker may know ns_18.
By 46, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_18,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22)).
attacker(concat3(ne_24,ns_18,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22))).

50. The entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),zero,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 38 may be read at get {476}.
The message concat3(ne_24,ns_18,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),zero),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),plaintext_b_2)),msg_c(alice,bob,sid_5))),m_22)) that the attacker may have by 49 may be received at input {412}.
So event RecvMsg(alice,bob,stagepack_d(sid_5),m_22) may be executed at {474}.
end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22)).

51. By 50, end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22)).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22)).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false
goal reachable: attacker(m_22) && begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,alice,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_5),msg_d(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: attacker(m_22) && begin(SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5))) && begin(LeakM(phase0,bob)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5))) -> end(RecvMsg(alice,bob,stagepack_d(sid_5),m_22))
Abbreviations:
sid_5 = sid[!1 = @sid]
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,alice,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_5),msg_d(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_5),msg_d(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {1444}.
table(statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

6. The attacker has some term ns_18.
attacker(ns_18).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

8. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 6, the attacker may know ns_18.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

9. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 8 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

10. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 9 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

11. By 10, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).

12. The attacker has some term ns_19.
attacker(ns_19).

13. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 12, the attacker may know ns_19.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 13 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

15. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 14 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

16. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

19. Using the function zero the attacker may obtain zero.
attacker(zero).

20. Using the function empty the attacker may obtain empty.
attacker(empty).

21. Using the function somename the attacker may obtain somename.
attacker(somename).

22. By 21, the attacker may know somename.
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

23. By 22, the attacker may know hash(somename,empty).
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

24. By 23, the attacker may know hash(hash(somename,empty),empty).
By 19, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. By 20, the attacker may know empty.
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

27. The attacker has some term ns_20.
attacker(ns_20).

28. By 19, the attacker may know zero.
By 27, the attacker may know ns_20.
By 26, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

29. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 28 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

30. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 29 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

31. By 30, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
attacker(validkey(dhexp_real(key_e(bob,charlie,sid_6),g))).

32. By 31, the attacker may know validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
Using the function concat4 the attacker may obtain concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

33. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) that the attacker may have by 32 may be received at input {101}.
So the entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {348}.
table(statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

34. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {407}.
table(statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

35. The attacker has some term ns_21.
attacker(ns_21).

36. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 35, the attacker may know ns_21.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

37. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 36 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

38. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 37 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the entry statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1751}.
table(statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

39. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))) may be sent to the attacker at output {408}.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))).

40. By 39, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).

41. The attacker has some term ns_22.
attacker(ns_22).

42. The attacker has some term ne_24.
attacker(ne_24).

43. By 42, the attacker may know ne_24.
By 41, the attacker may know ns_22.
By 40, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).
attacker(concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))).

44. The entry statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 38 may be read at get {1820}.
The message concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))) that the attacker may have by 43 may be received at input {1756}.
So the entry statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1819}.
table(statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

45. The entry statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 44 may be read at get {1878}.
The event SendMsg(bob,charlie,stagepack_d(sid_6),msg_d(bob,charlie,sid_6)) may be executed at {1876}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))) may be sent to the attacker at output {1877}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)))).

46. By 45, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).

47. The attacker has some term ns_23.
attacker(ns_23).

48. The attacker has some term ne_25.
attacker(ne_25).

49. By 48, the attacker may know ne_25.
By 47, the attacker may know ns_23.
By 46, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)).
Using the function concat3 the attacker may obtain concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).
attacker(concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)))).

50. The entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 34 may be read at get {476}.
The message concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))) that the attacker may have by 49 may be received at input {412}.
So event RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6)) may be executed at {474}.
end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).

51. By 50, end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_5),msg_d(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,charlie,stagepack_b(sid_5),msg_b(bob,charlie,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvMsg(alice,bob,stagepack_d(sid_6),msg_d(bob,charlie,sid_5)))
Abbreviations:
sid_6 = sid[!1 = @sid]
sid_5 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {1444}.
table(statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

6. The attacker has some term ns_18.
attacker(ns_18).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

8. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 6, the attacker may know ns_18.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

9. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 8 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

10. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 9 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

11. By 10, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).

12. The attacker has some term ns_19.
attacker(ns_19).

13. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 12, the attacker may know ns_19.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 13 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

15. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 14 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

16. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

19. Using the function zero the attacker may obtain zero.
attacker(zero).

20. Using the function empty the attacker may obtain empty.
attacker(empty).

21. Using the function somename the attacker may obtain somename.
attacker(somename).

22. By 21, the attacker may know somename.
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

23. By 22, the attacker may know hash(somename,empty).
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

24. By 23, the attacker may know hash(hash(somename,empty),empty).
By 19, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. By 20, the attacker may know empty.
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

27. The attacker has some term ns_20.
attacker(ns_20).

28. By 19, the attacker may know zero.
By 27, the attacker may know ns_20.
By 26, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

29. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 28 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

30. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 29 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) may be sent to the attacker at output {1752}.
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

31. By 30, the attacker may know concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
attacker(validkey(dhexp_real(key_e(bob,charlie,sid_6),g))).

32. By 31, the attacker may know validkey(dhexp_real(key_e(bob,charlie,sid_6),g)).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)).
Using the function concat4 the attacker may obtain concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))).
attacker(concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))).

33. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))) that the attacker may have by 32 may be received at input {101}.
So the entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {348}.
table(statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

34. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {407}.
table(statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

35. The attacker has some term ns_21.
attacker(ns_21).

36. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 35, the attacker may know ns_21.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

37. The entry statestore(bob,charlie,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1517}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 36 may be received at input {1445}.
So the entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1516}.
table(statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

38. The entry statestore(bob,charlie,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 37 may be read at get {1753}.
The event SendMsg(bob,charlie,stagepack_b(sid_6),msg_b(bob,charlie,sid_6)) may be executed at {1750}.
So the entry statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1751}.
table(statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

39. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))) may be sent to the attacker at output {408}.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))).

40. By 39, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).

41. The attacker has some term ns_22.
attacker(ns_22).

42. The attacker has some term ne_24.
attacker(ne_24).

43. By 42, the attacker may know ne_24.
By 41, the attacker may know ns_22.
By 40, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))).
attacker(concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))).

44. The entry statestore(bob,charlie,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 38 may be read at get {1820}.
The message concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))) that the attacker may have by 43 may be received at input {1756}.
So the entry statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1819}.
table(statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

45. The entry statestore(bob,charlie,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),key_e(bob,charlie,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 44 may be read at get {1878}.
The event SendMsg(bob,charlie,stagepack_d(sid_6),msg_d(bob,charlie,sid_6)) may be executed at {1876}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))) may be sent to the attacker at output {1877}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)))).

46. By 45, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).

47. The attacker has some term ns_23.
attacker(ns_23).

48. The attacker has some term ne_25.
attacker(ne_25).

49. By 48, the attacker may know ne_25.
By 47, the attacker may know ns_23.
By 46, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)).
Using the function concat3 the attacker may obtain concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))).
attacker(concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6)))).

50. The entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,charlie,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 34 may be read at get {476}.
The message concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,charlie,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,charlie,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,charlie,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,charlie,sid_6))) that the attacker may have by 49 may be received at input {412}.
So event RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6)) may be executed at {474}.
end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).

51. By 50, end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).
The goal is reached, represented in the following fact:
end(RecvMsg(alice,bob,stagepack_d(sid_5),msg_d(bob,charlie,sid_6))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_d(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. The attacker has some term plaintext_c_2.
attacker(plaintext_c_2).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know plaintext_c_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)) that the attacker may have by 42 may be received at input {1288}.
So the entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1351}.
table(statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

44. The entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 43 may be read at get {1410}.
The event SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5)) may be executed at {1408}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))) may be sent to the attacker at output {1409}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)))).

45. By 44, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

46. By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

47. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

48. By 47, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
By 45, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

49. By 48, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_5).
attacker(msg_d(bob,alice,sid_5)).

50. By 49, the attacker may know msg_d(bob,alice,sid_5).
So the attacker may know msg_d(bob,alice,sid_5) in phase 1.
attacker_p1(msg_d(bob,alice,sid_5)).

51. By 50, attacker_p1(msg_d(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_d(bob,alice,sid_5)).


RESULT not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_d(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. The attacker has some term plaintext_c_2.
attacker(plaintext_c_2).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know plaintext_c_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)) that the attacker may have by 42 may be received at input {1288}.
So the entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1351}.
table(statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

44. The entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 43 may be read at get {1410}.
The event SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5)) may be executed at {1408}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))) may be sent to the attacker at output {1409}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)))).

45. By 44, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

46. By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

47. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

48. By 47, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
By 45, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

49. By 48, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_5).
attacker(msg_d(bob,alice,sid_5)).

50. By 49, the attacker may know msg_d(bob,alice,sid_5).
So the attacker may know msg_d(bob,alice,sid_5) in phase 1.
attacker_p1(msg_d(bob,alice,sid_5)).

51. By 50, attacker_p1(msg_d(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_d(bob,alice,sid_5)).


RESULT not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_d(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. The attacker has some term plaintext_c_2.
attacker(plaintext_c_2).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know plaintext_c_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)) that the attacker may have by 42 may be received at input {1288}.
So the entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1351}.
table(statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

44. The entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 43 may be read at get {1410}.
The event SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5)) may be executed at {1408}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))) may be sent to the attacker at output {1409}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)))).

45. By 44, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

46. By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

47. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

48. By 47, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
By 45, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

49. By 48, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_5).
attacker(msg_d(bob,alice,sid_5)).

50. By 49, the attacker may know msg_d(bob,alice,sid_5).
So the attacker may know msg_d(bob,alice,sid_5) in phase 1.
attacker_p1(msg_d(bob,alice,sid_5)).

51. By 50, attacker_p1(msg_d(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_d(bob,alice,sid_5)).


RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) -> attacker_p1(msg_d(bob,alice,sid_5))
Abbreviations:
sid_5 = sid[!1 = @sid]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]

1. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

2. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

3. Using the function zero the attacker may obtain zero.
attacker(zero).

4. Using the function empty the attacker may obtain empty.
attacker(empty).

5. Using the function somename the attacker may obtain somename.
attacker(somename).

6. By 5, the attacker may know somename.
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

7. By 6, the attacker may know hash(somename,empty).
By 4, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

8. By 7, the attacker may know hash(hash(somename,empty),empty).
By 3, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

9. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

10. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 2, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

11. The attacker has some term ns_18.
attacker(ns_18).

12. By 3, the attacker may know zero.
By 11, the attacker may know ns_18.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

13. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 12 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

14. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 13 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

15. The attacker has some term plaintext_c_2.
attacker(plaintext_c_2).

16. The attacker has some term ns_19.
attacker(ns_19).

17. By 3, the attacker may know zero.
By 16, the attacker may know ns_19.
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

18. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 17 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

19. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 18 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

20. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).

21. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

22. By 19, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).

23. The attacker has some term plaintext_a_3.
attacker(plaintext_a_3).

24. By 4, the attacker may know empty.
By 9, the attacker may know minnonce.
By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 23, the attacker may know plaintext_a_3.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).

25. The attacker has some term ns_20.
attacker(ns_20).

26. By 3, the attacker may know zero.
By 25, the attacker may know ns_20.
By 24, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))).

27. The entry statestore(bob,alice,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 1 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)) that the attacker may have by 26 may be received at input {977}.
So the entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

28. The entry statestore(bob,alice,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 27 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

29. By 28, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_3)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_5),g))).

30. By 8, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 10, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

31. By 30, the attacker may know hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
By 29, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_5),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g)))).

32. By 31, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))).
By 22, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g))))).

33. By 32, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))).
By 21, the attacker may know encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))))).

34. By 33, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).
By 20, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))).

35. By 6, the attacker may know hash(somename,empty).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),zero).
attacker(hmac_hash1(hash(somename,empty),zero)).

36. By 35, the attacker may know hmac_hash1(hash(somename,empty),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero)).

37. By 36, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero)).

38. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

39. By 38, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 15, the attacker may know plaintext_c_2.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).

40. The attacker has some term ns_21.
attacker(ns_21).

41. The attacker has some term ne_24.
attacker(ne_24).

42. By 41, the attacker may know ne_24.
By 40, the attacker may know ns_21.
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

43. The entry statestore(bob,alice,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 14 may be read at get {1352}.
The message concat3(ne_24,ns_21,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)) that the attacker may have by 42 may be received at input {1288}.
So the entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) may be inserted in a table at insert {1351}.
table(statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce)))).

44. The entry statestore(bob,alice,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_5),g)),key_e(bob,alice,sid_5)),empty,empty,zero,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce))) that may be in a table by 43 may be read at get {1410}.
The event SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5)) may be executed at {1408}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))) may be sent to the attacker at output {1409}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)))).

45. By 44, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

46. By 34, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))).
By 39, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2))).

47. By 37, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero).
By 3, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero)).

48. By 47, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero).
By 9, the attacker may know minnonce.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)).
By 45, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5))).

49. By 48, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_5),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_5))),plaintext_c_2)),msg_d(bob,alice,sid_5)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_5).
attacker(msg_d(bob,alice,sid_5)).

50. By 49, the attacker may know msg_d(bob,alice,sid_5).
So the attacker may know msg_d(bob,alice,sid_5) in phase 1.
attacker_p1(msg_d(bob,alice,sid_5)).

51. By 50, attacker_p1(msg_d(bob,alice,sid_5)).
The goal is reached, represented in the following fact:
attacker_p1(msg_d(bob,alice,sid_5)).


RESULT not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_5),msg_d(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_c(sid_6),msg_c(alice,bob,sid_6))) && begin(SendMsg(bob,alice,stagepack_b(sid_5),msg_b(bob,alice,sid_5))) && begin(SendMsg(alice,bob,stagepack_a(sid_6),msg_a(alice,bob,sid_6))) -> end(RecvEnd(true))
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

Derivation:
Abbreviations:
sid_5 = sid[!1 = @sid]
sid_6 = sid[!1 = @sid_1]

1. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) may be inserted in a table at insert {29}.
table(statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) may be inserted in a table at insert {98}.
table(statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true)))).

3. The entry statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) may be inserted in a table at insert {976}.
table(statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_5,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,true))) that may be in a table by 1 may be read at get {100}.
The event SendMsg(alice,bob,stagepack_a(sid_5),msg_a(alice,bob,sid_5)) may be executed at {97}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) may be sent to the attacker at output {99}.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).

6. The attacker has some term ns_18.
attacker(ns_18).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_5),g))).

8. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 6, the attacker may know ns_18.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

9. The entry statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1049}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_18,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 8 may be received at input {977}.
So the entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

10. The entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 9 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_6),msg_b(bob,alice,sid_6)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))).

11. By 10, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).
Using the function 4-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).

12. The attacker has some term ns_19.
attacker(ns_19).

13. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 12, the attacker may know ns_19.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

14. The entry statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1049}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_19,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 13 may be received at input {977}.
So the entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

15. The entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 14 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_6),msg_b(bob,alice,sid_6)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))).

16. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).
Using the function 3-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))).

17. By 15, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_5),g))),dhexp_real(key_m(bob),dhexp_real(key_e(alice,bob,sid_5),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).
Using the function 2-proj-concat4 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))).

18. The attacker has some term plaintext_a_2.
attacker(plaintext_a_2).

19. Using the function zero the attacker may obtain zero.
attacker(zero).

20. Using the function empty the attacker may obtain empty.
attacker(empty).

21. Using the function somename the attacker may obtain somename.
attacker(somename).

22. By 21, the attacker may know somename.
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

23. By 22, the attacker may know hash(somename,empty).
By 20, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

24. By 23, the attacker may know hash(hash(somename,empty),empty).
By 19, the attacker may know zero.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),zero).
attacker(hash(hash(hash(somename,empty),empty),zero)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. By 20, the attacker may know empty.
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(somename,empty),empty),zero).
By 18, the attacker may know plaintext_a_2.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).

27. The attacker has some term ns_20.
attacker(ns_20).

28. By 19, the attacker may know zero.
By 27, the attacker may know ns_20.
By 26, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2).
Using the function concat3 the attacker may obtain concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)).
attacker(concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))).

29. The entry statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1049}.
The message concat3(zero,ns_20,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)) that the attacker may have by 28 may be received at input {977}.
So the entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false)))).

30. The entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,zero,empty,false))) that may be in a table by 29 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_6),msg_b(bob,alice,sid_6)) may be executed at {1282}.
So the message concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))) may be sent to the attacker at output {1284}.
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))).

31. By 30, the attacker may know concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),zero),zero),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),zero),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),zero),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),zero),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),zero),plaintext_a_2)),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).
Using the function 1-proj-concat4 the attacker may obtain validkey(dhexp_real(key_e(bob,alice,sid_6),g)).
attacker(validkey(dhexp_real(key_e(bob,alice,sid_6),g))).

32. By 31, the attacker may know validkey(dhexp_real(key_e(bob,alice,sid_6),g)).
By 17, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))).
By 16, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))).
By 11, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)).
Using the function concat4 the attacker may obtain concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))).
attacker(concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))).

33. The entry statestore(alice,bob,sid_5,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),empty,empty,empty,empty,true))) that may be in a table by 2 may be read at get {349}.
The message concat4(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))) that the attacker may have by 32 may be received at input {101}.
So the entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {348}.
table(statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

34. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {407}.
table(statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

35. The attacker has some term ns_21.
attacker(ns_21).

36. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_5),g)).
By 35, the attacker may know ns_21.
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))).
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))).

37. The entry statestore(bob,alice,sid_6,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,empty,false))) that may be in a table by 3 may be read at get {1049}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),ns_21,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))) that the attacker may have by 36 may be received at input {977}.
So the entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) may be inserted in a table at insert {1048}.
table(statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false)))).

38. The entry statestore(bob,alice,sid_6,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false))) that may be in a table by 37 may be read at get {1285}.
The event SendMsg(bob,alice,stagepack_b(sid_6),msg_b(bob,alice,sid_6)) may be executed at {1282}.
So the entry statestore(bob,alice,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1283}.
table(statestore(bob,alice,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

39. The entry statestore(alice,bob,sid_5,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 33 may be read at get {409}.
The event SendMsg(alice,bob,stagepack_c(sid_5),msg_c(alice,bob,sid_5)) may be executed at {406}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))) may be sent to the attacker at output {408}.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))).

40. By 39, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))).

41. The attacker has some term ns_22.
attacker(ns_22).

42. The attacker has some term ne_24.
attacker(ne_24).

43. By 42, the attacker may know ne_24.
By 41, the attacker may know ns_22.
By 40, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)).
Using the function concat3 the attacker may obtain concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))).
attacker(concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))).

44. The entry statestore(bob,alice,sid_6,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 38 may be read at get {1352}.
The message concat3(ne_24,ns_22,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))) that the attacker may have by 43 may be received at input {1288}.
So the entry statestore(bob,alice,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) may be inserted in a table at insert {1351}.
table(statestore(bob,alice,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce)))).

45. The entry statestore(bob,alice,sid_6,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_m(bob),g)),key_m(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_6),g)),key_e(bob,alice,sid_6)),empty,empty,validkey(dhexp_real(key_e(alice,bob,sid_5),g)),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 44 may be read at get {1410}.
The event SendMsg(bob,alice,stagepack_d(sid_6),msg_d(bob,alice,sid_6)) may be executed at {1408}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6))) may be sent to the attacker at output {1409}.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6)))).

46. By 45, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6))).

47. The attacker has some term ns_23.
attacker(ns_23).

48. The attacker has some term ne_25.
attacker(ne_25).

49. By 48, the attacker may know ne_25.
By 47, the attacker may know ns_23.
By 46, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6)).
Using the function concat3 the attacker may obtain concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6))).
attacker(concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6)))).

50. The entry statestore(alice,bob,sid_5,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5)))),keypairpack(empty,empty),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_5),g)),key_e(alice,bob,sid_5)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_m(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_6),g)),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce))) that may be in a table by 34 may be read at get {476}.
The message concat3(ne_25,ns_23,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_s(bob),g))),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_m(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp_real(key_e(alice,bob,sid_5),dhexp_real(key_e(bob,alice,sid_6),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_5),g))),msg_a(alice,bob,sid_5))),validkey(dhexp_real(key_e(bob,alice,sid_6),g))),validkey(dhexp_real(key_s(bob),g)))),validkey(dhexp_real(key_m(bob),g)))),msg_b(bob,alice,sid_6))),msg_c(alice,bob,sid_5))),msg_d(bob,alice,sid_6))) that the attacker may have by 49 may be received at input {412}.
So event RecvEnd(true) may be executed at {475}.
end(RecvEnd(true)).

51. By 50, end(RecvEnd(true)).
The goal is reached, represented in the following fact:
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.

--------------------------------------------------------------
Verification summary:

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_a(sid_a),m_22)) || false cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m_22)) || false cannot be proved.

Query not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))) cannot be proved.

Query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false is true.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_b(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.

Query not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.

Query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))) cannot be proved.

Query not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,c,stagepack_c(sid_a),m_22)) || false cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query event(RecvMsg(bob,alice,stagepack_c(sid_b),m_22)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m_22)) || false cannot be proved.

Query not attacker_p1(msg_c(alice,bob,sid_a)) cannot be proved.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(px,bob)) && event(LeakM(px,bob)) is true.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || (event(LeakS(px,bob)) && event(LeakM(px,bob)) && event(LeakS(pz,alice)) && event(LeakM(pz,alice))) is true.

Query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) && event(LeakM(phase0,bob)) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,c,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) is true.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) || false cannot be proved.

Query event(RecvMsg(alice,bob,stagepack_d(sid_a),m_22)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m_22)) || (event(LeakS(phase0,bob)) && event(LeakM(phase0,bob))) cannot be proved.

Query not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.

Query not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.

Query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakM(phase0,alice))) || (event(LeakS(px,alice)) && event(LeakM(px,alice)) && event(LeakS(pz,bob)) && event(LeakM(pz,bob))) cannot be proved.

Query not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.

Query not event(RecvEnd(true)) cannot be proved.

--------------------------------------------------------------

